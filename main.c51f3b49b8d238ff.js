"use strict";
(self.webpackChunkPokemon_app = self.webpackChunkPokemon_app || []).push([
  [179],
  {
    911: () => {
      function oe(n) {
        return "function" == typeof n;
      }
      function Xi(n) {
        const t = n((i) => {
          Error.call(i), (i.stack = new Error().stack);
        });
        return (
          (t.prototype = Object.create(Error.prototype)),
          (t.prototype.constructor = t),
          t
        );
      }
      const Os = Xi(
        (n) =>
          function (t) {
            n(this),
              (this.message = t
                ? `${t.length} errors occurred during unsubscription:\n${t
                    .map((i, r) => `${r + 1}) ${i.toString()}`)
                    .join("\n  ")}`
                : ""),
              (this.name = "UnsubscriptionError"),
              (this.errors = t);
          }
      );
      function N2(n, e) {
        if (n) {
          const t = n.indexOf(e);
          0 <= t && n.splice(t, 1);
        }
      }
      class He {
        constructor(e) {
          (this.initialTeardown = e),
            (this.closed = !1),
            (this._parentage = null),
            (this._teardowns = null);
        }
        unsubscribe() {
          let e;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: t } = this;
            if (t)
              if (((this._parentage = null), Array.isArray(t)))
                for (const s of t) s.remove(this);
              else t.remove(this);
            const { initialTeardown: i } = this;
            if (oe(i))
              try {
                i();
              } catch (s) {
                e = s instanceof Os ? s.errors : [s];
              }
            const { _teardowns: r } = this;
            if (r) {
              this._teardowns = null;
              for (const s of r)
                try {
                  Z8(s);
                } catch (o) {
                  (e = null != e ? e : []),
                    o instanceof Os ? (e = [...e, ...o.errors]) : e.push(o);
                }
            }
            if (e) throw new Os(e);
          }
        }
        add(e) {
          var t;
          if (e && e !== this)
            if (this.closed) Z8(e);
            else {
              if (e instanceof He) {
                if (e.closed || e._hasParent(this)) return;
                e._addParent(this);
              }
              (this._teardowns =
                null !== (t = this._teardowns) && void 0 !== t ? t : []).push(
                e
              );
            }
        }
        _hasParent(e) {
          const { _parentage: t } = this;
          return t === e || (Array.isArray(t) && t.includes(e));
        }
        _addParent(e) {
          const { _parentage: t } = this;
          this._parentage = Array.isArray(t) ? (t.push(e), t) : t ? [t, e] : e;
        }
        _removeParent(e) {
          const { _parentage: t } = this;
          t === e ? (this._parentage = null) : Array.isArray(t) && N2(t, e);
        }
        remove(e) {
          const { _teardowns: t } = this;
          t && N2(t, e), e instanceof He && e._removeParent(this);
        }
      }
      He.EMPTY = (() => {
        const n = new He();
        return (n.closed = !0), n;
      })();
      const W8 = He.EMPTY;
      function q8(n) {
        return (
          n instanceof He ||
          (n && "closed" in n && oe(n.remove) && oe(n.add) && oe(n.unsubscribe))
        );
      }
      function Z8(n) {
        oe(n) ? n() : n.unsubscribe();
      }
      const Yn = {
          onUnhandledError: null,
          onStoppedNotification: null,
          Promise: void 0,
          useDeprecatedSynchronousErrorHandling: !1,
          useDeprecatedNextContext: !1,
        },
        Ps = {
          setTimeout(...n) {
            const { delegate: e } = Ps;
            return ((null == e ? void 0 : e.setTimeout) || setTimeout)(...n);
          },
          clearTimeout(n) {
            const { delegate: e } = Ps;
            return ((null == e ? void 0 : e.clearTimeout) || clearTimeout)(n);
          },
          delegate: void 0,
        };
      function K8(n) {
        Ps.setTimeout(() => {
          const { onUnhandledError: e } = Yn;
          if (!e) throw n;
          e(n);
        });
      }
      function Ji() {}
      const h_ = w4("C", void 0, void 0);
      function w4(n, e, t) {
        return { kind: n, value: e, error: t };
      }
      let Qn = null;
      function Fs(n) {
        if (Yn.useDeprecatedSynchronousErrorHandling) {
          const e = !Qn;
          if ((e && (Qn = { errorThrown: !1, error: null }), n(), e)) {
            const { errorThrown: t, error: i } = Qn;
            if (((Qn = null), t)) throw i;
          }
        } else n();
      }
      class D4 extends He {
        constructor(e) {
          super(),
            (this.isStopped = !1),
            e
              ? ((this.destination = e), q8(e) && e.add(this))
              : (this.destination = g_);
        }
        static create(e, t, i) {
          return new E4(e, t, i);
        }
        next(e) {
          this.isStopped
            ? A4(
                (function p_(n) {
                  return w4("N", n, void 0);
                })(e),
                this
              )
            : this._next(e);
        }
        error(e) {
          this.isStopped
            ? A4(
                (function d_(n) {
                  return w4("E", void 0, n);
                })(e),
                this
              )
            : ((this.isStopped = !0), this._error(e));
        }
        complete() {
          this.isStopped
            ? A4(h_, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(e) {
          this.destination.next(e);
        }
        _error(e) {
          try {
            this.destination.error(e);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      class E4 extends D4 {
        constructor(e, t, i) {
          let r;
          if ((super(), oe(e))) r = e;
          else if (e) {
            let s;
            ({ next: r, error: t, complete: i } = e),
              this && Yn.useDeprecatedNextContext
                ? ((s = Object.create(e)),
                  (s.unsubscribe = () => this.unsubscribe()))
                : (s = e),
              (r = null == r ? void 0 : r.bind(s)),
              (t = null == t ? void 0 : t.bind(s)),
              (i = null == i ? void 0 : i.bind(s));
          }
          this.destination = {
            next: r ? S4(r) : Ji,
            error: S4(null != t ? t : Y8),
            complete: i ? S4(i) : Ji,
          };
        }
      }
      function S4(n, e) {
        return (...t) => {
          try {
            n(...t);
          } catch (i) {
            Yn.useDeprecatedSynchronousErrorHandling
              ? (function m_(n) {
                  Yn.useDeprecatedSynchronousErrorHandling &&
                    Qn &&
                    ((Qn.errorThrown = !0), (Qn.error = n));
                })(i)
              : K8(i);
          }
        };
      }
      function Y8(n) {
        throw n;
      }
      function A4(n, e) {
        const { onStoppedNotification: t } = Yn;
        t && Ps.setTimeout(() => t(n, e));
      }
      const g_ = { closed: !0, next: Ji, error: Y8, complete: Ji },
        x4 =
          ("function" == typeof Symbol && Symbol.observable) || "@@observable";
      function zn(n) {
        return n;
      }
      let pe = (() => {
        class n {
          constructor(t) {
            t && (this._subscribe = t);
          }
          lift(t) {
            const i = new n();
            return (i.source = this), (i.operator = t), i;
          }
          subscribe(t, i, r) {
            const s = (function __(n) {
              return (
                (n && n instanceof D4) ||
                ((function v_(n) {
                  return n && oe(n.next) && oe(n.error) && oe(n.complete);
                })(n) &&
                  q8(n))
              );
            })(t)
              ? t
              : new E4(t, i, r);
            return (
              Fs(() => {
                const { operator: o, source: a } = this;
                s.add(
                  o
                    ? o.call(s, a)
                    : a
                    ? this._subscribe(s)
                    : this._trySubscribe(s)
                );
              }),
              s
            );
          }
          _trySubscribe(t) {
            try {
              return this._subscribe(t);
            } catch (i) {
              t.error(i);
            }
          }
          forEach(t, i) {
            return new (i = X8(i))((r, s) => {
              let o;
              o = this.subscribe(
                (a) => {
                  try {
                    t(a);
                  } catch (c) {
                    s(c), null == o || o.unsubscribe();
                  }
                },
                s,
                r
              );
            });
          }
          _subscribe(t) {
            var i;
            return null === (i = this.source) || void 0 === i
              ? void 0
              : i.subscribe(t);
          }
          [x4]() {
            return this;
          }
          pipe(...t) {
            return (function Q8(n) {
              return 0 === n.length
                ? zn
                : 1 === n.length
                ? n[0]
                : function (t) {
                    return n.reduce((i, r) => r(i), t);
                  };
            })(t)(this);
          }
          toPromise(t) {
            return new (t = X8(t))((i, r) => {
              let s;
              this.subscribe(
                (o) => (s = o),
                (o) => r(o),
                () => i(s)
              );
            });
          }
        }
        return (n.create = (e) => new n(e)), n;
      })();
      function X8(n) {
        var e;
        return null !== (e = null != n ? n : Yn.Promise) && void 0 !== e
          ? e
          : Promise;
      }
      const y_ = Xi(
        (n) =>
          function () {
            n(this),
              (this.name = "ObjectUnsubscribedError"),
              (this.message = "object unsubscribed");
          }
      );
      let me = (() => {
        class n extends pe {
          constructor() {
            super(),
              (this.closed = !1),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(t) {
            const i = new J8(this, this);
            return (i.operator = t), i;
          }
          _throwIfClosed() {
            if (this.closed) throw new y_();
          }
          next(t) {
            Fs(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                const i = this.observers.slice();
                for (const r of i) r.next(t);
              }
            });
          }
          error(t) {
            Fs(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = t);
                const { observers: i } = this;
                for (; i.length; ) i.shift().error(t);
              }
            });
          }
          complete() {
            Fs(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: t } = this;
                for (; t.length; ) t.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0), (this.observers = null);
          }
          get observed() {
            var t;
            return (
              (null === (t = this.observers) || void 0 === t
                ? void 0
                : t.length) > 0
            );
          }
          _trySubscribe(t) {
            return this._throwIfClosed(), super._trySubscribe(t);
          }
          _subscribe(t) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(t),
              this._innerSubscribe(t)
            );
          }
          _innerSubscribe(t) {
            const { hasError: i, isStopped: r, observers: s } = this;
            return i || r ? W8 : (s.push(t), new He(() => N2(s, t)));
          }
          _checkFinalizedStatuses(t) {
            const { hasError: i, thrownError: r, isStopped: s } = this;
            i ? t.error(r) : s && t.complete();
          }
          asObservable() {
            const t = new pe();
            return (t.source = this), t;
          }
        }
        return (n.create = (e, t) => new J8(e, t)), n;
      })();
      class J8 extends me {
        constructor(e, t) {
          super(), (this.destination = e), (this.source = t);
        }
        next(e) {
          var t, i;
          null ===
            (i =
              null === (t = this.destination) || void 0 === t
                ? void 0
                : t.next) ||
            void 0 === i ||
            i.call(t, e);
        }
        error(e) {
          var t, i;
          null ===
            (i =
              null === (t = this.destination) || void 0 === t
                ? void 0
                : t.error) ||
            void 0 === i ||
            i.call(t, e);
        }
        complete() {
          var e, t;
          null ===
            (t =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.complete) ||
            void 0 === t ||
            t.call(e);
        }
        _subscribe(e) {
          var t, i;
          return null !==
            (i =
              null === (t = this.source) || void 0 === t
                ? void 0
                : t.subscribe(e)) && void 0 !== i
            ? i
            : W8;
        }
      }
      function el(n) {
        return oe(null == n ? void 0 : n.lift);
      }
      function Oe(n) {
        return (e) => {
          if (el(e))
            return e.lift(function (t) {
              try {
                return n(t, this);
              } catch (i) {
                this.error(i);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
      class Te extends D4 {
        constructor(e, t, i, r, s) {
          super(e),
            (this.onFinalize = s),
            (this._next = t
              ? function (o) {
                  try {
                    t(o);
                  } catch (a) {
                    e.error(a);
                  }
                }
              : super._next),
            (this._error = r
              ? function (o) {
                  try {
                    r(o);
                  } catch (a) {
                    e.error(a);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = i
              ? function () {
                  try {
                    i();
                  } catch (o) {
                    e.error(o);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var e;
          const { closed: t } = this;
          super.unsubscribe(),
            !t &&
              (null === (e = this.onFinalize) || void 0 === e || e.call(this));
        }
      }
      function ae(n, e) {
        return Oe((t, i) => {
          let r = 0;
          t.subscribe(
            new Te(i, (s) => {
              i.next(n.call(e, s, r++));
            })
          );
        });
      }
      function Xn(n) {
        return this instanceof Xn ? ((this.v = n), this) : new Xn(n);
      }
      function b_(n, e, t) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var r,
          i = t.apply(n, e || []),
          s = [];
        return (
          (r = {}),
          o("next"),
          o("throw"),
          o("return"),
          (r[Symbol.asyncIterator] = function () {
            return this;
          }),
          r
        );
        function o(h) {
          i[h] &&
            (r[h] = function (d) {
              return new Promise(function (p, m) {
                s.push([h, d, p, m]) > 1 || a(h, d);
              });
            });
        }
        function a(h, d) {
          try {
            !(function c(h) {
              h.value instanceof Xn
                ? Promise.resolve(h.value.v).then(l, u)
                : f(s[0][2], h);
            })(i[h](d));
          } catch (p) {
            f(s[0][3], p);
          }
        }
        function l(h) {
          a("next", h);
        }
        function u(h) {
          a("throw", h);
        }
        function f(h, d) {
          h(d), s.shift(), s.length && a(s[0][0], s[0][1]);
        }
      }
      function w_(n) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var t,
          e = n[Symbol.asyncIterator];
        return e
          ? e.call(n)
          : ((n = (function il(n) {
              var e = "function" == typeof Symbol && Symbol.iterator,
                t = e && n[e],
                i = 0;
              if (t) return t.call(n);
              if (n && "number" == typeof n.length)
                return {
                  next: function () {
                    return (
                      n && i >= n.length && (n = void 0),
                      { value: n && n[i++], done: !n }
                    );
                  },
                };
              throw new TypeError(
                e
                  ? "Object is not iterable."
                  : "Symbol.iterator is not defined."
              );
            })(n)),
            (t = {}),
            i("next"),
            i("throw"),
            i("return"),
            (t[Symbol.asyncIterator] = function () {
              return this;
            }),
            t);
        function i(s) {
          t[s] =
            n[s] &&
            function (o) {
              return new Promise(function (a, c) {
                !(function r(s, o, a, c) {
                  Promise.resolve(c).then(function (l) {
                    s({ value: l, done: a });
                  }, o);
                })(a, c, (o = n[s](o)).done, o.value);
              });
            };
        }
      }
      const L4 = (n) =>
        n && "number" == typeof n.length && "function" != typeof n;
      function rl(n) {
        return oe(null == n ? void 0 : n.then);
      }
      function sl(n) {
        return oe(n[x4]);
      }
      function ol(n) {
        return (
          Symbol.asyncIterator &&
          oe(null == n ? void 0 : n[Symbol.asyncIterator])
        );
      }
      function al(n) {
        return new TypeError(
          `You provided ${
            null !== n && "object" == typeof n ? "an invalid object" : `'${n}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      const cl = (function E_() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      })();
      function ll(n) {
        return oe(null == n ? void 0 : n[cl]);
      }
      function ul(n) {
        return b_(this, arguments, function* () {
          const t = n.getReader();
          try {
            for (;;) {
              const { value: i, done: r } = yield Xn(t.read());
              if (r) return yield Xn(void 0);
              yield yield Xn(i);
            }
          } finally {
            t.releaseLock();
          }
        });
      }
      function fl(n) {
        return oe(null == n ? void 0 : n.getReader);
      }
      function It(n) {
        if (n instanceof pe) return n;
        if (null != n) {
          if (sl(n))
            return (function S_(n) {
              return new pe((e) => {
                const t = n[x4]();
                if (oe(t.subscribe)) return t.subscribe(e);
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              });
            })(n);
          if (L4(n))
            return (function A_(n) {
              return new pe((e) => {
                for (let t = 0; t < n.length && !e.closed; t++) e.next(n[t]);
                e.complete();
              });
            })(n);
          if (rl(n))
            return (function x_(n) {
              return new pe((e) => {
                n.then(
                  (t) => {
                    e.closed || (e.next(t), e.complete());
                  },
                  (t) => e.error(t)
                ).then(null, K8);
              });
            })(n);
          if (ol(n)) return hl(n);
          if (ll(n))
            return (function z_(n) {
              return new pe((e) => {
                for (const t of n) if ((e.next(t), e.closed)) return;
                e.complete();
              });
            })(n);
          if (fl(n))
            return (function L_(n) {
              return hl(ul(n));
            })(n);
        }
        throw al(n);
      }
      function hl(n) {
        return new pe((e) => {
          (function T_(n, e) {
            var t, i, r, s;
            return (function C_(n, e, t, i) {
              return new (t || (t = Promise))(function (s, o) {
                function a(u) {
                  try {
                    l(i.next(u));
                  } catch (f) {
                    o(f);
                  }
                }
                function c(u) {
                  try {
                    l(i.throw(u));
                  } catch (f) {
                    o(f);
                  }
                }
                function l(u) {
                  u.done
                    ? s(u.value)
                    : (function r(s) {
                        return s instanceof t
                          ? s
                          : new t(function (o) {
                              o(s);
                            });
                      })(u.value).then(a, c);
                }
                l((i = i.apply(n, e || [])).next());
              });
            })(this, void 0, void 0, function* () {
              try {
                for (t = w_(n); !(i = yield t.next()).done; )
                  if ((e.next(i.value), e.closed)) return;
              } catch (o) {
                r = { error: o };
              } finally {
                try {
                  i && !i.done && (s = t.return) && (yield s.call(t));
                } finally {
                  if (r) throw r.error;
                }
              }
              e.complete();
            });
          })(n, e).catch((t) => e.error(t));
        });
      }
      function rn(n, e, t, i = 0, r = !1) {
        const s = e.schedule(function () {
          t(), r ? n.add(this.schedule(null, i)) : this.unsubscribe();
        }, i);
        if ((n.add(s), !r)) return s;
      }
      function Xe(n, e, t = 1 / 0) {
        return oe(e)
          ? Xe((i, r) => ae((s, o) => e(i, s, r, o))(It(n(i, r))), t)
          : ("number" == typeof e && (t = e),
            Oe((i, r) =>
              (function N_(n, e, t, i, r, s, o, a) {
                const c = [];
                let l = 0,
                  u = 0,
                  f = !1;
                const h = () => {
                    f && !c.length && !l && e.complete();
                  },
                  d = (m) => (l < i ? p(m) : c.push(m)),
                  p = (m) => {
                    s && e.next(m), l++;
                    let g = !1;
                    It(t(m, u++)).subscribe(
                      new Te(
                        e,
                        (y) => {
                          null == r || r(y), s ? d(y) : e.next(y);
                        },
                        () => {
                          g = !0;
                        },
                        void 0,
                        () => {
                          if (g)
                            try {
                              for (l--; c.length && l < i; ) {
                                const y = c.shift();
                                o ? rn(e, o, () => p(y)) : p(y);
                              }
                              h();
                            } catch (y) {
                              e.error(y);
                            }
                        }
                      )
                    );
                  };
                return (
                  n.subscribe(
                    new Te(e, d, () => {
                      (f = !0), h();
                    })
                  ),
                  () => {
                    null == a || a();
                  }
                );
              })(i, r, n, t)
            ));
      }
      function er(n = 1 / 0) {
        return Xe(zn, n);
      }
      const sn = new pe((n) => n.complete());
      function dl(n) {
        return n && oe(n.schedule);
      }
      function T4(n) {
        return n[n.length - 1];
      }
      function pl(n) {
        return oe(T4(n)) ? n.pop() : void 0;
      }
      function tr(n) {
        return dl(T4(n)) ? n.pop() : void 0;
      }
      function ml(n, e = 0) {
        return Oe((t, i) => {
          t.subscribe(
            new Te(
              i,
              (r) => rn(i, n, () => i.next(r), e),
              () => rn(i, n, () => i.complete(), e),
              (r) => rn(i, n, () => i.error(r), e)
            )
          );
        });
      }
      function gl(n, e = 0) {
        return Oe((t, i) => {
          i.add(n.schedule(() => t.subscribe(i), e));
        });
      }
      function vl(n, e) {
        if (!n) throw new Error("Iterable cannot be null");
        return new pe((t) => {
          rn(t, e, () => {
            const i = n[Symbol.asyncIterator]();
            rn(
              t,
              e,
              () => {
                i.next().then((r) => {
                  r.done ? t.complete() : t.next(r.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      function st(n, e) {
        return e
          ? (function R_(n, e) {
              if (null != n) {
                if (sl(n))
                  return (function I_(n, e) {
                    return It(n).pipe(gl(e), ml(e));
                  })(n, e);
                if (L4(n))
                  return (function O_(n, e) {
                    return new pe((t) => {
                      let i = 0;
                      return e.schedule(function () {
                        i === n.length
                          ? t.complete()
                          : (t.next(n[i++]), t.closed || this.schedule());
                      });
                    });
                  })(n, e);
                if (rl(n))
                  return (function H_(n, e) {
                    return It(n).pipe(gl(e), ml(e));
                  })(n, e);
                if (ol(n)) return vl(n, e);
                if (ll(n))
                  return (function P_(n, e) {
                    return new pe((t) => {
                      let i;
                      return (
                        rn(t, e, () => {
                          (i = n[cl]()),
                            rn(
                              t,
                              e,
                              () => {
                                let r, s;
                                try {
                                  ({ value: r, done: s } = i.next());
                                } catch (o) {
                                  return void t.error(o);
                                }
                                s ? t.complete() : t.next(r);
                              },
                              0,
                              !0
                            );
                        }),
                        () => oe(null == i ? void 0 : i.return) && i.return()
                      );
                    });
                  })(n, e);
                if (fl(n))
                  return (function F_(n, e) {
                    return vl(ul(n), e);
                  })(n, e);
              }
              throw al(n);
            })(n, e)
          : It(n);
      }
      function V2(...n) {
        const e = tr(n),
          t = (function k_(n, e) {
            return "number" == typeof T4(n) ? n.pop() : e;
          })(n, 1 / 0),
          i = n;
        return i.length ? (1 === i.length ? It(i[0]) : er(t)(st(i, e))) : sn;
      }
      function on(n) {
        return n <= 0
          ? () => sn
          : Oe((e, t) => {
              let i = 0;
              e.subscribe(
                new Te(t, (r) => {
                  ++i <= n && (t.next(r), n <= i && t.complete());
                })
              );
            });
      }
      function N4(n, e, ...t) {
        return !0 === e
          ? (n(), null)
          : !1 === e
          ? null
          : e(...t)
              .pipe(on(1))
              .subscribe(() => n());
      }
      function ye(n) {
        for (let e in n) if (n[e] === ye) return e;
        throw Error("Could not find renamed property on target object.");
      }
      function V4(n, e) {
        for (const t in e)
          e.hasOwnProperty(t) && !n.hasOwnProperty(t) && (n[t] = e[t]);
      }
      function ge(n) {
        if ("string" == typeof n) return n;
        if (Array.isArray(n)) return "[" + n.map(ge).join(", ") + "]";
        if (null == n) return "" + n;
        if (n.overriddenName) return `${n.overriddenName}`;
        if (n.name) return `${n.name}`;
        const e = n.toString();
        if (null == e) return "" + e;
        const t = e.indexOf("\n");
        return -1 === t ? e : e.substring(0, t);
      }
      function k4(n, e) {
        return null == n || "" === n
          ? null === e
            ? ""
            : e
          : null == e || "" === e
          ? n
          : n + " " + e;
      }
      const j_ = ye({ __forward_ref__: ye });
      function we(n) {
        return (
          (n.__forward_ref__ = we),
          (n.toString = function () {
            return ge(this());
          }),
          n
        );
      }
      function Z(n) {
        return _l(n) ? n() : n;
      }
      function _l(n) {
        return (
          "function" == typeof n &&
          n.hasOwnProperty(j_) &&
          n.__forward_ref__ === we
        );
      }
      class ie extends Error {
        constructor(e, t) {
          super(
            (function I4(n, e) {
              return `NG0${Math.abs(n)}${e ? ": " + e : ""}`;
            })(e, t)
          ),
            (this.code = e);
        }
      }
      function B(n) {
        return "string" == typeof n ? n : null == n ? "" : String(n);
      }
      function vt(n) {
        return "function" == typeof n
          ? n.name || n.toString()
          : "object" == typeof n && null != n && "function" == typeof n.type
          ? n.type.name || n.type.toString()
          : B(n);
      }
      function Rs(n, e) {
        const t = e ? ` in ${e}` : "";
        throw new ie(-201, `No provider for ${vt(n)} found${t}`);
      }
      function Ot(n, e) {
        null == n &&
          (function ze(n, e, t, i) {
            throw new Error(
              `ASSERTION ERROR: ${n}` +
                (null == i ? "" : ` [Expected=> ${t} ${i} ${e} <=Actual]`)
            );
          })(e, n, null, "!=");
      }
      function z(n) {
        return {
          token: n.token,
          providedIn: n.providedIn || null,
          factory: n.factory,
          value: void 0,
        };
      }
      function ve(n) {
        return { providers: n.providers || [], imports: n.imports || [] };
      }
      function H4(n) {
        return yl(n, Bs) || yl(n, Ml);
      }
      function yl(n, e) {
        return n.hasOwnProperty(e) ? n[e] : null;
      }
      function Cl(n) {
        return n && (n.hasOwnProperty(O4) || n.hasOwnProperty(K_))
          ? n[O4]
          : null;
      }
      const Bs = ye({ ɵprov: ye }),
        O4 = ye({ ɵinj: ye }),
        Ml = ye({ ngInjectableDef: ye }),
        K_ = ye({ ngInjectorDef: ye });
      var U = (() => (
        ((U = U || {})[(U.Default = 0)] = "Default"),
        (U[(U.Host = 1)] = "Host"),
        (U[(U.Self = 2)] = "Self"),
        (U[(U.SkipSelf = 4)] = "SkipSelf"),
        (U[(U.Optional = 8)] = "Optional"),
        U
      ))();
      let P4;
      function Ln(n) {
        const e = P4;
        return (P4 = n), e;
      }
      function bl(n, e, t) {
        const i = H4(n);
        return i && "root" == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : t & U.Optional
          ? null
          : void 0 !== e
          ? e
          : void Rs(ge(n), "Injector");
      }
      function Tn(n) {
        return { toString: n }.toString();
      }
      var p1 = (() => (
          ((p1 = p1 || {})[(p1.OnPush = 0)] = "OnPush"),
          (p1[(p1.Default = 1)] = "Default"),
          p1
        ))(),
        m1 = (() => {
          return (
            ((n = m1 || (m1 = {}))[(n.Emulated = 0)] = "Emulated"),
            (n[(n.None = 2)] = "None"),
            (n[(n.ShadowDom = 3)] = "ShadowDom"),
            m1
          );
          var n;
        })();
      const Q_ = "undefined" != typeof globalThis && globalThis,
        X_ = "undefined" != typeof window && window,
        J_ =
          "undefined" != typeof self &&
          "undefined" != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          self,
        _e = Q_ || ("undefined" != typeof global && global) || X_ || J_,
        k2 = {},
        Ce = [],
        js = ye({ ɵcmp: ye }),
        F4 = ye({ ɵdir: ye }),
        R4 = ye({ ɵpipe: ye }),
        wl = ye({ ɵmod: ye }),
        cn = ye({ ɵfac: ye }),
        nr = ye({ __NG_ELEMENT_ID__: ye });
      let ey = 0;
      function ot(n) {
        return Tn(() => {
          const t = {},
            i = {
              type: n.type,
              providersResolver: null,
              decls: n.decls,
              vars: n.vars,
              factory: null,
              template: n.template || null,
              consts: n.consts || null,
              ngContentSelectors: n.ngContentSelectors,
              hostBindings: n.hostBindings || null,
              hostVars: n.hostVars || 0,
              hostAttrs: n.hostAttrs || null,
              contentQueries: n.contentQueries || null,
              declaredInputs: t,
              inputs: null,
              outputs: null,
              exportAs: n.exportAs || null,
              onPush: n.changeDetection === p1.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              selectors: n.selectors || Ce,
              viewQuery: n.viewQuery || null,
              features: n.features || null,
              data: n.data || {},
              encapsulation: n.encapsulation || m1.Emulated,
              id: "c",
              styles: n.styles || Ce,
              _: null,
              setInput: null,
              schemas: n.schemas || null,
              tView: null,
            },
            r = n.directives,
            s = n.features,
            o = n.pipes;
          return (
            (i.id += ey++),
            (i.inputs = Al(n.inputs, t)),
            (i.outputs = Al(n.outputs)),
            s && s.forEach((a) => a(i)),
            (i.directiveDefs = r
              ? () => ("function" == typeof r ? r() : r).map(Dl)
              : null),
            (i.pipeDefs = o
              ? () => ("function" == typeof o ? o() : o).map(El)
              : null),
            i
          );
        });
      }
      function Dl(n) {
        return (
          ht(n) ||
          (function Nn(n) {
            return n[F4] || null;
          })(n)
        );
      }
      function El(n) {
        return (function Jn(n) {
          return n[R4] || null;
        })(n);
      }
      const Sl = {};
      function Me(n) {
        return Tn(() => {
          const e = {
            type: n.type,
            bootstrap: n.bootstrap || Ce,
            declarations: n.declarations || Ce,
            imports: n.imports || Ce,
            exports: n.exports || Ce,
            transitiveCompileScopes: null,
            schemas: n.schemas || null,
            id: n.id || null,
          };
          return null != n.id && (Sl[n.id] = n.type), e;
        });
      }
      function Al(n, e) {
        if (null == n) return k2;
        const t = {};
        for (const i in n)
          if (n.hasOwnProperty(i)) {
            let r = n[i],
              s = r;
            Array.isArray(r) && ((s = r[1]), (r = r[0])),
              (t[r] = i),
              e && (e[r] = s);
          }
        return t;
      }
      const V = ot;
      function _t(n) {
        return {
          type: n.type,
          name: n.name,
          factory: null,
          pure: !1 !== n.pure,
          onDestroy: n.type.prototype.ngOnDestroy || null,
        };
      }
      function ht(n) {
        return n[js] || null;
      }
      function Qt(n, e) {
        const t = n[wl] || null;
        if (!t && !0 === e)
          throw new Error(`Type ${ge(n)} does not have '\u0275mod' property.`);
        return t;
      }
      const K = 11;
      function N1(n) {
        return Array.isArray(n) && "object" == typeof n[1];
      }
      function v1(n) {
        return Array.isArray(n) && !0 === n[1];
      }
      function U4(n) {
        return 0 != (8 & n.flags);
      }
      function Ws(n) {
        return 2 == (2 & n.flags);
      }
      function qs(n) {
        return 1 == (1 & n.flags);
      }
      function _1(n) {
        return null !== n.template;
      }
      function oy(n) {
        return 0 != (512 & n[2]);
      }
      function r2(n, e) {
        return n.hasOwnProperty(cn) ? n[cn] : null;
      }
      class ly {
        constructor(e, t, i) {
          (this.previousValue = e),
            (this.currentValue = t),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Je() {
        return zl;
      }
      function zl(n) {
        return n.type.prototype.ngOnChanges && (n.setInput = fy), uy;
      }
      function uy() {
        const n = Tl(this),
          e = null == n ? void 0 : n.current;
        if (e) {
          const t = n.previous;
          if (t === k2) n.previous = e;
          else for (let i in e) t[i] = e[i];
          (n.current = null), this.ngOnChanges(e);
        }
      }
      function fy(n, e, t, i) {
        const r =
            Tl(n) ||
            (function hy(n, e) {
              return (n[Ll] = e);
            })(n, { previous: k2, current: null }),
          s = r.current || (r.current = {}),
          o = r.previous,
          a = this.declaredInputs[t],
          c = o[a];
        (s[a] = new ly(c && c.currentValue, e, o === k2)), (n[i] = e);
      }
      Je.ngInherit = !0;
      const Ll = "__ngSimpleChanges__";
      function Tl(n) {
        return n[Ll] || null;
      }
      const Nl = "http://www.w3.org/2000/svg";
      let W4;
      function q4() {
        return void 0 !== W4
          ? W4
          : "undefined" != typeof document
          ? document
          : void 0;
      }
      function Pe(n) {
        return !!n.listen;
      }
      const kl = { createRenderer: (n, e) => q4() };
      function We(n) {
        for (; Array.isArray(n); ) n = n[0];
        return n;
      }
      function Zs(n, e) {
        return We(e[n]);
      }
      function e1(n, e) {
        return We(e[n.index]);
      }
      function Z4(n, e) {
        return n.data[e];
      }
      function F2(n, e) {
        return n[e];
      }
      function Ft(n, e) {
        const t = e[n];
        return N1(t) ? t : t[0];
      }
      function Il(n) {
        return 4 == (4 & n[2]);
      }
      function K4(n) {
        return 128 == (128 & n[2]);
      }
      function Vn(n, e) {
        return null == e ? null : n[e];
      }
      function Hl(n) {
        n[18] = 0;
      }
      function Y4(n, e) {
        n[5] += e;
        let t = n,
          i = n[3];
        for (
          ;
          null !== i && ((1 === e && 1 === t[5]) || (-1 === e && 0 === t[5]));

        )
          (i[5] += e), (t = i), (i = i[3]);
      }
      const R = {
        lFrame: $l(null),
        bindingsEnabled: !0,
        isInCheckNoChangesMode: !1,
      };
      function Ol() {
        return R.bindingsEnabled;
      }
      function b() {
        return R.lFrame.lView;
      }
      function re() {
        return R.lFrame.tView;
      }
      function Vt(n) {
        return (R.lFrame.contextLView = n), n[8];
      }
      function et() {
        let n = Pl();
        for (; null !== n && 64 === n.type; ) n = n.parent;
        return n;
      }
      function Pl() {
        return R.lFrame.currentTNode;
      }
      function V1(n, e) {
        const t = R.lFrame;
        (t.currentTNode = n), (t.isParent = e);
      }
      function Q4() {
        return R.lFrame.isParent;
      }
      function X4() {
        R.lFrame.isParent = !1;
      }
      function Ks() {
        return R.isInCheckNoChangesMode;
      }
      function Ys(n) {
        R.isInCheckNoChangesMode = n;
      }
      function yt() {
        const n = R.lFrame;
        let e = n.bindingRootIndex;
        return (
          -1 === e && (e = n.bindingRootIndex = n.tView.bindingStartIndex), e
        );
      }
      function R2() {
        return R.lFrame.bindingIndex++;
      }
      function un(n) {
        const e = R.lFrame,
          t = e.bindingIndex;
        return (e.bindingIndex = e.bindingIndex + n), t;
      }
      function Sy(n, e) {
        const t = R.lFrame;
        (t.bindingIndex = t.bindingRootIndex = n), J4(e);
      }
      function J4(n) {
        R.lFrame.currentDirectiveIndex = n;
      }
      function Bl() {
        return R.lFrame.currentQueryIndex;
      }
      function t6(n) {
        R.lFrame.currentQueryIndex = n;
      }
      function xy(n) {
        const e = n[1];
        return 2 === e.type ? e.declTNode : 1 === e.type ? n[6] : null;
      }
      function jl(n, e, t) {
        if (t & U.SkipSelf) {
          let r = e,
            s = n;
          for (
            ;
            !((r = r.parent),
            null !== r ||
              t & U.Host ||
              ((r = xy(s)), null === r || ((s = s[15]), 10 & r.type)));

          );
          if (null === r) return !1;
          (e = r), (n = s);
        }
        const i = (R.lFrame = Ul());
        return (i.currentTNode = e), (i.lView = n), !0;
      }
      function Qs(n) {
        const e = Ul(),
          t = n[1];
        (R.lFrame = e),
          (e.currentTNode = t.firstChild),
          (e.lView = n),
          (e.tView = t),
          (e.contextLView = n),
          (e.bindingIndex = t.bindingStartIndex),
          (e.inI18n = !1);
      }
      function Ul() {
        const n = R.lFrame,
          e = null === n ? null : n.child;
        return null === e ? $l(n) : e;
      }
      function $l(n) {
        const e = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: n,
          child: null,
          inI18n: !1,
        };
        return null !== n && (n.child = e), e;
      }
      function Gl() {
        const n = R.lFrame;
        return (
          (R.lFrame = n.parent), (n.currentTNode = null), (n.lView = null), n
        );
      }
      const Wl = Gl;
      function Xs() {
        const n = Gl();
        (n.isParent = !0),
          (n.tView = null),
          (n.selectedIndex = -1),
          (n.contextLView = null),
          (n.elementDepthCount = 0),
          (n.currentDirectiveIndex = -1),
          (n.currentNamespace = null),
          (n.bindingRootIndex = -1),
          (n.bindingIndex = -1),
          (n.currentQueryIndex = 0);
      }
      function Ct() {
        return R.lFrame.selectedIndex;
      }
      function kn(n) {
        R.lFrame.selectedIndex = n;
      }
      function Fe() {
        const n = R.lFrame;
        return Z4(n.tView, n.selectedIndex);
      }
      function s2() {
        R.lFrame.currentNamespace = Nl;
      }
      function Js(n, e) {
        for (let t = e.directiveStart, i = e.directiveEnd; t < i; t++) {
          const s = n.data[t].type.prototype,
            {
              ngAfterContentInit: o,
              ngAfterContentChecked: a,
              ngAfterViewInit: c,
              ngAfterViewChecked: l,
              ngOnDestroy: u,
            } = s;
          o && (n.contentHooks || (n.contentHooks = [])).push(-t, o),
            a &&
              ((n.contentHooks || (n.contentHooks = [])).push(t, a),
              (n.contentCheckHooks || (n.contentCheckHooks = [])).push(t, a)),
            c && (n.viewHooks || (n.viewHooks = [])).push(-t, c),
            l &&
              ((n.viewHooks || (n.viewHooks = [])).push(t, l),
              (n.viewCheckHooks || (n.viewCheckHooks = [])).push(t, l)),
            null != u && (n.destroyHooks || (n.destroyHooks = [])).push(t, u);
        }
      }
      function eo(n, e, t) {
        ql(n, e, 3, t);
      }
      function to(n, e, t, i) {
        (3 & n[2]) === t && ql(n, e, t, i);
      }
      function n6(n, e) {
        let t = n[2];
        (3 & t) === e && ((t &= 2047), (t += 1), (n[2] = t));
      }
      function ql(n, e, t, i) {
        const s = null != i ? i : -1,
          o = e.length - 1;
        let a = 0;
        for (let c = void 0 !== i ? 65535 & n[18] : 0; c < o; c++)
          if ("number" == typeof e[c + 1]) {
            if (((a = e[c]), null != i && a >= i)) break;
          } else
            e[c] < 0 && (n[18] += 65536),
              (a < s || -1 == s) &&
                (Hy(n, t, e, c), (n[18] = (4294901760 & n[18]) + c + 2)),
              c++;
      }
      function Hy(n, e, t, i) {
        const r = t[i] < 0,
          s = t[i + 1],
          a = n[r ? -t[i] : t[i]];
        if (r) {
          if (n[2] >> 11 < n[18] >> 16 && (3 & n[2]) === e) {
            n[2] += 2048;
            try {
              s.call(a);
            } finally {
            }
          }
        } else
          try {
            s.call(a);
          } finally {
          }
      }
      class ar {
        constructor(e, t, i) {
          (this.factory = e),
            (this.resolving = !1),
            (this.canSeeViewProviders = t),
            (this.injectImpl = i);
        }
      }
      function no(n, e, t) {
        const i = Pe(n);
        let r = 0;
        for (; r < t.length; ) {
          const s = t[r];
          if ("number" == typeof s) {
            if (0 !== s) break;
            r++;
            const o = t[r++],
              a = t[r++],
              c = t[r++];
            i ? n.setAttribute(e, a, c, o) : e.setAttributeNS(o, a, c);
          } else {
            const o = s,
              a = t[++r];
            r6(o)
              ? i && n.setProperty(e, o, a)
              : i
              ? n.setAttribute(e, o, a)
              : e.setAttribute(o, a),
              r++;
          }
        }
        return r;
      }
      function Zl(n) {
        return 3 === n || 4 === n || 6 === n;
      }
      function r6(n) {
        return 64 === n.charCodeAt(0);
      }
      function io(n, e) {
        if (null !== e && 0 !== e.length)
          if (null === n || 0 === n.length) n = e.slice();
          else {
            let t = -1;
            for (let i = 0; i < e.length; i++) {
              const r = e[i];
              "number" == typeof r
                ? (t = r)
                : 0 === t ||
                  Kl(n, t, r, null, -1 === t || 2 === t ? e[++i] : null);
            }
          }
        return n;
      }
      function Kl(n, e, t, i, r) {
        let s = 0,
          o = n.length;
        if (-1 === e) o = -1;
        else
          for (; s < n.length; ) {
            const a = n[s++];
            if ("number" == typeof a) {
              if (a === e) {
                o = -1;
                break;
              }
              if (a > e) {
                o = s - 1;
                break;
              }
            }
          }
        for (; s < n.length; ) {
          const a = n[s];
          if ("number" == typeof a) break;
          if (a === t) {
            if (null === i) return void (null !== r && (n[s + 1] = r));
            if (i === n[s + 1]) return void (n[s + 2] = r);
          }
          s++, null !== i && s++, null !== r && s++;
        }
        -1 !== o && (n.splice(o, 0, e), (s = o + 1)),
          n.splice(s++, 0, t),
          null !== i && n.splice(s++, 0, i),
          null !== r && n.splice(s++, 0, r);
      }
      function Yl(n) {
        return -1 !== n;
      }
      function B2(n) {
        return 32767 & n;
      }
      function j2(n, e) {
        let t = (function By(n) {
            return n >> 16;
          })(n),
          i = e;
        for (; t > 0; ) (i = i[15]), t--;
        return i;
      }
      let s6 = !0;
      function ro(n) {
        const e = s6;
        return (s6 = n), e;
      }
      let jy = 0;
      function lr(n, e) {
        const t = a6(n, e);
        if (-1 !== t) return t;
        const i = e[1];
        i.firstCreatePass &&
          ((n.injectorIndex = e.length),
          o6(i.data, n),
          o6(e, null),
          o6(i.blueprint, null));
        const r = so(n, e),
          s = n.injectorIndex;
        if (Yl(r)) {
          const o = B2(r),
            a = j2(r, e),
            c = a[1].data;
          for (let l = 0; l < 8; l++) e[s + l] = a[o + l] | c[o + l];
        }
        return (e[s + 8] = r), s;
      }
      function o6(n, e) {
        n.push(0, 0, 0, 0, 0, 0, 0, 0, e);
      }
      function a6(n, e) {
        return -1 === n.injectorIndex ||
          (n.parent && n.parent.injectorIndex === n.injectorIndex) ||
          null === e[n.injectorIndex + 8]
          ? -1
          : n.injectorIndex;
      }
      function so(n, e) {
        if (n.parent && -1 !== n.parent.injectorIndex)
          return n.parent.injectorIndex;
        let t = 0,
          i = null,
          r = e;
        for (; null !== r; ) {
          const s = r[1],
            o = s.type;
          if (((i = 2 === o ? s.declTNode : 1 === o ? r[6] : null), null === i))
            return -1;
          if ((t++, (r = r[15]), -1 !== i.injectorIndex))
            return i.injectorIndex | (t << 16);
        }
        return -1;
      }
      function oo(n, e, t) {
        !(function Uy(n, e, t) {
          let i;
          "string" == typeof t
            ? (i = t.charCodeAt(0) || 0)
            : t.hasOwnProperty(nr) && (i = t[nr]),
            null == i && (i = t[nr] = jy++);
          const r = 255 & i;
          e.data[n + (r >> 5)] |= 1 << r;
        })(n, e, t);
      }
      function Jl(n, e, t) {
        if (t & U.Optional) return n;
        Rs(e, "NodeInjector");
      }
      function e5(n, e, t, i) {
        if (
          (t & U.Optional && void 0 === i && (i = null),
          0 == (t & (U.Self | U.Host)))
        ) {
          const r = n[9],
            s = Ln(void 0);
          try {
            return r ? r.get(e, i, t & U.Optional) : bl(e, i, t & U.Optional);
          } finally {
            Ln(s);
          }
        }
        return Jl(i, e, t);
      }
      function t5(n, e, t, i = U.Default, r) {
        if (null !== n) {
          const s = (function qy(n) {
            if ("string" == typeof n) return n.charCodeAt(0) || 0;
            const e = n.hasOwnProperty(nr) ? n[nr] : void 0;
            return "number" == typeof e ? (e >= 0 ? 255 & e : Gy) : e;
          })(t);
          if ("function" == typeof s) {
            if (!jl(e, n, i)) return i & U.Host ? Jl(r, t, i) : e5(e, t, i, r);
            try {
              const o = s(i);
              if (null != o || i & U.Optional) return o;
              Rs(t);
            } finally {
              Wl();
            }
          } else if ("number" == typeof s) {
            let o = null,
              a = a6(n, e),
              c = -1,
              l = i & U.Host ? e[16][6] : null;
            for (
              (-1 === a || i & U.SkipSelf) &&
              ((c = -1 === a ? so(n, e) : e[a + 8]),
              -1 !== c && r5(i, !1)
                ? ((o = e[1]), (a = B2(c)), (e = j2(c, e)))
                : (a = -1));
              -1 !== a;

            ) {
              const u = e[1];
              if (i5(s, a, u.data)) {
                const f = Wy(a, e, t, o, i, l);
                if (f !== n5) return f;
              }
              (c = e[a + 8]),
                -1 !== c && r5(i, e[1].data[a + 8] === l) && i5(s, a, e)
                  ? ((o = u), (a = B2(c)), (e = j2(c, e)))
                  : (a = -1);
            }
          }
        }
        return e5(e, t, i, r);
      }
      const n5 = {};
      function Gy() {
        return new U2(et(), b());
      }
      function Wy(n, e, t, i, r, s) {
        const o = e[1],
          a = o.data[n + 8],
          u = ao(
            a,
            o,
            t,
            null == i ? Ws(a) && s6 : i != o && 0 != (3 & a.type),
            r & U.Host && s === a
          );
        return null !== u ? ur(e, o, u, a) : n5;
      }
      function ao(n, e, t, i, r) {
        const s = n.providerIndexes,
          o = e.data,
          a = 1048575 & s,
          c = n.directiveStart,
          u = s >> 20,
          h = r ? a + u : n.directiveEnd;
        for (let d = i ? a : a + u; d < h; d++) {
          const p = o[d];
          if ((d < c && t === p) || (d >= c && p.type === t)) return d;
        }
        if (r) {
          const d = o[c];
          if (d && _1(d) && d.type === t) return c;
        }
        return null;
      }
      function ur(n, e, t, i) {
        let r = n[t];
        const s = e.data;
        if (
          (function Oy(n) {
            return n instanceof ar;
          })(r)
        ) {
          const o = r;
          o.resolving &&
            (function U_(n, e) {
              const t = e ? `. Dependency path: ${e.join(" > ")} > ${n}` : "";
              throw new ie(
                -200,
                `Circular dependency in DI detected for ${n}${t}`
              );
            })(vt(s[t]));
          const a = ro(o.canSeeViewProviders);
          o.resolving = !0;
          const c = o.injectImpl ? Ln(o.injectImpl) : null;
          jl(n, i, U.Default);
          try {
            (r = n[t] = o.factory(void 0, s, n, i)),
              e.firstCreatePass &&
                t >= i.directiveStart &&
                (function Iy(n, e, t) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: r,
                    ngDoCheck: s,
                  } = e.type.prototype;
                  if (i) {
                    const o = zl(e);
                    (t.preOrderHooks || (t.preOrderHooks = [])).push(n, o),
                      (
                        t.preOrderCheckHooks || (t.preOrderCheckHooks = [])
                      ).push(n, o);
                  }
                  r &&
                    (t.preOrderHooks || (t.preOrderHooks = [])).push(0 - n, r),
                    s &&
                      ((t.preOrderHooks || (t.preOrderHooks = [])).push(n, s),
                      (
                        t.preOrderCheckHooks || (t.preOrderCheckHooks = [])
                      ).push(n, s));
                })(t, s[t], e);
          } finally {
            null !== c && Ln(c), ro(a), (o.resolving = !1), Wl();
          }
        }
        return r;
      }
      function i5(n, e, t) {
        return !!(t[e + (n >> 5)] & (1 << n));
      }
      function r5(n, e) {
        return !(n & U.Self || (n & U.Host && e));
      }
      class U2 {
        constructor(e, t) {
          (this._tNode = e), (this._lView = t);
        }
        get(e, t, i) {
          return t5(this._tNode, this._lView, e, i, t);
        }
      }
      function c6(n) {
        return _l(n)
          ? () => {
              const e = c6(Z(n));
              return e && e();
            }
          : r2(n);
      }
      function $2(n) {
        return (function $y(n, e) {
          if ("class" === e) return n.classes;
          if ("style" === e) return n.styles;
          const t = n.attrs;
          if (t) {
            const i = t.length;
            let r = 0;
            for (; r < i; ) {
              const s = t[r];
              if (Zl(s)) break;
              if (0 === s) r += 2;
              else if ("number" == typeof s)
                for (r++; r < i && "string" == typeof t[r]; ) r++;
              else {
                if (s === e) return t[r + 1];
                r += 2;
              }
            }
          }
          return null;
        })(et(), n);
      }
      const W2 = "__parameters__",
        q2 = "__prop__metadata__";
      function l6(n) {
        return function (...t) {
          if (n) {
            const i = n(...t);
            for (const r in i) this[r] = i[r];
          }
        };
      }
      function Z2(n, e, t) {
        return Tn(() => {
          const i = l6(e);
          function r(...s) {
            if (this instanceof r) return i.apply(this, s), this;
            const o = new r(...s);
            return (a.annotation = o), a;
            function a(c, l, u) {
              const f = c.hasOwnProperty(W2)
                ? c[W2]
                : Object.defineProperty(c, W2, { value: [] })[W2];
              for (; f.length <= u; ) f.push(null);
              return (f[u] = f[u] || []).push(o), c;
            }
          }
          return (
            t && (r.prototype = Object.create(t.prototype)),
            (r.prototype.ngMetadataName = n),
            (r.annotationCls = r),
            r
          );
        });
      }
      function o5(n, e, t, i) {
        return Tn(() => {
          const r = l6(e);
          function s(...o) {
            if (this instanceof s) return r.apply(this, o), this;
            const a = new s(...o);
            return function c(l, u) {
              const f = l.constructor,
                h = f.hasOwnProperty(q2)
                  ? f[q2]
                  : Object.defineProperty(f, q2, { value: {} })[q2];
              (h[u] = (h.hasOwnProperty(u) && h[u]) || []),
                h[u].unshift(a),
                i && i(l, u, ...o);
            };
          }
          return (
            t && (s.prototype = Object.create(t.prototype)),
            (s.prototype.ngMetadataName = n),
            (s.annotationCls = s),
            s
          );
        });
      }
      class L {
        constructor(e, t) {
          (this._desc = e),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof t
              ? (this.__NG_ELEMENT_ID__ = t)
              : void 0 !== t &&
                (this.ɵprov = z({
                  token: this,
                  providedIn: t.providedIn || "root",
                  factory: t.factory,
                }));
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const Ky = new L("AnalyzeForEntryComponents");
      function t1(n, e) {
        void 0 === e && (e = n);
        for (let t = 0; t < n.length; t++) {
          let i = n[t];
          Array.isArray(i)
            ? (e === n && (e = n.slice(0, t)), t1(i, e))
            : e !== n && e.push(i);
        }
        return e;
      }
      function k1(n, e) {
        n.forEach((t) => (Array.isArray(t) ? k1(t, e) : e(t)));
      }
      function a5(n, e, t) {
        e >= n.length ? n.push(t) : n.splice(e, 0, t);
      }
      function co(n, e) {
        return e >= n.length - 1 ? n.pop() : n.splice(e, 1)[0];
      }
      function dr(n, e) {
        const t = [];
        for (let i = 0; i < n; i++) t.push(e);
        return t;
      }
      function Rt(n, e, t) {
        let i = K2(n, e);
        return (
          i >= 0
            ? (n[1 | i] = t)
            : ((i = ~i),
              (function Xy(n, e, t, i) {
                let r = n.length;
                if (r == e) n.push(t, i);
                else if (1 === r) n.push(i, n[0]), (n[0] = t);
                else {
                  for (r--, n.push(n[r - 1], n[r]); r > e; )
                    (n[r] = n[r - 2]), r--;
                  (n[e] = t), (n[e + 1] = i);
                }
              })(n, i, e, t)),
          i
        );
      }
      function f6(n, e) {
        const t = K2(n, e);
        if (t >= 0) return n[1 | t];
      }
      function K2(n, e) {
        return (function u5(n, e, t) {
          let i = 0,
            r = n.length >> t;
          for (; r !== i; ) {
            const s = i + ((r - i) >> 1),
              o = n[s << t];
            if (e === o) return s << t;
            o > e ? (r = s) : (i = s + 1);
          }
          return ~(r << t);
        })(n, e, 1);
      }
      const pr = {},
        d6 = "__NG_DI_FLAG__",
        uo = "ngTempTokenPath",
        sC = /\n/gm,
        h5 = "__source",
        aC = ye({ provide: String, useValue: ye });
      let mr;
      function d5(n) {
        const e = mr;
        return (mr = n), e;
      }
      function cC(n, e = U.Default) {
        if (void 0 === mr) throw new ie(203, "");
        return null === mr
          ? bl(n, void 0, e)
          : mr.get(n, e & U.Optional ? null : void 0, e);
      }
      function C(n, e = U.Default) {
        return (
          (function Y_() {
            return P4;
          })() || cC
        )(Z(n), e);
      }
      const m5 = C;
      function p6(n) {
        const e = [];
        for (let t = 0; t < n.length; t++) {
          const i = Z(n[t]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new ie(900, "");
            let r,
              s = U.Default;
            for (let o = 0; o < i.length; o++) {
              const a = i[o],
                c = lC(a);
              "number" == typeof c
                ? -1 === c
                  ? (r = a.token)
                  : (s |= c)
                : (r = a);
            }
            e.push(C(r, s));
          } else e.push(C(i));
        }
        return e;
      }
      function gr(n, e) {
        return (n[d6] = e), (n.prototype[d6] = e), n;
      }
      function lC(n) {
        return n[d6];
      }
      const vr = gr(
          Z2("Inject", (n) => ({ token: n })),
          -1
        ),
        I1 = gr(Z2("Optional"), 8),
        Y2 = gr(Z2("SkipSelf"), 4);
      let ho, po;
      function X2(n) {
        var e;
        return (
          (null ===
            (e = (function g6() {
              if (void 0 === ho && ((ho = null), _e.trustedTypes))
                try {
                  ho = _e.trustedTypes.createPolicy("angular", {
                    createHTML: (n) => n,
                    createScript: (n) => n,
                    createScriptURL: (n) => n,
                  });
                } catch (n) {}
              return ho;
            })()) || void 0 === e
            ? void 0
            : e.createHTML(n)) || n
        );
      }
      function C5(n) {
        var e;
        return (
          (null ===
            (e = (function v6() {
              if (void 0 === po && ((po = null), _e.trustedTypes))
                try {
                  po = _e.trustedTypes.createPolicy("angular#unsafe-bypass", {
                    createHTML: (n) => n,
                    createScript: (n) => n,
                    createScriptURL: (n) => n,
                  });
                } catch (n) {}
              return po;
            })()) || void 0 === e
            ? void 0
            : e.createHTML(n)) || n
        );
      }
      class o2 {
        constructor(e) {
          this.changingThisBreaksApplicationSecurity = e;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
        }
      }
      class bC extends o2 {
        getTypeName() {
          return "HTML";
        }
      }
      class wC extends o2 {
        getTypeName() {
          return "Style";
        }
      }
      class DC extends o2 {
        getTypeName() {
          return "Script";
        }
      }
      class EC extends o2 {
        getTypeName() {
          return "URL";
        }
      }
      class SC extends o2 {
        getTypeName() {
          return "ResourceURL";
        }
      }
      function Bt(n) {
        return n instanceof o2 ? n.changingThisBreaksApplicationSecurity : n;
      }
      function H1(n, e) {
        const t = w5(n);
        if (null != t && t !== e) {
          if ("ResourceURL" === t && "URL" === e) return !0;
          throw new Error(
            `Required a safe ${e}, got a ${t} (see https://g.co/ng/security#xss)`
          );
        }
        return t === e;
      }
      function w5(n) {
        return (n instanceof o2 && n.getTypeName()) || null;
      }
      class NC {
        constructor(e) {
          this.inertDocumentHelper = e;
        }
        getInertBodyElement(e) {
          e = "<body><remove></remove>" + e;
          try {
            const t = new window.DOMParser().parseFromString(
              X2(e),
              "text/html"
            ).body;
            return null === t
              ? this.inertDocumentHelper.getInertBodyElement(e)
              : (t.removeChild(t.firstChild), t);
          } catch (t) {
            return null;
          }
        }
      }
      class VC {
        constructor(e) {
          if (
            ((this.defaultDoc = e),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                "sanitization-inert"
              )),
            null == this.inertDocument.body)
          ) {
            const t = this.inertDocument.createElement("html");
            this.inertDocument.appendChild(t);
            const i = this.inertDocument.createElement("body");
            t.appendChild(i);
          }
        }
        getInertBodyElement(e) {
          const t = this.inertDocument.createElement("template");
          if ("content" in t) return (t.innerHTML = X2(e)), t;
          const i = this.inertDocument.createElement("body");
          return (
            (i.innerHTML = X2(e)),
            this.defaultDoc.documentMode && this.stripCustomNsAttrs(i),
            i
          );
        }
        stripCustomNsAttrs(e) {
          const t = e.attributes;
          for (let r = t.length - 1; 0 < r; r--) {
            const o = t.item(r).name;
            ("xmlns:ns1" === o || 0 === o.indexOf("ns1:")) &&
              e.removeAttribute(o);
          }
          let i = e.firstChild;
          for (; i; )
            i.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(i),
              (i = i.nextSibling);
        }
      }
      const IC =
          /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
        HC =
          /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      function yr(n) {
        return (n = String(n)).match(IC) || n.match(HC) ? n : "unsafe:" + n;
      }
      function O1(n) {
        const e = {};
        for (const t of n.split(",")) e[t] = !0;
        return e;
      }
      function Cr(...n) {
        const e = {};
        for (const t of n)
          for (const i in t) t.hasOwnProperty(i) && (e[i] = !0);
        return e;
      }
      const S5 = O1("area,br,col,hr,img,wbr"),
        A5 = O1("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
        x5 = O1("rp,rt"),
        _6 = Cr(
          S5,
          Cr(
            A5,
            O1(
              "address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul"
            )
          ),
          Cr(
            x5,
            O1(
              "a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video"
            )
          ),
          Cr(x5, A5)
        ),
        y6 = O1("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
        C6 = O1("srcset"),
        z5 = Cr(
          y6,
          C6,
          O1(
            "abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"
          ),
          O1(
            "aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext"
          )
        ),
        OC = O1("script,style,template");
      class PC {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(e) {
          let t = e.firstChild,
            i = !0;
          for (; t; )
            if (
              (t.nodeType === Node.ELEMENT_NODE
                ? (i = this.startElement(t))
                : t.nodeType === Node.TEXT_NODE
                ? this.chars(t.nodeValue)
                : (this.sanitizedSomething = !0),
              i && t.firstChild)
            )
              t = t.firstChild;
            else
              for (; t; ) {
                t.nodeType === Node.ELEMENT_NODE && this.endElement(t);
                let r = this.checkClobberedElement(t, t.nextSibling);
                if (r) {
                  t = r;
                  break;
                }
                t = this.checkClobberedElement(t, t.parentNode);
              }
          return this.buf.join("");
        }
        startElement(e) {
          const t = e.nodeName.toLowerCase();
          if (!_6.hasOwnProperty(t))
            return (this.sanitizedSomething = !0), !OC.hasOwnProperty(t);
          this.buf.push("<"), this.buf.push(t);
          const i = e.attributes;
          for (let r = 0; r < i.length; r++) {
            const s = i.item(r),
              o = s.name,
              a = o.toLowerCase();
            if (!z5.hasOwnProperty(a)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let c = s.value;
            y6[a] && (c = yr(c)),
              C6[a] &&
                ((n = c),
                (c = (n = String(n))
                  .split(",")
                  .map((e) => yr(e.trim()))
                  .join(", "))),
              this.buf.push(" ", o, '="', L5(c), '"');
          }
          var n;
          return this.buf.push(">"), !0;
        }
        endElement(e) {
          const t = e.nodeName.toLowerCase();
          _6.hasOwnProperty(t) &&
            !S5.hasOwnProperty(t) &&
            (this.buf.push("</"), this.buf.push(t), this.buf.push(">"));
        }
        chars(e) {
          this.buf.push(L5(e));
        }
        checkClobberedElement(e, t) {
          if (
            t &&
            (e.compareDocumentPosition(t) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${e.outerHTML}`
            );
          return t;
        }
      }
      const FC = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        RC = /([^\#-~ |!])/g;
      function L5(n) {
        return n
          .replace(/&/g, "&amp;")
          .replace(FC, function (e) {
            return (
              "&#" +
              (1024 * (e.charCodeAt(0) - 55296) +
                (e.charCodeAt(1) - 56320) +
                65536) +
              ";"
            );
          })
          .replace(RC, function (e) {
            return "&#" + e.charCodeAt(0) + ";";
          })
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
      }
      let mo;
      function T5(n, e) {
        let t = null;
        try {
          mo =
            mo ||
            (function D5(n) {
              const e = new VC(n);
              return (function kC() {
                try {
                  return !!new window.DOMParser().parseFromString(
                    X2(""),
                    "text/html"
                  );
                } catch (n) {
                  return !1;
                }
              })()
                ? new NC(e)
                : e;
            })(n);
          let i = e ? String(e) : "";
          t = mo.getInertBodyElement(i);
          let r = 5,
            s = i;
          do {
            if (0 === r)
              throw new Error(
                "Failed to sanitize html because the input is unstable"
              );
            r--, (i = s), (s = t.innerHTML), (t = mo.getInertBodyElement(i));
          } while (i !== s);
          return X2(new PC().sanitizeChildren(M6(t) || t));
        } finally {
          if (t) {
            const i = M6(t) || t;
            for (; i.firstChild; ) i.removeChild(i.firstChild);
          }
        }
      }
      function M6(n) {
        return "content" in n &&
          (function BC(n) {
            return (
              n.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === n.nodeName
            );
          })(n)
          ? n.content
          : null;
      }
      var Ee = (() => (
        ((Ee = Ee || {})[(Ee.NONE = 0)] = "NONE"),
        (Ee[(Ee.HTML = 1)] = "HTML"),
        (Ee[(Ee.STYLE = 2)] = "STYLE"),
        (Ee[(Ee.SCRIPT = 3)] = "SCRIPT"),
        (Ee[(Ee.URL = 4)] = "URL"),
        (Ee[(Ee.RESOURCE_URL = 5)] = "RESOURCE_URL"),
        Ee
      ))();
      function N5(n) {
        const e = Mr();
        return e
          ? C5(e.sanitize(Ee.HTML, n) || "")
          : H1(n, "HTML")
          ? C5(Bt(n))
          : T5(q4(), B(n));
      }
      function a2(n) {
        const e = Mr();
        return e
          ? e.sanitize(Ee.URL, n) || ""
          : H1(n, "URL")
          ? Bt(n)
          : yr(B(n));
      }
      function Mr() {
        const n = b();
        return n && n[12];
      }
      const I5 = "__ngContext__";
      function pt(n, e) {
        n[I5] = e;
      }
      function w6(n) {
        const e = (function br(n) {
          return n[I5] || null;
        })(n);
        return e ? (Array.isArray(e) ? e : e.lView) : null;
      }
      function E6(n) {
        return n.ngOriginalError;
      }
      function iM(n, ...e) {
        n.error(...e);
      }
      class J2 {
        constructor() {
          this._console = console;
        }
        handleError(e) {
          const t = this._findOriginalError(e),
            i = (function nM(n) {
              return (n && n.ngErrorLogger) || iM;
            })(e);
          i(this._console, "ERROR", e),
            t && i(this._console, "ORIGINAL ERROR", t);
        }
        _findOriginalError(e) {
          let t = e && E6(e);
          for (; t && E6(t); ) t = E6(t);
          return t || null;
        }
      }
      const R5 = (() =>
        (
          ("undefined" != typeof requestAnimationFrame &&
            requestAnimationFrame) ||
          setTimeout
        ).bind(_e))();
      function P1(n) {
        return n instanceof Function ? n() : n;
      }
      var jt = (() => (
        ((jt = jt || {})[(jt.Important = 1)] = "Important"),
        (jt[(jt.DashCase = 2)] = "DashCase"),
        jt
      ))();
      function A6(n, e) {
        return undefined(n, e);
      }
      function wr(n) {
        const e = n[3];
        return v1(e) ? e[3] : e;
      }
      function x6(n) {
        return G5(n[13]);
      }
      function z6(n) {
        return G5(n[4]);
      }
      function G5(n) {
        for (; null !== n && !v1(n); ) n = n[4];
        return n;
      }
      function ti(n, e, t, i, r) {
        if (null != i) {
          let s,
            o = !1;
          v1(i) ? (s = i) : N1(i) && ((o = !0), (i = i[0]));
          const a = We(i);
          0 === n && null !== t
            ? null == r
              ? Q5(e, t, a)
              : c2(e, t, a, r || null, !0)
            : 1 === n && null !== t
            ? c2(e, t, a, r || null, !0)
            : 2 === n
            ? (function r7(n, e, t) {
                const i = go(n, e);
                i &&
                  (function SM(n, e, t, i) {
                    Pe(n) ? n.removeChild(e, t, i) : e.removeChild(t);
                  })(n, i, e, t);
              })(e, a, o)
            : 3 === n && e.destroyNode(a),
            null != s &&
              (function zM(n, e, t, i, r) {
                const s = t[7];
                s !== We(t) && ti(e, n, i, s, r);
                for (let a = 10; a < t.length; a++) {
                  const c = t[a];
                  Dr(c[1], c, n, e, i, s);
                }
              })(e, n, s, t, r);
        }
      }
      function T6(n, e, t) {
        return Pe(n)
          ? n.createElement(e, t)
          : null === t
          ? n.createElement(e)
          : n.createElementNS(t, e);
      }
      function q5(n, e) {
        const t = n[9],
          i = t.indexOf(e),
          r = e[3];
        1024 & e[2] && ((e[2] &= -1025), Y4(r, -1)), t.splice(i, 1);
      }
      function N6(n, e) {
        if (n.length <= 10) return;
        const t = 10 + e,
          i = n[t];
        if (i) {
          const r = i[17];
          null !== r && r !== n && q5(r, i), e > 0 && (n[t - 1][4] = i[4]);
          const s = co(n, 10 + e);
          !(function _M(n, e) {
            Dr(n, e, e[K], 2, null, null), (e[0] = null), (e[6] = null);
          })(i[1], i);
          const o = s[19];
          null !== o && o.detachView(s[1]),
            (i[3] = null),
            (i[4] = null),
            (i[2] &= -129);
        }
        return i;
      }
      function Z5(n, e) {
        if (!(256 & e[2])) {
          const t = e[K];
          Pe(t) && t.destroyNode && Dr(n, e, t, 3, null, null),
            (function MM(n) {
              let e = n[13];
              if (!e) return V6(n[1], n);
              for (; e; ) {
                let t = null;
                if (N1(e)) t = e[13];
                else {
                  const i = e[10];
                  i && (t = i);
                }
                if (!t) {
                  for (; e && !e[4] && e !== n; )
                    N1(e) && V6(e[1], e), (e = e[3]);
                  null === e && (e = n), N1(e) && V6(e[1], e), (t = e && e[4]);
                }
                e = t;
              }
            })(e);
        }
      }
      function V6(n, e) {
        if (!(256 & e[2])) {
          (e[2] &= -129),
            (e[2] |= 256),
            (function EM(n, e) {
              let t;
              if (null != n && null != (t = n.destroyHooks))
                for (let i = 0; i < t.length; i += 2) {
                  const r = e[t[i]];
                  if (!(r instanceof ar)) {
                    const s = t[i + 1];
                    if (Array.isArray(s))
                      for (let o = 0; o < s.length; o += 2) {
                        const a = r[s[o]],
                          c = s[o + 1];
                        try {
                          c.call(a);
                        } finally {
                        }
                      }
                    else
                      try {
                        s.call(r);
                      } finally {
                      }
                  }
                }
            })(n, e),
            (function DM(n, e) {
              const t = n.cleanup,
                i = e[7];
              let r = -1;
              if (null !== t)
                for (let s = 0; s < t.length - 1; s += 2)
                  if ("string" == typeof t[s]) {
                    const o = t[s + 1],
                      a = "function" == typeof o ? o(e) : We(e[o]),
                      c = i[(r = t[s + 2])],
                      l = t[s + 3];
                    "boolean" == typeof l
                      ? a.removeEventListener(t[s], c, l)
                      : l >= 0
                      ? i[(r = l)]()
                      : i[(r = -l)].unsubscribe(),
                      (s += 2);
                  } else {
                    const o = i[(r = t[s + 1])];
                    t[s].call(o);
                  }
              if (null !== i) {
                for (let s = r + 1; s < i.length; s++) i[s]();
                e[7] = null;
              }
            })(n, e),
            1 === e[1].type && Pe(e[K]) && e[K].destroy();
          const t = e[17];
          if (null !== t && v1(e[3])) {
            t !== e[3] && q5(t, e);
            const i = e[19];
            null !== i && i.detachView(n);
          }
        }
      }
      function K5(n, e, t) {
        return (function Y5(n, e, t) {
          let i = e;
          for (; null !== i && 40 & i.type; ) i = (e = i).parent;
          if (null === i) return t[0];
          if (2 & i.flags) {
            const r = n.data[i.directiveStart].encapsulation;
            if (r === m1.None || r === m1.Emulated) return null;
          }
          return e1(i, t);
        })(n, e.parent, t);
      }
      function c2(n, e, t, i, r) {
        Pe(n) ? n.insertBefore(e, t, i, r) : e.insertBefore(t, i, r);
      }
      function Q5(n, e, t) {
        Pe(n) ? n.appendChild(e, t) : e.appendChild(t);
      }
      function X5(n, e, t, i, r) {
        null !== i ? c2(n, e, t, i, r) : Q5(n, e, t);
      }
      function go(n, e) {
        return Pe(n) ? n.parentNode(e) : e.parentNode;
      }
      function J5(n, e, t) {
        return t7(n, e, t);
      }
      let t7 = function e7(n, e, t) {
        return 40 & n.type ? e1(n, t) : null;
      };
      function vo(n, e, t, i) {
        const r = K5(n, i, e),
          s = e[K],
          a = J5(i.parent || e[6], i, e);
        if (null != r)
          if (Array.isArray(t))
            for (let c = 0; c < t.length; c++) X5(s, r, t[c], a, !1);
          else X5(s, r, t, a, !1);
      }
      function _o(n, e) {
        if (null !== e) {
          const t = e.type;
          if (3 & t) return e1(e, n);
          if (4 & t) return I6(-1, n[e.index]);
          if (8 & t) {
            const i = e.child;
            if (null !== i) return _o(n, i);
            {
              const r = n[e.index];
              return v1(r) ? I6(-1, r) : We(r);
            }
          }
          if (32 & t) return A6(e, n)() || We(n[e.index]);
          {
            const i = i7(n, e);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : _o(wr(n[16]), i)
              : _o(n, e.next);
          }
        }
        return null;
      }
      function i7(n, e) {
        return null !== e ? n[16][6].projection[e.projection] : null;
      }
      function I6(n, e) {
        const t = 10 + n + 1;
        if (t < e.length) {
          const i = e[t],
            r = i[1].firstChild;
          if (null !== r) return _o(i, r);
        }
        return e[7];
      }
      function H6(n, e, t, i, r, s, o) {
        for (; null != t; ) {
          const a = i[t.index],
            c = t.type;
          if (
            (o && 0 === e && (a && pt(We(a), i), (t.flags |= 4)),
            64 != (64 & t.flags))
          )
            if (8 & c) H6(n, e, t.child, i, r, s, !1), ti(e, n, r, a, s);
            else if (32 & c) {
              const l = A6(t, i);
              let u;
              for (; (u = l()); ) ti(e, n, r, u, s);
              ti(e, n, r, a, s);
            } else 16 & c ? s7(n, e, i, t, r, s) : ti(e, n, r, a, s);
          t = o ? t.projectionNext : t.next;
        }
      }
      function Dr(n, e, t, i, r, s) {
        H6(t, i, n.firstChild, e, r, s, !1);
      }
      function s7(n, e, t, i, r, s) {
        const o = t[16],
          c = o[6].projection[i.projection];
        if (Array.isArray(c))
          for (let l = 0; l < c.length; l++) ti(e, n, r, c[l], s);
        else H6(n, e, c, o[3], r, s, !0);
      }
      function o7(n, e, t) {
        Pe(n) ? n.setAttribute(e, "style", t) : (e.style.cssText = t);
      }
      function O6(n, e, t) {
        Pe(n)
          ? "" === t
            ? n.removeAttribute(e, "class")
            : n.setAttribute(e, "class", t)
          : (e.className = t);
      }
      function a7(n, e, t) {
        let i = n.length;
        for (;;) {
          const r = n.indexOf(e, t);
          if (-1 === r) return r;
          if (0 === r || n.charCodeAt(r - 1) <= 32) {
            const s = e.length;
            if (r + s === i || n.charCodeAt(r + s) <= 32) return r;
          }
          t = r + 1;
        }
      }
      const c7 = "ng-template";
      function TM(n, e, t) {
        let i = 0;
        for (; i < n.length; ) {
          let r = n[i++];
          if (t && "class" === r) {
            if (((r = n[i]), -1 !== a7(r.toLowerCase(), e, 0))) return !0;
          } else if (1 === r) {
            for (; i < n.length && "string" == typeof (r = n[i++]); )
              if (r.toLowerCase() === e) return !0;
            return !1;
          }
        }
        return !1;
      }
      function l7(n) {
        return 4 === n.type && n.value !== c7;
      }
      function NM(n, e, t) {
        return e === (4 !== n.type || t ? n.value : c7);
      }
      function VM(n, e, t) {
        let i = 4;
        const r = n.attrs || [],
          s = (function HM(n) {
            for (let e = 0; e < n.length; e++) if (Zl(n[e])) return e;
            return n.length;
          })(r);
        let o = !1;
        for (let a = 0; a < e.length; a++) {
          const c = e[a];
          if ("number" != typeof c) {
            if (!o)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ("" !== c && !NM(n, c, t)) || ("" === c && 1 === e.length))
                ) {
                  if (y1(i)) return !1;
                  o = !0;
                }
              } else {
                const l = 8 & i ? c : e[++a];
                if (8 & i && null !== n.attrs) {
                  if (!TM(n.attrs, l, t)) {
                    if (y1(i)) return !1;
                    o = !0;
                  }
                  continue;
                }
                const f = kM(8 & i ? "class" : c, r, l7(n), t);
                if (-1 === f) {
                  if (y1(i)) return !1;
                  o = !0;
                  continue;
                }
                if ("" !== l) {
                  let h;
                  h = f > s ? "" : r[f + 1].toLowerCase();
                  const d = 8 & i ? h : null;
                  if ((d && -1 !== a7(d, l, 0)) || (2 & i && l !== h)) {
                    if (y1(i)) return !1;
                    o = !0;
                  }
                }
              }
          } else {
            if (!o && !y1(i) && !y1(c)) return !1;
            if (o && y1(c)) continue;
            (o = !1), (i = c | (1 & i));
          }
        }
        return y1(i) || o;
      }
      function y1(n) {
        return 0 == (1 & n);
      }
      function kM(n, e, t, i) {
        if (null === e) return -1;
        let r = 0;
        if (i || !t) {
          let s = !1;
          for (; r < e.length; ) {
            const o = e[r];
            if (o === n) return r;
            if (3 === o || 6 === o) s = !0;
            else {
              if (1 === o || 2 === o) {
                let a = e[++r];
                for (; "string" == typeof a; ) a = e[++r];
                continue;
              }
              if (4 === o) break;
              if (0 === o) {
                r += 4;
                continue;
              }
            }
            r += s ? 1 : 2;
          }
          return -1;
        }
        return (function OM(n, e) {
          let t = n.indexOf(4);
          if (t > -1)
            for (t++; t < n.length; ) {
              const i = n[t];
              if ("number" == typeof i) return -1;
              if (i === e) return t;
              t++;
            }
          return -1;
        })(e, n);
      }
      function u7(n, e, t = !1) {
        for (let i = 0; i < e.length; i++) if (VM(n, e[i], t)) return !0;
        return !1;
      }
      function PM(n, e) {
        e: for (let t = 0; t < e.length; t++) {
          const i = e[t];
          if (n.length === i.length) {
            for (let r = 0; r < n.length; r++) if (n[r] !== i[r]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function f7(n, e) {
        return n ? ":not(" + e.trim() + ")" : e;
      }
      function FM(n) {
        let e = n[0],
          t = 1,
          i = 2,
          r = "",
          s = !1;
        for (; t < n.length; ) {
          let o = n[t];
          if ("string" == typeof o)
            if (2 & i) {
              const a = n[++t];
              r += "[" + o + (a.length > 0 ? '="' + a + '"' : "") + "]";
            } else 8 & i ? (r += "." + o) : 4 & i && (r += " " + o);
          else
            "" !== r && !y1(o) && ((e += f7(s, r)), (r = "")),
              (i = o),
              (s = s || !y1(i));
          t++;
        }
        return "" !== r && (e += f7(s, r)), e;
      }
      const j = {};
      function S(n) {
        h7(re(), b(), Ct() + n, Ks());
      }
      function h7(n, e, t, i) {
        if (!i)
          if (3 == (3 & e[2])) {
            const s = n.preOrderCheckHooks;
            null !== s && eo(e, s, t);
          } else {
            const s = n.preOrderHooks;
            null !== s && to(e, s, 0, t);
          }
        kn(t);
      }
      function yo(n, e) {
        return (n << 17) | (e << 2);
      }
      function C1(n) {
        return (n >> 17) & 32767;
      }
      function P6(n) {
        return 2 | n;
      }
      function fn(n) {
        return (131068 & n) >> 2;
      }
      function F6(n, e) {
        return (-131069 & n) | (e << 2);
      }
      function R6(n) {
        return 1 | n;
      }
      function w7(n, e) {
        const t = n.contentQueries;
        if (null !== t)
          for (let i = 0; i < t.length; i += 2) {
            const r = t[i],
              s = t[i + 1];
            if (-1 !== s) {
              const o = n.data[s];
              t6(r), o.contentQueries(2, e[s], s);
            }
          }
      }
      function Er(n, e, t, i, r, s, o, a, c, l) {
        const u = e.blueprint.slice();
        return (
          (u[0] = r),
          (u[2] = 140 | i),
          Hl(u),
          (u[3] = u[15] = n),
          (u[8] = t),
          (u[10] = o || (n && n[10])),
          (u[K] = a || (n && n[K])),
          (u[12] = c || (n && n[12]) || null),
          (u[9] = l || (n && n[9]) || null),
          (u[6] = s),
          (u[16] = 2 == e.type ? n[16] : u),
          u
        );
      }
      function ni(n, e, t, i, r) {
        let s = n.data[e];
        if (null === s)
          (s = (function K6(n, e, t, i, r) {
            const s = Pl(),
              o = Q4(),
              c = (n.data[e] = (function ib(n, e, t, i, r, s) {
                return {
                  type: t,
                  index: i,
                  insertBeforeIndex: null,
                  injectorIndex: e ? e.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: r,
                  attrs: s,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tViews: null,
                  next: null,
                  projectionNext: null,
                  child: null,
                  parent: e,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, o ? s : s && s.parent, t, e, i, r));
            return (
              null === n.firstChild && (n.firstChild = c),
              null !== s &&
                (o
                  ? null == s.child && null !== c.parent && (s.child = c)
                  : null === s.next && (s.next = c)),
              c
            );
          })(n, e, t, i, r)),
            (function Ey() {
              return R.lFrame.inI18n;
            })() && (s.flags |= 64);
        else if (64 & s.type) {
          (s.type = t), (s.value = i), (s.attrs = r);
          const o = (function or() {
            const n = R.lFrame,
              e = n.currentTNode;
            return n.isParent ? e : e.parent;
          })();
          s.injectorIndex = null === o ? -1 : o.injectorIndex;
        }
        return V1(s, !0), s;
      }
      function ii(n, e, t, i) {
        if (0 === t) return -1;
        const r = e.length;
        for (let s = 0; s < t; s++)
          e.push(i), n.blueprint.push(i), n.data.push(null);
        return r;
      }
      function Sr(n, e, t) {
        Qs(e);
        try {
          const i = n.viewQuery;
          null !== i && r3(1, i, t);
          const r = n.template;
          null !== r && D7(n, e, r, 1, t),
            n.firstCreatePass && (n.firstCreatePass = !1),
            n.staticContentQueries && w7(n, e),
            n.staticViewQueries && r3(2, n.viewQuery, t);
          const s = n.components;
          null !== s &&
            (function eb(n, e) {
              for (let t = 0; t < e.length; t++) Mb(n, e[t]);
            })(e, s);
        } catch (i) {
          throw (
            (n.firstCreatePass &&
              ((n.incompleteFirstPass = !0), (n.firstCreatePass = !1)),
            i)
          );
        } finally {
          (e[2] &= -5), Xs();
        }
      }
      function ri(n, e, t, i) {
        const r = e[2];
        if (256 == (256 & r)) return;
        Qs(e);
        const s = Ks();
        try {
          Hl(e),
            (function Fl(n) {
              return (R.lFrame.bindingIndex = n);
            })(n.bindingStartIndex),
            null !== t && D7(n, e, t, 2, i);
          const o = 3 == (3 & r);
          if (!s)
            if (o) {
              const l = n.preOrderCheckHooks;
              null !== l && eo(e, l, null);
            } else {
              const l = n.preOrderHooks;
              null !== l && to(e, l, 0, null), n6(e, 0);
            }
          if (
            ((function yb(n) {
              for (let e = x6(n); null !== e; e = z6(e)) {
                if (!e[2]) continue;
                const t = e[9];
                for (let i = 0; i < t.length; i++) {
                  const r = t[i],
                    s = r[3];
                  0 == (1024 & r[2]) && Y4(s, 1), (r[2] |= 1024);
                }
              }
            })(e),
            (function _b(n) {
              for (let e = x6(n); null !== e; e = z6(e))
                for (let t = 10; t < e.length; t++) {
                  const i = e[t],
                    r = i[1];
                  K4(i) && ri(r, i, r.template, i[8]);
                }
            })(e),
            null !== n.contentQueries && w7(n, e),
            !s)
          )
            if (o) {
              const l = n.contentCheckHooks;
              null !== l && eo(e, l);
            } else {
              const l = n.contentHooks;
              null !== l && to(e, l, 1), n6(e, 1);
            }
          !(function XM(n, e) {
            const t = n.hostBindingOpCodes;
            if (null !== t)
              try {
                for (let i = 0; i < t.length; i++) {
                  const r = t[i];
                  if (r < 0) kn(~r);
                  else {
                    const s = r,
                      o = t[++i],
                      a = t[++i];
                    Sy(o, s), a(2, e[s]);
                  }
                }
              } finally {
                kn(-1);
              }
          })(n, e);
          const a = n.components;
          null !== a &&
            (function JM(n, e) {
              for (let t = 0; t < e.length; t++) Cb(n, e[t]);
            })(e, a);
          const c = n.viewQuery;
          if ((null !== c && r3(2, c, i), !s))
            if (o) {
              const l = n.viewCheckHooks;
              null !== l && eo(e, l);
            } else {
              const l = n.viewHooks;
              null !== l && to(e, l, 2), n6(e, 2);
            }
          !0 === n.firstUpdatePass && (n.firstUpdatePass = !1),
            s || (e[2] &= -73),
            1024 & e[2] && ((e[2] &= -1025), Y4(e[3], -1));
        } finally {
          Xs();
        }
      }
      function tb(n, e, t, i) {
        const r = e[10],
          s = !Ks(),
          o = Il(e);
        try {
          s && !o && r.begin && r.begin(), o && Sr(n, e, i), ri(n, e, t, i);
        } finally {
          s && !o && r.end && r.end();
        }
      }
      function D7(n, e, t, i, r) {
        const s = Ct(),
          o = 2 & i;
        try {
          kn(-1), o && e.length > 20 && h7(n, e, 20, Ks()), t(i, r);
        } finally {
          kn(s);
        }
      }
      function E7(n, e, t) {
        if (U4(e)) {
          const r = e.directiveEnd;
          for (let s = e.directiveStart; s < r; s++) {
            const o = n.data[s];
            o.contentQueries && o.contentQueries(1, t[s], s);
          }
        }
      }
      function Y6(n, e, t) {
        !Ol() ||
          ((function ub(n, e, t, i) {
            const r = t.directiveStart,
              s = t.directiveEnd;
            n.firstCreatePass || lr(t, e), pt(i, e);
            const o = t.initialInputs;
            for (let a = r; a < s; a++) {
              const c = n.data[a],
                l = _1(c);
              l && mb(e, t, c);
              const u = ur(e, n, a, t);
              pt(u, e),
                null !== o && gb(0, a - r, u, c, 0, o),
                l && (Ft(t.index, e)[8] = u);
            }
          })(n, e, t, e1(t, e)),
          128 == (128 & t.flags) &&
            (function fb(n, e, t) {
              const i = t.directiveStart,
                r = t.directiveEnd,
                o = t.index,
                a = (function Ay() {
                  return R.lFrame.currentDirectiveIndex;
                })();
              try {
                kn(o);
                for (let c = i; c < r; c++) {
                  const l = n.data[c],
                    u = e[c];
                  J4(c),
                    (null !== l.hostBindings ||
                      0 !== l.hostVars ||
                      null !== l.hostAttrs) &&
                      V7(l, u);
                }
              } finally {
                kn(-1), J4(a);
              }
            })(n, e, t));
      }
      function Q6(n, e, t = e1) {
        const i = e.localNames;
        if (null !== i) {
          let r = e.index + 1;
          for (let s = 0; s < i.length; s += 2) {
            const o = i[s + 1],
              a = -1 === o ? t(e, n) : n[o];
            n[r++] = a;
          }
        }
      }
      function S7(n) {
        const e = n.tView;
        return null === e || e.incompleteFirstPass
          ? (n.tView = bo(
              1,
              null,
              n.template,
              n.decls,
              n.vars,
              n.directiveDefs,
              n.pipeDefs,
              n.viewQuery,
              n.schemas,
              n.consts
            ))
          : e;
      }
      function bo(n, e, t, i, r, s, o, a, c, l) {
        const u = 20 + i,
          f = u + r,
          h = (function nb(n, e) {
            const t = [];
            for (let i = 0; i < e; i++) t.push(i < n ? null : j);
            return t;
          })(u, f),
          d = "function" == typeof l ? l() : l;
        return (h[1] = {
          type: n,
          blueprint: h,
          template: t,
          queries: null,
          viewQuery: a,
          declTNode: e,
          data: h.slice().fill(null, u),
          bindingStartIndex: u,
          expandoStartIndex: f,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof s ? s() : s,
          pipeRegistry: "function" == typeof o ? o() : o,
          firstChild: null,
          schemas: c,
          consts: d,
          incompleteFirstPass: !1,
        });
      }
      function z7(n, e, t, i) {
        const r = F7(e);
        null === t
          ? r.push(i)
          : (r.push(t), n.firstCreatePass && R7(n).push(i, r.length - 1));
      }
      function L7(n, e, t) {
        for (let i in n)
          if (n.hasOwnProperty(i)) {
            const r = n[i];
            (t = null === t ? {} : t).hasOwnProperty(i)
              ? t[i].push(e, r)
              : (t[i] = [e, r]);
          }
        return t;
      }
      function Ut(n, e, t, i, r, s, o, a) {
        const c = e1(e, t);
        let u,
          l = e.inputs;
        !a && null != l && (u = l[i])
          ? (U7(n, t, u, i, r),
            Ws(e) &&
              (function ob(n, e) {
                const t = Ft(e, n);
                16 & t[2] || (t[2] |= 64);
              })(t, e.index))
          : 3 & e.type &&
            ((i = (function sb(n) {
              return "class" === n
                ? "className"
                : "for" === n
                ? "htmlFor"
                : "formaction" === n
                ? "formAction"
                : "innerHtml" === n
                ? "innerHTML"
                : "readonly" === n
                ? "readOnly"
                : "tabindex" === n
                ? "tabIndex"
                : n;
            })(i)),
            (r = null != o ? o(r, e.value || "", i) : r),
            Pe(s)
              ? s.setProperty(c, i, r)
              : r6(i) || (c.setProperty ? c.setProperty(i, r) : (c[i] = r)));
      }
      function X6(n, e, t, i) {
        let r = !1;
        if (Ol()) {
          const s = (function hb(n, e, t) {
              const i = n.directiveRegistry;
              let r = null;
              if (i)
                for (let s = 0; s < i.length; s++) {
                  const o = i[s];
                  u7(t, o.selectors, !1) &&
                    (r || (r = []),
                    oo(lr(t, e), n, o.type),
                    _1(o) ? (k7(n, t), r.unshift(o)) : r.push(o));
                }
              return r;
            })(n, e, t),
            o = null === i ? null : { "": -1 };
          if (null !== s) {
            (r = !0), I7(t, n.data.length, s.length);
            for (let u = 0; u < s.length; u++) {
              const f = s[u];
              f.providersResolver && f.providersResolver(f);
            }
            let a = !1,
              c = !1,
              l = ii(n, e, s.length, null);
            for (let u = 0; u < s.length; u++) {
              const f = s[u];
              (t.mergedAttrs = io(t.mergedAttrs, f.hostAttrs)),
                H7(n, t, e, l, f),
                pb(l, f, o),
                null !== f.contentQueries && (t.flags |= 8),
                (null !== f.hostBindings ||
                  null !== f.hostAttrs ||
                  0 !== f.hostVars) &&
                  (t.flags |= 128);
              const h = f.type.prototype;
              !a &&
                (h.ngOnChanges || h.ngOnInit || h.ngDoCheck) &&
                ((n.preOrderHooks || (n.preOrderHooks = [])).push(t.index),
                (a = !0)),
                !c &&
                  (h.ngOnChanges || h.ngDoCheck) &&
                  ((n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(
                    t.index
                  ),
                  (c = !0)),
                l++;
            }
            !(function rb(n, e) {
              const i = e.directiveEnd,
                r = n.data,
                s = e.attrs,
                o = [];
              let a = null,
                c = null;
              for (let l = e.directiveStart; l < i; l++) {
                const u = r[l],
                  f = u.inputs,
                  h = null === s || l7(e) ? null : vb(f, s);
                o.push(h), (a = L7(f, l, a)), (c = L7(u.outputs, l, c));
              }
              null !== a &&
                (a.hasOwnProperty("class") && (e.flags |= 16),
                a.hasOwnProperty("style") && (e.flags |= 32)),
                (e.initialInputs = o),
                (e.inputs = a),
                (e.outputs = c);
            })(n, t);
          }
          o &&
            (function db(n, e, t) {
              if (e) {
                const i = (n.localNames = []);
                for (let r = 0; r < e.length; r += 2) {
                  const s = t[e[r + 1]];
                  if (null == s)
                    throw new ie(
                      -301,
                      `Export of name '${e[r + 1]}' not found!`
                    );
                  i.push(e[r], s);
                }
              }
            })(t, i, o);
        }
        return (t.mergedAttrs = io(t.mergedAttrs, t.attrs)), r;
      }
      function N7(n, e, t, i, r, s) {
        const o = s.hostBindings;
        if (o) {
          let a = n.hostBindingOpCodes;
          null === a && (a = n.hostBindingOpCodes = []);
          const c = ~e.index;
          (function lb(n) {
            let e = n.length;
            for (; e > 0; ) {
              const t = n[--e];
              if ("number" == typeof t && t < 0) return t;
            }
            return 0;
          })(a) != c && a.push(c),
            a.push(i, r, o);
        }
      }
      function V7(n, e) {
        null !== n.hostBindings && n.hostBindings(1, e);
      }
      function k7(n, e) {
        (e.flags |= 2), (n.components || (n.components = [])).push(e.index);
      }
      function pb(n, e, t) {
        if (t) {
          if (e.exportAs)
            for (let i = 0; i < e.exportAs.length; i++) t[e.exportAs[i]] = n;
          _1(e) && (t[""] = n);
        }
      }
      function I7(n, e, t) {
        (n.flags |= 1),
          (n.directiveStart = e),
          (n.directiveEnd = e + t),
          (n.providerIndexes = e);
      }
      function H7(n, e, t, i, r) {
        n.data[i] = r;
        const s = r.factory || (r.factory = r2(r.type)),
          o = new ar(s, _1(r), null);
        (n.blueprint[i] = o),
          (t[i] = o),
          N7(n, e, 0, i, ii(n, t, r.hostVars, j), r);
      }
      function mb(n, e, t) {
        const i = e1(e, n),
          r = S7(t),
          s = n[10],
          o = wo(
            n,
            Er(
              n,
              r,
              null,
              t.onPush ? 64 : 16,
              i,
              e,
              s,
              s.createRenderer(i, t),
              null,
              null
            )
          );
        n[e.index] = o;
      }
      function F1(n, e, t, i, r, s) {
        const o = e1(n, e);
        !(function J6(n, e, t, i, r, s, o) {
          if (null == s)
            Pe(n) ? n.removeAttribute(e, r, t) : e.removeAttribute(r);
          else {
            const a = null == o ? B(s) : o(s, i || "", r);
            Pe(n)
              ? n.setAttribute(e, r, a, t)
              : t
              ? e.setAttributeNS(t, r, a)
              : e.setAttribute(r, a);
          }
        })(e[K], o, s, n.value, t, i, r);
      }
      function gb(n, e, t, i, r, s) {
        const o = s[e];
        if (null !== o) {
          const a = i.setInput;
          for (let c = 0; c < o.length; ) {
            const l = o[c++],
              u = o[c++],
              f = o[c++];
            null !== a ? i.setInput(t, f, l, u) : (t[u] = f);
          }
        }
      }
      function vb(n, e) {
        let t = null,
          i = 0;
        for (; i < e.length; ) {
          const r = e[i];
          if (0 !== r)
            if (5 !== r) {
              if ("number" == typeof r) break;
              n.hasOwnProperty(r) &&
                (null === t && (t = []), t.push(r, n[r], e[i + 1])),
                (i += 2);
            } else i += 2;
          else i += 4;
        }
        return t;
      }
      function O7(n, e, t, i) {
        return new Array(n, !0, !1, e, null, 0, i, t, null, null);
      }
      function Cb(n, e) {
        const t = Ft(e, n);
        if (K4(t)) {
          const i = t[1];
          80 & t[2] ? ri(i, t, i.template, t[8]) : t[5] > 0 && e3(t);
        }
      }
      function e3(n) {
        for (let i = x6(n); null !== i; i = z6(i))
          for (let r = 10; r < i.length; r++) {
            const s = i[r];
            if (1024 & s[2]) {
              const o = s[1];
              ri(o, s, o.template, s[8]);
            } else s[5] > 0 && e3(s);
          }
        const t = n[1].components;
        if (null !== t)
          for (let i = 0; i < t.length; i++) {
            const r = Ft(t[i], n);
            K4(r) && r[5] > 0 && e3(r);
          }
      }
      function Mb(n, e) {
        const t = Ft(e, n),
          i = t[1];
        (function bb(n, e) {
          for (let t = e.length; t < n.blueprint.length; t++)
            e.push(n.blueprint[t]);
        })(i, t),
          Sr(i, t, t[8]);
      }
      function wo(n, e) {
        return n[13] ? (n[14][4] = e) : (n[13] = e), (n[14] = e), e;
      }
      function t3(n) {
        for (; n; ) {
          n[2] |= 64;
          const e = wr(n);
          if (oy(n) && !e) return n;
          n = e;
        }
        return null;
      }
      function i3(n, e, t) {
        const i = e[10];
        i.begin && i.begin();
        try {
          ri(n, e, n.template, t);
        } catch (r) {
          throw (j7(e, r), r);
        } finally {
          i.end && i.end();
        }
      }
      function P7(n) {
        !(function n3(n) {
          for (let e = 0; e < n.components.length; e++) {
            const t = n.components[e],
              i = w6(t),
              r = i[1];
            tb(r, i, r.template, t);
          }
        })(n[8]);
      }
      function r3(n, e, t) {
        t6(0), e(n, t);
      }
      const Sb = (() => Promise.resolve(null))();
      function F7(n) {
        return n[7] || (n[7] = []);
      }
      function R7(n) {
        return n.cleanup || (n.cleanup = []);
      }
      function j7(n, e) {
        const t = n[9],
          i = t ? t.get(J2, null) : null;
        i && i.handleError(e);
      }
      function U7(n, e, t, i, r) {
        for (let s = 0; s < t.length; ) {
          const o = t[s++],
            a = t[s++],
            c = e[o],
            l = n.data[o];
          null !== l.setInput ? l.setInput(c, r, i, a) : (c[a] = r);
        }
      }
      function hn(n, e, t) {
        const i = Zs(e, n);
        !(function W5(n, e, t) {
          Pe(n) ? n.setValue(e, t) : (e.textContent = t);
        })(n[K], i, t);
      }
      function Do(n, e, t) {
        let i = t ? n.styles : null,
          r = t ? n.classes : null,
          s = 0;
        if (null !== e)
          for (let o = 0; o < e.length; o++) {
            const a = e[o];
            "number" == typeof a
              ? (s = a)
              : 1 == s
              ? (r = k4(r, a))
              : 2 == s && (i = k4(i, a + ": " + e[++o] + ";"));
          }
        t ? (n.styles = i) : (n.stylesWithoutHost = i),
          t ? (n.classes = r) : (n.classesWithoutHost = r);
      }
      const s3 = new L("INJECTOR", -1);
      class $7 {
        get(e, t = pr) {
          if (t === pr) {
            const i = new Error(`NullInjectorError: No provider for ${ge(e)}!`);
            throw ((i.name = "NullInjectorError"), i);
          }
          return t;
        }
      }
      const o3 = new L("Set Injector scope."),
        Ar = {},
        zb = {};
      let a3;
      function G7() {
        return void 0 === a3 && (a3 = new $7()), a3;
      }
      function W7(n, e = null, t = null, i) {
        const r = q7(n, e, t, i);
        return r._resolveInjectorDefTypes(), r;
      }
      function q7(n, e = null, t = null, i) {
        return new Lb(n, t, e || G7(), i);
      }
      class Lb {
        constructor(e, t, i, r = null) {
          (this.parent = i),
            (this.records = new Map()),
            (this.injectorDefTypes = new Set()),
            (this.onDestroy = new Set()),
            (this._destroyed = !1);
          const s = [];
          t && k1(t, (a) => this.processProvider(a, e, t)),
            k1([e], (a) => this.processInjectorType(a, [], s)),
            this.records.set(s3, si(void 0, this));
          const o = this.records.get(o3);
          (this.scope = null != o ? o.value : null),
            (this.source = r || ("object" == typeof e ? null : ge(e)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            this.onDestroy.forEach((e) => e.ngOnDestroy());
          } finally {
            this.records.clear(),
              this.onDestroy.clear(),
              this.injectorDefTypes.clear();
          }
        }
        get(e, t = pr, i = U.Default) {
          this.assertNotDestroyed();
          const r = d5(this),
            s = Ln(void 0);
          try {
            if (!(i & U.SkipSelf)) {
              let a = this.records.get(e);
              if (void 0 === a) {
                const c =
                  (function Pb(n) {
                    return (
                      "function" == typeof n ||
                      ("object" == typeof n && n instanceof L)
                    );
                  })(e) && H4(e);
                (a = c && this.injectableDefInScope(c) ? si(c3(e), Ar) : null),
                  this.records.set(e, a);
              }
              if (null != a) return this.hydrate(e, a);
            }
            return (i & U.Self ? G7() : this.parent).get(
              e,
              (t = i & U.Optional && t === pr ? null : t)
            );
          } catch (o) {
            if ("NullInjectorError" === o.name) {
              if (((o[uo] = o[uo] || []).unshift(ge(e)), r)) throw o;
              return (function uC(n, e, t, i) {
                const r = n[uo];
                throw (
                  (e[h5] && r.unshift(e[h5]),
                  (n.message = (function fC(n, e, t, i = null) {
                    n =
                      n && "\n" === n.charAt(0) && "\u0275" == n.charAt(1)
                        ? n.substr(2)
                        : n;
                    let r = ge(e);
                    if (Array.isArray(e)) r = e.map(ge).join(" -> ");
                    else if ("object" == typeof e) {
                      let s = [];
                      for (let o in e)
                        if (e.hasOwnProperty(o)) {
                          let a = e[o];
                          s.push(
                            o +
                              ":" +
                              ("string" == typeof a ? JSON.stringify(a) : ge(a))
                          );
                        }
                      r = `{${s.join(", ")}}`;
                    }
                    return `${t}${i ? "(" + i + ")" : ""}[${r}]: ${n.replace(
                      sC,
                      "\n  "
                    )}`;
                  })("\n" + n.message, r, t, i)),
                  (n.ngTokenPath = r),
                  (n[uo] = null),
                  n)
                );
              })(o, e, "R3InjectorError", this.source);
            }
            throw o;
          } finally {
            Ln(s), d5(r);
          }
        }
        _resolveInjectorDefTypes() {
          this.injectorDefTypes.forEach((e) => this.get(e));
        }
        toString() {
          const e = [];
          return (
            this.records.forEach((i, r) => e.push(ge(r))),
            `R3Injector[${e.join(", ")}]`
          );
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new ie(205, "");
        }
        processInjectorType(e, t, i) {
          if (!(e = Z(e))) return !1;
          let r = Cl(e);
          const s = (null == r && e.ngModule) || void 0,
            o = void 0 === s ? e : s,
            a = -1 !== i.indexOf(o);
          if ((void 0 !== s && (r = Cl(s)), null == r)) return !1;
          if (null != r.imports && !a) {
            let u;
            i.push(o);
            try {
              k1(r.imports, (f) => {
                this.processInjectorType(f, t, i) &&
                  (void 0 === u && (u = []), u.push(f));
              });
            } finally {
            }
            if (void 0 !== u)
              for (let f = 0; f < u.length; f++) {
                const { ngModule: h, providers: d } = u[f];
                k1(d, (p) => this.processProvider(p, h, d || Ce));
              }
          }
          this.injectorDefTypes.add(o);
          const c = r2(o) || (() => new o());
          this.records.set(o, si(c, Ar));
          const l = r.providers;
          if (null != l && !a) {
            const u = e;
            k1(l, (f) => this.processProvider(f, u, l));
          }
          return void 0 !== s && void 0 !== e.providers;
        }
        processProvider(e, t, i) {
          let r = oi((e = Z(e))) ? e : Z(e && e.provide);
          const s = (function Nb(n, e, t) {
            return K7(n) ? si(void 0, n.useValue) : si(Z7(n), Ar);
          })(e);
          if (oi(e) || !0 !== e.multi) this.records.get(r);
          else {
            let o = this.records.get(r);
            o ||
              ((o = si(void 0, Ar, !0)),
              (o.factory = () => p6(o.multi)),
              this.records.set(r, o)),
              (r = e),
              o.multi.push(e);
          }
          this.records.set(r, s);
        }
        hydrate(e, t) {
          return (
            t.value === Ar && ((t.value = zb), (t.value = t.factory())),
            "object" == typeof t.value &&
              t.value &&
              (function Ob(n) {
                return (
                  null !== n &&
                  "object" == typeof n &&
                  "function" == typeof n.ngOnDestroy
                );
              })(t.value) &&
              this.onDestroy.add(t.value),
            t.value
          );
        }
        injectableDefInScope(e) {
          if (!e.providedIn) return !1;
          const t = Z(e.providedIn);
          return "string" == typeof t
            ? "any" === t || t === this.scope
            : this.injectorDefTypes.has(t);
        }
      }
      function c3(n) {
        const e = H4(n),
          t = null !== e ? e.factory : r2(n);
        if (null !== t) return t;
        if (n instanceof L) throw new ie(204, "");
        if (n instanceof Function)
          return (function Tb(n) {
            const e = n.length;
            if (e > 0) throw (dr(e, "?"), new ie(204, ""));
            const t = (function q_(n) {
              const e = n && (n[Bs] || n[Ml]);
              if (e) {
                const t = (function Z_(n) {
                  if (n.hasOwnProperty("name")) return n.name;
                  const e = ("" + n).match(/^function\s*([^\s(]+)/);
                  return null === e ? "" : e[1];
                })(n);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${t}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${t}" class.`
                  ),
                  e
                );
              }
              return null;
            })(n);
            return null !== t ? () => t.factory(n) : () => new n();
          })(n);
        throw new ie(204, "");
      }
      function Z7(n, e, t) {
        let i;
        if (oi(n)) {
          const r = Z(n);
          return r2(r) || c3(r);
        }
        if (K7(n)) i = () => Z(n.useValue);
        else if (
          (function kb(n) {
            return !(!n || !n.useFactory);
          })(n)
        )
          i = () => n.useFactory(...p6(n.deps || []));
        else if (
          (function Vb(n) {
            return !(!n || !n.useExisting);
          })(n)
        )
          i = () => C(Z(n.useExisting));
        else {
          const r = Z(n && (n.useClass || n.provide));
          if (
            !(function Hb(n) {
              return !!n.deps;
            })(n)
          )
            return r2(r) || c3(r);
          i = () => new r(...p6(n.deps));
        }
        return i;
      }
      function si(n, e, t = !1) {
        return { factory: n, value: e, multi: t ? [] : void 0 };
      }
      function K7(n) {
        return null !== n && "object" == typeof n && aC in n;
      }
      function oi(n) {
        return "function" == typeof n;
      }
      let nt = (() => {
        class n {
          static create(t, i) {
            var r;
            if (Array.isArray(t)) return W7({ name: "" }, i, t, "");
            {
              const s = null !== (r = t.name) && void 0 !== r ? r : "";
              return W7({ name: s }, t.parent, t.providers, s);
            }
          }
        }
        return (
          (n.THROW_IF_NOT_FOUND = pr),
          (n.NULL = new $7()),
          (n.ɵprov = z({ token: n, providedIn: "any", factory: () => C(s3) })),
          (n.__NG_ELEMENT_ID__ = -1),
          n
        );
      })();
      function Wb(n, e) {
        Js(w6(n)[1], et());
      }
      function ce(n) {
        let e = (function au(n) {
            return Object.getPrototypeOf(n.prototype).constructor;
          })(n.type),
          t = !0;
        const i = [n];
        for (; e; ) {
          let r;
          if (_1(n)) r = e.ɵcmp || e.ɵdir;
          else {
            if (e.ɵcmp) throw new ie(903, "");
            r = e.ɵdir;
          }
          if (r) {
            if (t) {
              i.push(r);
              const o = n;
              (o.inputs = f3(n.inputs)),
                (o.declaredInputs = f3(n.declaredInputs)),
                (o.outputs = f3(n.outputs));
              const a = r.hostBindings;
              a && Yb(n, a);
              const c = r.viewQuery,
                l = r.contentQueries;
              if (
                (c && Zb(n, c),
                l && Kb(n, l),
                V4(n.inputs, r.inputs),
                V4(n.declaredInputs, r.declaredInputs),
                V4(n.outputs, r.outputs),
                _1(r) && r.data.animation)
              ) {
                const u = n.data;
                u.animation = (u.animation || []).concat(r.data.animation);
              }
            }
            const s = r.features;
            if (s)
              for (let o = 0; o < s.length; o++) {
                const a = s[o];
                a && a.ngInherit && a(n), a === ce && (t = !1);
              }
          }
          e = Object.getPrototypeOf(e);
        }
        !(function qb(n) {
          let e = 0,
            t = null;
          for (let i = n.length - 1; i >= 0; i--) {
            const r = n[i];
            (r.hostVars = e += r.hostVars),
              (r.hostAttrs = io(r.hostAttrs, (t = io(t, r.hostAttrs))));
          }
        })(i);
      }
      function f3(n) {
        return n === k2 ? {} : n === Ce ? [] : n;
      }
      function Zb(n, e) {
        const t = n.viewQuery;
        n.viewQuery = t
          ? (i, r) => {
              e(i, r), t(i, r);
            }
          : e;
      }
      function Kb(n, e) {
        const t = n.contentQueries;
        n.contentQueries = t
          ? (i, r, s) => {
              e(i, r, s), t(i, r, s);
            }
          : e;
      }
      function Yb(n, e) {
        const t = n.hostBindings;
        n.hostBindings = t
          ? (i, r) => {
              e(i, r), t(i, r);
            }
          : e;
      }
      let Eo = null;
      function ai() {
        if (!Eo) {
          const n = _e.Symbol;
          if (n && n.iterator) Eo = n.iterator;
          else {
            const e = Object.getOwnPropertyNames(Map.prototype);
            for (let t = 0; t < e.length; ++t) {
              const i = e[t];
              "entries" !== i &&
                "size" !== i &&
                Map.prototype[i] === Map.prototype.entries &&
                (Eo = i);
            }
          }
        }
        return Eo;
      }
      function xr(n) {
        return (
          !!h3(n) && (Array.isArray(n) || (!(n instanceof Map) && ai() in n))
        );
      }
      function h3(n) {
        return null !== n && ("function" == typeof n || "object" == typeof n);
      }
      function R1(n, e, t) {
        return (n[e] = t);
      }
      function mt(n, e, t) {
        return !Object.is(n[e], t) && ((n[e] = t), !0);
      }
      function l2(n, e, t, i) {
        const r = mt(n, e, t);
        return mt(n, e + 1, i) || r;
      }
      function be(n, e, t, i) {
        const r = b();
        return mt(r, R2(), e) && (re(), F1(Fe(), r, n, e, t, i)), be;
      }
      function li(n, e, t, i) {
        return mt(n, R2(), t) ? e + B(t) + i : j;
      }
      function ui(n, e, t, i, r, s) {
        const a = l2(
          n,
          (function ln() {
            return R.lFrame.bindingIndex;
          })(),
          t,
          r
        );
        return un(2), a ? e + B(t) + i + B(r) + s : j;
      }
      function Q(n, e, t, i, r, s, o, a) {
        const c = b(),
          l = re(),
          u = n + 20,
          f = l.firstCreatePass
            ? (function iw(n, e, t, i, r, s, o, a, c) {
                const l = e.consts,
                  u = ni(e, n, 4, o || null, Vn(l, a));
                X6(e, t, u, Vn(l, c)), Js(e, u);
                const f = (u.tViews = bo(
                  2,
                  u,
                  i,
                  r,
                  s,
                  e.directiveRegistry,
                  e.pipeRegistry,
                  null,
                  e.schemas,
                  l
                ));
                return (
                  null !== e.queries &&
                    (e.queries.template(e, u),
                    (f.queries = e.queries.embeddedTView(u))),
                  u
                );
              })(u, l, c, e, t, i, r, s, o)
            : l.data[u];
        V1(f, !1);
        const h = c[K].createComment("");
        vo(l, c, h, f),
          pt(h, c),
          wo(c, (c[u] = O7(h, c, h, f))),
          qs(f) && Y6(l, c, f),
          null != o && Q6(c, f, a);
      }
      function qe(n) {
        return F2(
          (function Dy() {
            return R.lFrame.contextLView;
          })(),
          20 + n
        );
      }
      function _(n, e = U.Default) {
        const t = b();
        return null === t ? C(n, e) : t5(et(), t, Z(n), e);
      }
      function xo() {
        throw new Error("invalid");
      }
      function N(n, e, t) {
        const i = b();
        return mt(i, R2(), e) && Ut(re(), Fe(), i, n, e, i[K], t, !1), N;
      }
      function v3(n, e, t, i, r) {
        const o = r ? "class" : "style";
        U7(n, t, e.inputs[o], o, i);
      }
      function w(n, e, t, i) {
        const r = b(),
          s = re(),
          o = 20 + n,
          a = r[K],
          c = (r[o] = T6(
            a,
            e,
            (function ky() {
              return R.lFrame.currentNamespace;
            })()
          )),
          l = s.firstCreatePass
            ? (function Dw(n, e, t, i, r, s, o) {
                const a = e.consts,
                  l = ni(e, n, 2, r, Vn(a, s));
                return (
                  X6(e, t, l, Vn(a, o)),
                  null !== l.attrs && Do(l, l.attrs, !1),
                  null !== l.mergedAttrs && Do(l, l.mergedAttrs, !0),
                  null !== e.queries && e.queries.elementStart(e, l),
                  l
                );
              })(o, s, r, 0, e, t, i)
            : s.data[o];
        V1(l, !0);
        const u = l.mergedAttrs;
        null !== u && no(a, c, u);
        const f = l.classes;
        null !== f && O6(a, c, f);
        const h = l.styles;
        null !== h && o7(a, c, h),
          64 != (64 & l.flags) && vo(s, r, c, l),
          0 ===
            (function yy() {
              return R.lFrame.elementDepthCount;
            })() && pt(c, r),
          (function Cy() {
            R.lFrame.elementDepthCount++;
          })(),
          qs(l) && (Y6(s, r, l), E7(s, l, r)),
          null !== i && Q6(r, l);
      }
      function D() {
        let n = et();
        Q4() ? X4() : ((n = n.parent), V1(n, !1));
        const e = n;
        !(function My() {
          R.lFrame.elementDepthCount--;
        })();
        const t = re();
        t.firstCreatePass && (Js(t, n), U4(n) && t.queries.elementEnd(n)),
          null != e.classesWithoutHost &&
            (function Fy(n) {
              return 0 != (16 & n.flags);
            })(e) &&
            v3(t, e, b(), e.classesWithoutHost, !0),
          null != e.stylesWithoutHost &&
            (function Ry(n) {
              return 0 != (32 & n.flags);
            })(e) &&
            v3(t, e, b(), e.stylesWithoutHost, !1);
      }
      function se(n, e, t, i) {
        w(n, e, t, i), D();
      }
      function Lr(n, e, t) {
        const i = b(),
          r = re(),
          s = n + 20,
          o = r.firstCreatePass
            ? (function Ew(n, e, t, i, r) {
                const s = e.consts,
                  o = Vn(s, i),
                  a = ni(e, n, 8, "ng-container", o);
                return (
                  null !== o && Do(a, o, !0),
                  X6(e, t, a, Vn(s, r)),
                  null !== e.queries && e.queries.elementStart(e, a),
                  a
                );
              })(s, r, i, e, t)
            : r.data[s];
        V1(o, !0);
        const a = (i[s] = i[K].createComment(""));
        vo(r, i, a, o),
          pt(a, i),
          qs(o) && (Y6(r, i, o), E7(r, o, i)),
          null != t && Q6(i, o);
      }
      function Tr() {
        let n = et();
        const e = re();
        Q4() ? X4() : ((n = n.parent), V1(n, !1)),
          e.firstCreatePass && (Js(e, n), U4(n) && e.queries.elementEnd(n));
      }
      function Pn() {
        return b();
      }
      function Nr(n) {
        return !!n && "function" == typeof n.then;
      }
      const _3 = function Au(n) {
        return !!n && "function" == typeof n.subscribe;
      };
      function de(n, e, t, i) {
        const r = b(),
          s = re(),
          o = et();
        return (
          (function zu(n, e, t, i, r, s, o, a) {
            const c = qs(i),
              u = n.firstCreatePass && R7(n),
              f = e[8],
              h = F7(e);
            let d = !0;
            if (3 & i.type || a) {
              const g = e1(i, e),
                y = a ? a(g) : g,
                v = h.length,
                M = a ? (E) => a(We(E[i.index])) : i.index;
              if (Pe(t)) {
                let E = null;
                if (
                  (!a &&
                    c &&
                    (E = (function Aw(n, e, t, i) {
                      const r = n.cleanup;
                      if (null != r)
                        for (let s = 0; s < r.length - 1; s += 2) {
                          const o = r[s];
                          if (o === t && r[s + 1] === i) {
                            const a = e[7],
                              c = r[s + 2];
                            return a.length > c ? a[c] : null;
                          }
                          "string" == typeof o && (s += 2);
                        }
                      return null;
                    })(n, e, r, i.index)),
                  null !== E)
                )
                  ((E.__ngLastListenerFn__ || E).__ngNextListenerFn__ = s),
                    (E.__ngLastListenerFn__ = s),
                    (d = !1);
                else {
                  s = y3(i, e, f, s, !1);
                  const F = t.listen(y, r, s);
                  h.push(s, F), u && u.push(r, M, v, v + 1);
                }
              } else
                (s = y3(i, e, f, s, !0)),
                  y.addEventListener(r, s, o),
                  h.push(s),
                  u && u.push(r, M, v, o);
            } else s = y3(i, e, f, s, !1);
            const p = i.outputs;
            let m;
            if (d && null !== p && (m = p[r])) {
              const g = m.length;
              if (g)
                for (let y = 0; y < g; y += 2) {
                  const le = e[m[y]][m[y + 1]].subscribe(s),
                    xe = h.length;
                  h.push(s, le), u && u.push(r, i.index, xe, -(xe + 1));
                }
            }
          })(s, r, r[K], o, n, e, !!t, i),
          de
        );
      }
      function Lu(n, e, t, i) {
        try {
          return !1 !== t(i);
        } catch (r) {
          return j7(n, r), !1;
        }
      }
      function y3(n, e, t, i, r) {
        return function s(o) {
          if (o === Function) return i;
          const a = 2 & n.flags ? Ft(n.index, e) : e;
          0 == (32 & e[2]) && t3(a);
          let c = Lu(e, 0, i, o),
            l = s.__ngNextListenerFn__;
          for (; l; ) (c = Lu(e, 0, l, o) && c), (l = l.__ngNextListenerFn__);
          return r && !1 === c && (o.preventDefault(), (o.returnValue = !1)), c;
        };
      }
      function P(n = 1) {
        return (function zy(n) {
          return (R.lFrame.contextLView = (function Ly(n, e) {
            for (; n > 0; ) (e = e[15]), n--;
            return e;
          })(n, R.lFrame.contextLView))[8];
        })(n);
      }
      function xw(n, e) {
        let t = null;
        const i = (function IM(n) {
          const e = n.attrs;
          if (null != e) {
            const t = e.indexOf(5);
            if (0 == (1 & t)) return e[t + 1];
          }
          return null;
        })(n);
        for (let r = 0; r < e.length; r++) {
          const s = e[r];
          if ("*" !== s) {
            if (null === i ? u7(n, s, !0) : PM(i, s)) return r;
          } else t = r;
        }
        return t;
      }
      function Vr(n) {
        const e = b()[16][6];
        if (!e.projection) {
          const i = (e.projection = dr(n ? n.length : 1, null)),
            r = i.slice();
          let s = e.child;
          for (; null !== s; ) {
            const o = n ? xw(s, n) : 0;
            null !== o &&
              (r[o] ? (r[o].projectionNext = s) : (i[o] = s), (r[o] = s)),
              (s = s.next);
          }
        }
      }
      function $t(n, e = 0, t) {
        const i = b(),
          r = re(),
          s = ni(r, 20 + n, 16, null, t || null);
        null === s.projection && (s.projection = e),
          X4(),
          64 != (64 & s.flags) &&
            (function xM(n, e, t) {
              s7(e[K], 0, e, t, K5(n, t, e), J5(t.parent || e[6], t, e));
            })(r, i, s);
      }
      function B1(n, e, t) {
        return C3(n, "", e, "", t), B1;
      }
      function C3(n, e, t, i, r) {
        const s = b(),
          o = li(s, e, t, i);
        return o !== j && Ut(re(), Fe(), s, n, o, s[K], r, !1), C3;
      }
      function Fu(n, e, t, i, r) {
        const s = n[t + 1],
          o = null === e;
        let a = i ? C1(s) : fn(s),
          c = !1;
        for (; 0 !== a && (!1 === c || o); ) {
          const u = n[a + 1];
          Tw(n[a], e) && ((c = !0), (n[a + 1] = i ? R6(u) : P6(u))),
            (a = i ? C1(u) : fn(u));
        }
        c && (n[t + 1] = i ? P6(s) : R6(s));
      }
      function Tw(n, e) {
        return (
          null === n ||
          null == e ||
          (Array.isArray(n) ? n[1] : n) === e ||
          (!(!Array.isArray(n) || "string" != typeof e) && K2(n, e) >= 0)
        );
      }
      const it = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function Ru(n) {
        return n.substring(it.key, it.keyEnd);
      }
      function Bu(n, e) {
        const t = it.textEnd;
        return t === e
          ? -1
          : ((e = it.keyEnd =
              (function Iw(n, e, t) {
                for (; e < t && n.charCodeAt(e) > 32; ) e++;
                return e;
              })(n, (it.key = e), t)),
            _i(n, e, t));
      }
      function _i(n, e, t) {
        for (; e < t && n.charCodeAt(e) <= 32; ) e++;
        return e;
      }
      function b1(n, e, t) {
        return w1(n, e, t, !1), b1;
      }
      function ut(n, e) {
        return w1(n, e, null, !0), ut;
      }
      function U1(n, e) {
        for (
          let t = (function Vw(n) {
            return (
              (function Uu(n) {
                (it.key = 0),
                  (it.keyEnd = 0),
                  (it.value = 0),
                  (it.valueEnd = 0),
                  (it.textEnd = n.length);
              })(n),
              Bu(n, _i(n, 0, it.textEnd))
            );
          })(e);
          t >= 0;
          t = Bu(e, t)
        )
          Rt(n, Ru(e), !0);
      }
      function w1(n, e, t, i) {
        const r = b(),
          s = re(),
          o = un(2);
        s.firstUpdatePass && Zu(s, n, o, i),
          e !== j &&
            mt(r, o, e) &&
            Yu(
              s,
              s.data[Ct()],
              r,
              r[K],
              n,
              (r[o + 1] = (function Gw(n, e) {
                return (
                  null == n ||
                    ("string" == typeof e
                      ? (n += e)
                      : "object" == typeof n && (n = ge(Bt(n)))),
                  n
                );
              })(e, t)),
              i,
              o
            );
      }
      function D1(n, e, t, i) {
        const r = re(),
          s = un(2);
        r.firstUpdatePass && Zu(r, null, s, i);
        const o = b();
        if (t !== j && mt(o, s, t)) {
          const a = r.data[Ct()];
          if (Xu(a, i) && !qu(r, s)) {
            let c = i ? a.classesWithoutHost : a.stylesWithoutHost;
            null !== c && (t = k4(c, t || "")), v3(r, a, o, t, i);
          } else
            !(function $w(n, e, t, i, r, s, o, a) {
              r === j && (r = Ce);
              let c = 0,
                l = 0,
                u = 0 < r.length ? r[0] : null,
                f = 0 < s.length ? s[0] : null;
              for (; null !== u || null !== f; ) {
                const h = c < r.length ? r[c + 1] : void 0,
                  d = l < s.length ? s[l + 1] : void 0;
                let m,
                  p = null;
                u === f
                  ? ((c += 2), (l += 2), h !== d && ((p = f), (m = d)))
                  : null === f || (null !== u && u < f)
                  ? ((c += 2), (p = u))
                  : ((l += 2), (p = f), (m = d)),
                  null !== p && Yu(n, e, t, i, p, m, o, a),
                  (u = c < r.length ? r[c] : null),
                  (f = l < s.length ? s[l] : null);
              }
            })(
              r,
              a,
              o,
              o[K],
              o[s + 1],
              (o[s + 1] = (function Uw(n, e, t) {
                if (null == t || "" === t) return Ce;
                const i = [],
                  r = Bt(t);
                if (Array.isArray(r))
                  for (let s = 0; s < r.length; s++) n(i, r[s], !0);
                else if ("object" == typeof r)
                  for (const s in r) r.hasOwnProperty(s) && n(i, s, r[s]);
                else "string" == typeof r && e(i, r);
                return i;
              })(n, e, t)),
              i,
              s
            );
        }
      }
      function qu(n, e) {
        return e >= n.expandoStartIndex;
      }
      function Zu(n, e, t, i) {
        const r = n.data;
        if (null === r[t + 1]) {
          const s = r[Ct()],
            o = qu(n, t);
          Xu(s, i) && null === e && !o && (e = !1),
            (e = (function Fw(n, e, t, i) {
              const r = (function e6(n) {
                const e = R.lFrame.currentDirectiveIndex;
                return -1 === e ? null : n[e];
              })(n);
              let s = i ? e.residualClasses : e.residualStyles;
              if (null === r)
                0 === (i ? e.classBindings : e.styleBindings) &&
                  ((t = kr((t = M3(null, n, e, t, i)), e.attrs, i)),
                  (s = null));
              else {
                const o = e.directiveStylingLast;
                if (-1 === o || n[o] !== r)
                  if (((t = M3(r, n, e, t, i)), null === s)) {
                    let c = (function Rw(n, e, t) {
                      const i = t ? e.classBindings : e.styleBindings;
                      if (0 !== fn(i)) return n[C1(i)];
                    })(n, e, i);
                    void 0 !== c &&
                      Array.isArray(c) &&
                      ((c = M3(null, n, e, c[1], i)),
                      (c = kr(c, e.attrs, i)),
                      (function Bw(n, e, t, i) {
                        n[C1(t ? e.classBindings : e.styleBindings)] = i;
                      })(n, e, i, c));
                  } else
                    s = (function jw(n, e, t) {
                      let i;
                      const r = e.directiveEnd;
                      for (let s = 1 + e.directiveStylingLast; s < r; s++)
                        i = kr(i, n[s].hostAttrs, t);
                      return kr(i, e.attrs, t);
                    })(n, e, i);
              }
              return (
                void 0 !== s &&
                  (i ? (e.residualClasses = s) : (e.residualStyles = s)),
                t
              );
            })(r, s, e, i)),
            (function zw(n, e, t, i, r, s) {
              let o = s ? e.classBindings : e.styleBindings,
                a = C1(o),
                c = fn(o);
              n[i] = t;
              let u,
                l = !1;
              if (Array.isArray(t)) {
                const f = t;
                (u = f[1]), (null === u || K2(f, u) > 0) && (l = !0);
              } else u = t;
              if (r)
                if (0 !== c) {
                  const h = C1(n[a + 1]);
                  (n[i + 1] = yo(h, a)),
                    0 !== h && (n[h + 1] = F6(n[h + 1], i)),
                    (n[a + 1] = (function jM(n, e) {
                      return (131071 & n) | (e << 17);
                    })(n[a + 1], i));
                } else
                  (n[i + 1] = yo(a, 0)),
                    0 !== a && (n[a + 1] = F6(n[a + 1], i)),
                    (a = i);
              else
                (n[i + 1] = yo(c, 0)),
                  0 === a ? (a = i) : (n[c + 1] = F6(n[c + 1], i)),
                  (c = i);
              l && (n[i + 1] = P6(n[i + 1])),
                Fu(n, u, i, !0),
                Fu(n, u, i, !1),
                (function Lw(n, e, t, i, r) {
                  const s = r ? n.residualClasses : n.residualStyles;
                  null != s &&
                    "string" == typeof e &&
                    K2(s, e) >= 0 &&
                    (t[i + 1] = R6(t[i + 1]));
                })(e, u, n, i, s),
                (o = yo(a, c)),
                s ? (e.classBindings = o) : (e.styleBindings = o);
            })(r, s, e, t, o, i);
        }
      }
      function M3(n, e, t, i, r) {
        let s = null;
        const o = t.directiveEnd;
        let a = t.directiveStylingLast;
        for (
          -1 === a ? (a = t.directiveStart) : a++;
          a < o && ((s = e[a]), (i = kr(i, s.hostAttrs, r)), s !== n);

        )
          a++;
        return null !== n && (t.directiveStylingLast = a), i;
      }
      function kr(n, e, t) {
        const i = t ? 1 : 2;
        let r = -1;
        if (null !== e)
          for (let s = 0; s < e.length; s++) {
            const o = e[s];
            "number" == typeof o
              ? (r = o)
              : r === i &&
                (Array.isArray(n) || (n = void 0 === n ? [] : ["", n]),
                Rt(n, o, !!t || e[++s]));
          }
        return void 0 === n ? null : n;
      }
      function Yu(n, e, t, i, r, s, o, a) {
        if (!(3 & e.type)) return;
        const c = n.data,
          l = c[a + 1];
        zo(
          (function m7(n) {
            return 1 == (1 & n);
          })(l)
            ? Qu(c, e, t, r, fn(l), o)
            : void 0
        ) ||
          (zo(s) ||
            ((function p7(n) {
              return 2 == (2 & n);
            })(l) &&
              (s = Qu(c, null, t, r, a, o))),
          (function LM(n, e, t, i, r) {
            const s = Pe(n);
            if (e)
              r
                ? s
                  ? n.addClass(t, i)
                  : t.classList.add(i)
                : s
                ? n.removeClass(t, i)
                : t.classList.remove(i);
            else {
              let o = -1 === i.indexOf("-") ? void 0 : jt.DashCase;
              if (null == r)
                s ? n.removeStyle(t, i, o) : t.style.removeProperty(i);
              else {
                const a = "string" == typeof r && r.endsWith("!important");
                a && ((r = r.slice(0, -10)), (o |= jt.Important)),
                  s
                    ? n.setStyle(t, i, r, o)
                    : t.style.setProperty(i, r, a ? "important" : "");
              }
            }
          })(i, o, Zs(Ct(), t), r, s));
      }
      function Qu(n, e, t, i, r, s) {
        const o = null === e;
        let a;
        for (; r > 0; ) {
          const c = n[r],
            l = Array.isArray(c),
            u = l ? c[1] : c,
            f = null === u;
          let h = t[r + 1];
          h === j && (h = f ? Ce : void 0);
          let d = f ? f6(h, i) : u === i ? h : void 0;
          if ((l && !zo(d) && (d = f6(c, i)), zo(d) && ((a = d), o))) return a;
          const p = n[r + 1];
          r = o ? C1(p) : fn(p);
        }
        if (null !== e) {
          let c = s ? e.residualClasses : e.residualStyles;
          null != c && (a = f6(c, i));
        }
        return a;
      }
      function zo(n) {
        return void 0 !== n;
      }
      function Xu(n, e) {
        return 0 != (n.flags & (e ? 16 : 32));
      }
      function q(n, e = "") {
        const t = b(),
          i = re(),
          r = n + 20,
          s = i.firstCreatePass ? ni(i, r, 1, e, null) : i.data[r],
          o = (t[r] = (function L6(n, e) {
            return Pe(n) ? n.createText(e) : n.createTextNode(e);
          })(t[K], e));
        vo(i, t, o, s), V1(s, !1);
      }
      function Ve(n) {
        return $1("", n, ""), Ve;
      }
      function $1(n, e, t) {
        const i = b(),
          r = li(i, n, e, t);
        return r !== j && hn(i, Ct(), r), $1;
      }
      function b3(n, e, t, i, r) {
        const s = b(),
          o = ui(s, n, e, t, i, r);
        return o !== j && hn(s, Ct(), o), b3;
      }
      function Lo(n, e, t) {
        const i = b();
        return mt(i, R2(), e) && Ut(re(), Fe(), i, n, e, i[K], t, !0), Lo;
      }
      const u2 = void 0;
      var uD = [
        "en",
        [["a", "p"], ["AM", "PM"], u2],
        [["AM", "PM"], u2, u2],
        [
          ["S", "M", "T", "W", "T", "F", "S"],
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        ],
        u2,
        [
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        ],
        u2,
        [
          ["B", "A"],
          ["BC", "AD"],
          ["Before Christ", "Anno Domini"],
        ],
        0,
        [6, 0],
        ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
        ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
        ["{1}, {0}", u2, "{1} 'at' {0}", u2],
        [
          ".",
          ",",
          ";",
          "%",
          "+",
          "-",
          "E",
          "\xd7",
          "\u2030",
          "\u221e",
          "NaN",
          ":",
        ],
        ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
        "USD",
        "$",
        "US Dollar",
        {},
        "ltr",
        function lD(n) {
          const t = Math.floor(Math.abs(n)),
            i = n.toString().replace(/^[^.]*\.?/, "").length;
          return 1 === t && 0 === i ? 1 : 5;
        },
      ];
      let yi = {};
      function wt(n) {
        const e = (function fD(n) {
          return n.toLowerCase().replace(/_/g, "-");
        })(n);
        let t = Cf(e);
        if (t) return t;
        const i = e.split("-")[0];
        if (((t = Cf(i)), t)) return t;
        if ("en" === i) return uD;
        throw new Error(`Missing locale data for the locale "${n}".`);
      }
      function Cf(n) {
        return (
          n in yi ||
            (yi[n] =
              _e.ng &&
              _e.ng.common &&
              _e.ng.common.locales &&
              _e.ng.common.locales[n]),
          yi[n]
        );
      }
      var x = (() => (
        ((x = x || {})[(x.LocaleId = 0)] = "LocaleId"),
        (x[(x.DayPeriodsFormat = 1)] = "DayPeriodsFormat"),
        (x[(x.DayPeriodsStandalone = 2)] = "DayPeriodsStandalone"),
        (x[(x.DaysFormat = 3)] = "DaysFormat"),
        (x[(x.DaysStandalone = 4)] = "DaysStandalone"),
        (x[(x.MonthsFormat = 5)] = "MonthsFormat"),
        (x[(x.MonthsStandalone = 6)] = "MonthsStandalone"),
        (x[(x.Eras = 7)] = "Eras"),
        (x[(x.FirstDayOfWeek = 8)] = "FirstDayOfWeek"),
        (x[(x.WeekendRange = 9)] = "WeekendRange"),
        (x[(x.DateFormat = 10)] = "DateFormat"),
        (x[(x.TimeFormat = 11)] = "TimeFormat"),
        (x[(x.DateTimeFormat = 12)] = "DateTimeFormat"),
        (x[(x.NumberSymbols = 13)] = "NumberSymbols"),
        (x[(x.NumberFormats = 14)] = "NumberFormats"),
        (x[(x.CurrencyCode = 15)] = "CurrencyCode"),
        (x[(x.CurrencySymbol = 16)] = "CurrencySymbol"),
        (x[(x.CurrencyName = 17)] = "CurrencyName"),
        (x[(x.Currencies = 18)] = "Currencies"),
        (x[(x.Directionality = 19)] = "Directionality"),
        (x[(x.PluralCase = 20)] = "PluralCase"),
        (x[(x.ExtraData = 21)] = "ExtraData"),
        x
      ))();
      const To = "en-US";
      let Mf = To;
      function E3(n, e, t, i, r) {
        if (((n = Z(n)), Array.isArray(n)))
          for (let s = 0; s < n.length; s++) E3(n[s], e, t, i, r);
        else {
          const s = re(),
            o = b();
          let a = oi(n) ? n : Z(n.provide),
            c = Z7(n);
          const l = et(),
            u = 1048575 & l.providerIndexes,
            f = l.directiveStart,
            h = l.providerIndexes >> 20;
          if (oi(n) || !n.multi) {
            const d = new ar(c, r, _),
              p = A3(a, e, r ? u : u + h, f);
            -1 === p
              ? (oo(lr(l, o), s, a),
                S3(s, n, e.length),
                e.push(a),
                l.directiveStart++,
                l.directiveEnd++,
                r && (l.providerIndexes += 1048576),
                t.push(d),
                o.push(d))
              : ((t[p] = d), (o[p] = d));
          } else {
            const d = A3(a, e, u + h, f),
              p = A3(a, e, u, u + h),
              m = d >= 0 && t[d],
              g = p >= 0 && t[p];
            if ((r && !g) || (!r && !m)) {
              oo(lr(l, o), s, a);
              const y = (function lE(n, e, t, i, r) {
                const s = new ar(n, t, _);
                return (
                  (s.multi = []),
                  (s.index = e),
                  (s.componentProviders = 0),
                  Gf(s, r, i && !t),
                  s
                );
              })(r ? cE : aE, t.length, r, i, c);
              !r && g && (t[p].providerFactory = y),
                S3(s, n, e.length, 0),
                e.push(a),
                l.directiveStart++,
                l.directiveEnd++,
                r && (l.providerIndexes += 1048576),
                t.push(y),
                o.push(y);
            } else S3(s, n, d > -1 ? d : p, Gf(t[r ? p : d], c, !r && i));
            !r && i && g && t[p].componentProviders++;
          }
        }
      }
      function S3(n, e, t, i) {
        const r = oi(e),
          s = (function Ib(n) {
            return !!n.useClass;
          })(e);
        if (r || s) {
          const c = (s ? Z(e.useClass) : e).prototype.ngOnDestroy;
          if (c) {
            const l = n.destroyHooks || (n.destroyHooks = []);
            if (!r && e.multi) {
              const u = l.indexOf(t);
              -1 === u ? l.push(t, [i, c]) : l[u + 1].push(i, c);
            } else l.push(t, c);
          }
        }
      }
      function Gf(n, e, t) {
        return t && n.componentProviders++, n.multi.push(e) - 1;
      }
      function A3(n, e, t, i) {
        for (let r = t; r < i; r++) if (e[r] === n) return r;
        return -1;
      }
      function aE(n, e, t, i) {
        return x3(this.multi, []);
      }
      function cE(n, e, t, i) {
        const r = this.multi;
        let s;
        if (this.providerFactory) {
          const o = this.providerFactory.componentProviders,
            a = ur(t, t[1], this.providerFactory.index, i);
          (s = a.slice(0, o)), x3(r, s);
          for (let c = o; c < a.length; c++) s.push(a[c]);
        } else (s = []), x3(r, s);
        return s;
      }
      function x3(n, e) {
        for (let t = 0; t < n.length; t++) e.push((0, n[t])());
        return e;
      }
      function Se(n, e = []) {
        return (t) => {
          t.providersResolver = (i, r) =>
            (function oE(n, e, t) {
              const i = re();
              if (i.firstCreatePass) {
                const r = _1(n);
                E3(t, i.data, i.blueprint, r, !0),
                  E3(e, i.data, i.blueprint, r, !1);
              }
            })(i, r ? r(n) : n, e);
        };
      }
      class Wf {}
      class hE {
        resolveComponentFactory(e) {
          throw (function fE(n) {
            const e = Error(
              `No component factory found for ${ge(
                n
              )}. Did you add it to @NgModule.entryComponents?`
            );
            return (e.ngComponent = n), e;
          })(e);
        }
      }
      let f2 = (() => {
        class n {}
        return (n.NULL = new hE()), n;
      })();
      function dE() {
        return Mi(et(), b());
      }
      function Mi(n, e) {
        return new Le(e1(n, e));
      }
      let Le = (() => {
        class n {
          constructor(t) {
            this.nativeElement = t;
          }
        }
        return (n.__NG_ELEMENT_ID__ = dE), n;
      })();
      function pE(n) {
        return n instanceof Le ? n.nativeElement : n;
      }
      class Fr {}
      let G1 = (() => {
          class n {}
          return (
            (n.__NG_ELEMENT_ID__ = () =>
              (function gE() {
                const n = b(),
                  t = Ft(et().index, n);
                return (function mE(n) {
                  return n[K];
                })(N1(t) ? t : n);
              })()),
            n
          );
        })(),
        vE = (() => {
          class n {}
          return (
            (n.ɵprov = z({
              token: n,
              providedIn: "root",
              factory: () => null,
            })),
            n
          );
        })();
      class h2 {
        constructor(e) {
          (this.full = e),
            (this.major = e.split(".")[0]),
            (this.minor = e.split(".")[1]),
            (this.patch = e.split(".").slice(2).join("."));
        }
      }
      const _E = new h2("13.1.3"),
        z3 = {};
      function Ho(n, e, t, i, r = !1) {
        for (; null !== t; ) {
          const s = e[t.index];
          if ((null !== s && i.push(We(s)), v1(s)))
            for (let a = 10; a < s.length; a++) {
              const c = s[a],
                l = c[1].firstChild;
              null !== l && Ho(c[1], c, l, i);
            }
          const o = t.type;
          if (8 & o) Ho(n, e, t.child, i);
          else if (32 & o) {
            const a = A6(t, e);
            let c;
            for (; (c = a()); ) i.push(c);
          } else if (16 & o) {
            const a = i7(e, t);
            if (Array.isArray(a)) i.push(...a);
            else {
              const c = wr(e[16]);
              Ho(c[1], c, a, i, !0);
            }
          }
          t = r ? t.projectionNext : t.next;
        }
        return i;
      }
      class Rr {
        constructor(e, t) {
          (this._lView = e),
            (this._cdRefInjectingView = t),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get rootNodes() {
          const e = this._lView,
            t = e[1];
          return Ho(t, e, t.firstChild, []);
        }
        get context() {
          return this._lView[8];
        }
        set context(e) {
          this._lView[8] = e;
        }
        get destroyed() {
          return 256 == (256 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const e = this._lView[3];
            if (v1(e)) {
              const t = e[8],
                i = t ? t.indexOf(this) : -1;
              i > -1 && (N6(e, i), co(t, i));
            }
            this._attachedToViewContainer = !1;
          }
          Z5(this._lView[1], this._lView);
        }
        onDestroy(e) {
          z7(this._lView[1], this._lView, null, e);
        }
        markForCheck() {
          t3(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -129;
        }
        reattach() {
          this._lView[2] |= 128;
        }
        detectChanges() {
          i3(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {
          !(function Db(n, e, t) {
            Ys(!0);
            try {
              i3(n, e, t);
            } finally {
              Ys(!1);
            }
          })(this._lView[1], this._lView, this.context);
        }
        attachToViewContainerRef() {
          if (this._appRef) throw new ie(902, "");
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function CM(n, e) {
              Dr(n, e, e[K], 2, null, null);
            })(this._lView[1], this._lView);
        }
        attachToAppRef(e) {
          if (this._attachedToViewContainer) throw new ie(902, "");
          this._appRef = e;
        }
      }
      class yE extends Rr {
        constructor(e) {
          super(e), (this._view = e);
        }
        detectChanges() {
          P7(this._view);
        }
        checkNoChanges() {
          !(function Eb(n) {
            Ys(!0);
            try {
              P7(n);
            } finally {
              Ys(!1);
            }
          })(this._view);
        }
        get context() {
          return null;
        }
      }
      class Zf extends f2 {
        constructor(e) {
          super(), (this.ngModule = e);
        }
        resolveComponentFactory(e) {
          const t = ht(e);
          return new L3(t, this.ngModule);
        }
      }
      function Kf(n) {
        const e = [];
        for (let t in n)
          n.hasOwnProperty(t) && e.push({ propName: n[t], templateName: t });
        return e;
      }
      const ME = new L("SCHEDULER_TOKEN", {
        providedIn: "root",
        factory: () => R5,
      });
      class L3 extends Wf {
        constructor(e, t) {
          super(),
            (this.componentDef = e),
            (this.ngModule = t),
            (this.componentType = e.type),
            (this.selector = (function RM(n) {
              return n.map(FM).join(",");
            })(e.selectors)),
            (this.ngContentSelectors = e.ngContentSelectors
              ? e.ngContentSelectors
              : []),
            (this.isBoundToModule = !!t);
        }
        get inputs() {
          return Kf(this.componentDef.inputs);
        }
        get outputs() {
          return Kf(this.componentDef.outputs);
        }
        create(e, t, i, r) {
          const s = (r = r || this.ngModule)
              ? (function bE(n, e) {
                  return {
                    get: (t, i, r) => {
                      const s = n.get(t, z3, r);
                      return s !== z3 || i === z3 ? s : e.get(t, i, r);
                    },
                  };
                })(e, r.injector)
              : e,
            o = s.get(Fr, kl),
            a = s.get(vE, null),
            c = o.createRenderer(null, this.componentDef),
            l = this.componentDef.selectors[0][0] || "div",
            u = i
              ? (function x7(n, e, t) {
                  if (Pe(n)) return n.selectRootElement(e, t === m1.ShadowDom);
                  let i = "string" == typeof e ? n.querySelector(e) : e;
                  return (i.textContent = ""), i;
                })(c, i, this.componentDef.encapsulation)
              : T6(
                  o.createRenderer(null, this.componentDef),
                  l,
                  (function CE(n) {
                    const e = n.toLowerCase();
                    return "svg" === e
                      ? Nl
                      : "math" === e
                      ? "http://www.w3.org/1998/MathML/"
                      : null;
                  })(l)
                ),
            f = this.componentDef.onPush ? 576 : 528,
            h = (function ou(n, e) {
              return {
                components: [],
                scheduler: n || R5,
                clean: Sb,
                playerHandler: e || null,
                flags: 0,
              };
            })(),
            d = bo(0, null, null, 1, 0, null, null, null, null, null),
            p = Er(null, d, h, f, null, null, o, c, a, s);
          let m, g;
          Qs(p);
          try {
            const y = (function ru(n, e, t, i, r, s) {
              const o = t[1];
              t[20] = n;
              const c = ni(o, 20, 2, "#host", null),
                l = (c.mergedAttrs = e.hostAttrs);
              null !== l &&
                (Do(c, l, !0),
                null !== n &&
                  (no(r, n, l),
                  null !== c.classes && O6(r, n, c.classes),
                  null !== c.styles && o7(r, n, c.styles)));
              const u = i.createRenderer(n, e),
                f = Er(
                  t,
                  S7(e),
                  null,
                  e.onPush ? 64 : 16,
                  t[20],
                  c,
                  i,
                  u,
                  s || null,
                  null
                );
              return (
                o.firstCreatePass &&
                  (oo(lr(c, t), o, e.type), k7(o, c), I7(c, t.length, 1)),
                wo(t, f),
                (t[20] = f)
              );
            })(u, this.componentDef, p, o, c);
            if (u)
              if (i) no(c, u, ["ng-version", _E.full]);
              else {
                const { attrs: v, classes: M } = (function BM(n) {
                  const e = [],
                    t = [];
                  let i = 1,
                    r = 2;
                  for (; i < n.length; ) {
                    let s = n[i];
                    if ("string" == typeof s)
                      2 === r
                        ? "" !== s && e.push(s, n[++i])
                        : 8 === r && t.push(s);
                    else {
                      if (!y1(r)) break;
                      r = s;
                    }
                    i++;
                  }
                  return { attrs: e, classes: t };
                })(this.componentDef.selectors[0]);
                v && no(c, u, v), M && M.length > 0 && O6(c, u, M.join(" "));
              }
            if (((g = Z4(d, 20)), void 0 !== t)) {
              const v = (g.projection = []);
              for (let M = 0; M < this.ngContentSelectors.length; M++) {
                const E = t[M];
                v.push(null != E ? Array.from(E) : null);
              }
            }
            (m = (function su(n, e, t, i, r) {
              const s = t[1],
                o = (function cb(n, e, t) {
                  const i = et();
                  n.firstCreatePass &&
                    (t.providersResolver && t.providersResolver(t),
                    H7(n, i, e, ii(n, e, 1, null), t));
                  const r = ur(e, n, i.directiveStart, i);
                  pt(r, e);
                  const s = e1(i, e);
                  return s && pt(s, e), r;
                })(s, t, e);
              if (
                (i.components.push(o),
                (n[8] = o),
                r && r.forEach((c) => c(o, e)),
                e.contentQueries)
              ) {
                const c = et();
                e.contentQueries(1, o, c.directiveStart);
              }
              const a = et();
              return (
                !s.firstCreatePass ||
                  (null === e.hostBindings && null === e.hostAttrs) ||
                  (kn(a.index),
                  N7(t[1], a, 0, a.directiveStart, a.directiveEnd, e),
                  V7(e, o)),
                o
              );
            })(y, this.componentDef, p, h, [Wb])),
              Sr(d, p, null);
          } finally {
            Xs();
          }
          return new DE(this.componentType, m, Mi(g, p), p, g);
        }
      }
      class DE extends class uE {} {
        constructor(e, t, i, r, s) {
          super(),
            (this.location = i),
            (this._rootLView = r),
            (this._tNode = s),
            (this.instance = t),
            (this.hostView = this.changeDetectorRef = new yE(r)),
            (this.componentType = e);
        }
        get injector() {
          return new U2(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(e) {
          this.hostView.onDestroy(e);
        }
      }
      class dn {}
      class Yf {}
      const bi = new Map();
      class Jf extends dn {
        constructor(e, t) {
          super(),
            (this._parent = t),
            (this._bootstrapComponents = []),
            (this.injector = this),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Zf(this));
          const i = Qt(e);
          (this._bootstrapComponents = P1(i.bootstrap)),
            (this._r3Injector = q7(
              e,
              t,
              [
                { provide: dn, useValue: this },
                { provide: f2, useValue: this.componentFactoryResolver },
              ],
              ge(e)
            )),
            this._r3Injector._resolveInjectorDefTypes(),
            (this.instance = this.get(e));
        }
        get(e, t = nt.THROW_IF_NOT_FOUND, i = U.Default) {
          return e === nt || e === dn || e === s3
            ? this
            : this._r3Injector.get(e, t, i);
        }
        destroy() {
          const e = this._r3Injector;
          !e.destroyed && e.destroy(),
            this.destroyCbs.forEach((t) => t()),
            (this.destroyCbs = null);
        }
        onDestroy(e) {
          this.destroyCbs.push(e);
        }
      }
      class T3 extends Yf {
        constructor(e) {
          super(),
            (this.moduleType = e),
            null !== Qt(e) &&
              (function SE(n) {
                const e = new Set();
                !(function t(i) {
                  const r = Qt(i, !0),
                    s = r.id;
                  null !== s &&
                    ((function Qf(n, e, t) {
                      if (e && e !== t)
                        throw new Error(
                          `Duplicate module registered for ${n} - ${ge(
                            e
                          )} vs ${ge(e.name)}`
                        );
                    })(s, bi.get(s), i),
                    bi.set(s, i));
                  const o = P1(r.imports);
                  for (const a of o) e.has(a) || (e.add(a), t(a));
                })(n);
              })(e);
        }
        create(e) {
          return new Jf(this.moduleType, e);
        }
      }
      function Br(n, e) {
        const t = n[e];
        return t === j ? void 0 : t;
      }
      function n9(n, e, t, i, r, s, o) {
        const a = e + t;
        return l2(n, a, r, s)
          ? R1(n, a + 2, o ? i.call(o, r, s) : i(r, s))
          : Br(n, a + 2);
      }
      function wi(n, e) {
        const t = re();
        let i;
        const r = n + 20;
        t.firstCreatePass
          ? ((i = (function HE(n, e) {
              if (e)
                for (let t = e.length - 1; t >= 0; t--) {
                  const i = e[t];
                  if (n === i.name) return i;
                }
            })(e, t.pipeRegistry)),
            (t.data[r] = i),
            i.onDestroy &&
              (t.destroyHooks || (t.destroyHooks = [])).push(r, i.onDestroy))
          : (i = t.data[r]);
        const s = i.factory || (i.factory = r2(i.type)),
          o = Ln(_);
        try {
          const a = ro(!1),
            c = s();
          return (
            ro(a),
            (function rw(n, e, t, i) {
              t >= n.data.length &&
                ((n.data[t] = null), (n.blueprint[t] = null)),
                (e[t] = i);
            })(t, b(), r, c),
            c
          );
        } finally {
          Ln(o);
        }
      }
      function N3(n, e, t) {
        const i = n + 20,
          r = b(),
          s = F2(r, i);
        return jr(r, i)
          ? (function t9(n, e, t, i, r, s) {
              const o = e + t;
              return mt(n, o, r)
                ? R1(n, o + 1, s ? i.call(s, r) : i(r))
                : Br(n, o + 1);
            })(r, yt(), e, s.transform, t, s)
          : s.transform(t);
      }
      function Oo(n, e, t, i) {
        const r = n + 20,
          s = b(),
          o = F2(s, r);
        return jr(s, r)
          ? n9(s, yt(), e, o.transform, t, i, o)
          : o.transform(t, i);
      }
      function jr(n, e) {
        return n[1].data[e].pure;
      }
      function V3(n) {
        return (e) => {
          setTimeout(n, void 0, e);
        };
      }
      const $ = class RE extends me {
        constructor(e = !1) {
          super(), (this.__isAsync = e);
        }
        emit(e) {
          super.next(e);
        }
        subscribe(e, t, i) {
          var r, s, o;
          let a = e,
            c = t || (() => null),
            l = i;
          if (e && "object" == typeof e) {
            const f = e;
            (a = null === (r = f.next) || void 0 === r ? void 0 : r.bind(f)),
              (c = null === (s = f.error) || void 0 === s ? void 0 : s.bind(f)),
              (l =
                null === (o = f.complete) || void 0 === o ? void 0 : o.bind(f));
          }
          this.__isAsync && ((c = V3(c)), a && (a = V3(a)), l && (l = V3(l)));
          const u = super.subscribe({ next: a, error: c, complete: l });
          return e instanceof He && e.add(u), u;
        }
      };
      function BE() {
        return this._results[ai()]();
      }
      class Ur {
        constructor(e = !1) {
          (this._emitDistinctChangesOnly = e),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const t = ai(),
            i = Ur.prototype;
          i[t] || (i[t] = BE);
        }
        get changes() {
          return this._changes || (this._changes = new $());
        }
        get(e) {
          return this._results[e];
        }
        map(e) {
          return this._results.map(e);
        }
        filter(e) {
          return this._results.filter(e);
        }
        find(e) {
          return this._results.find(e);
        }
        reduce(e, t) {
          return this._results.reduce(e, t);
        }
        forEach(e) {
          this._results.forEach(e);
        }
        some(e) {
          return this._results.some(e);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(e, t) {
          const i = this;
          i.dirty = !1;
          const r = t1(e);
          (this._changesDetected = !(function Yy(n, e, t) {
            if (n.length !== e.length) return !1;
            for (let i = 0; i < n.length; i++) {
              let r = n[i],
                s = e[i];
              if ((t && ((r = t(r)), (s = t(s))), s !== r)) return !1;
            }
            return !0;
          })(i._results, r, t)) &&
            ((i._results = r),
            (i.length = r.length),
            (i.last = r[this.length - 1]),
            (i.first = r[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      Symbol;
      let W1 = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = $E), n;
      })();
      const jE = W1,
        UE = class extends jE {
          constructor(e, t, i) {
            super(),
              (this._declarationLView = e),
              (this._declarationTContainer = t),
              (this.elementRef = i);
          }
          createEmbeddedView(e) {
            const t = this._declarationTContainer.tViews,
              i = Er(
                this._declarationLView,
                t,
                e,
                16,
                null,
                t.declTNode,
                null,
                null,
                null,
                null
              );
            i[17] = this._declarationLView[this._declarationTContainer.index];
            const s = this._declarationLView[19];
            return (
              null !== s && (i[19] = s.createEmbeddedView(t)),
              Sr(t, i, e),
              new Rr(i)
            );
          }
        };
      function $E() {
        return Po(et(), b());
      }
      function Po(n, e) {
        return 4 & n.type ? new UE(e, n, Mi(n, e)) : null;
      }
      let r1 = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = GE), n;
      })();
      function GE() {
        return c9(et(), b());
      }
      const WE = r1,
        o9 = class extends WE {
          constructor(e, t, i) {
            super(),
              (this._lContainer = e),
              (this._hostTNode = t),
              (this._hostLView = i);
          }
          get element() {
            return Mi(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new U2(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const e = so(this._hostTNode, this._hostLView);
            if (Yl(e)) {
              const t = j2(e, this._hostLView),
                i = B2(e);
              return new U2(t[1].data[i + 8], t);
            }
            return new U2(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(e) {
            const t = a9(this._lContainer);
            return (null !== t && t[e]) || null;
          }
          get length() {
            return this._lContainer.length - 10;
          }
          createEmbeddedView(e, t, i) {
            const r = e.createEmbeddedView(t || {});
            return this.insert(r, i), r;
          }
          createComponent(e, t, i, r, s) {
            const o =
              e &&
              !(function hr(n) {
                return "function" == typeof n;
              })(e);
            let a;
            if (o) a = t;
            else {
              const f = t || {};
              (a = f.index),
                (i = f.injector),
                (r = f.projectableNodes),
                (s = f.ngModuleRef);
            }
            const c = o ? e : new L3(ht(e)),
              l = i || this.parentInjector;
            if (!s && null == c.ngModule && l) {
              const f = l.get(dn, null);
              f && (s = f);
            }
            const u = c.create(l, r, void 0, s);
            return this.insert(u.hostView, a), u;
          }
          insert(e, t) {
            const i = e._lView,
              r = i[1];
            if (
              (function _y(n) {
                return v1(n[3]);
              })(i)
            ) {
              const u = this.indexOf(e);
              if (-1 !== u) this.detach(u);
              else {
                const f = i[3],
                  h = new o9(f, f[6], f[3]);
                h.detach(h.indexOf(e));
              }
            }
            const s = this._adjustIndex(t),
              o = this._lContainer;
            !(function bM(n, e, t, i) {
              const r = 10 + i,
                s = t.length;
              i > 0 && (t[r - 1][4] = e),
                i < s - 10
                  ? ((e[4] = t[r]), a5(t, 10 + i, e))
                  : (t.push(e), (e[4] = null)),
                (e[3] = t);
              const o = e[17];
              null !== o &&
                t !== o &&
                (function wM(n, e) {
                  const t = n[9];
                  e[16] !== e[3][3][16] && (n[2] = !0),
                    null === t ? (n[9] = [e]) : t.push(e);
                })(o, e);
              const a = e[19];
              null !== a && a.insertView(n), (e[2] |= 128);
            })(r, i, o, s);
            const a = I6(s, o),
              c = i[K],
              l = go(c, o[7]);
            return (
              null !== l &&
                (function yM(n, e, t, i, r, s) {
                  (i[0] = r), (i[6] = e), Dr(n, i, t, 1, r, s);
                })(r, o[6], c, i, l, a),
              e.attachToViewContainerRef(),
              a5(k3(o), s, e),
              e
            );
          }
          move(e, t) {
            return this.insert(e, t);
          }
          indexOf(e) {
            const t = a9(this._lContainer);
            return null !== t ? t.indexOf(e) : -1;
          }
          remove(e) {
            const t = this._adjustIndex(e, -1),
              i = N6(this._lContainer, t);
            i && (co(k3(this._lContainer), t), Z5(i[1], i));
          }
          detach(e) {
            const t = this._adjustIndex(e, -1),
              i = N6(this._lContainer, t);
            return i && null != co(k3(this._lContainer), t) ? new Rr(i) : null;
          }
          _adjustIndex(e, t = 0) {
            return null == e ? this.length + t : e;
          }
        };
      function a9(n) {
        return n[8];
      }
      function k3(n) {
        return n[8] || (n[8] = []);
      }
      function c9(n, e) {
        let t;
        const i = e[n.index];
        if (v1(i)) t = i;
        else {
          let r;
          if (8 & n.type) r = We(i);
          else {
            const s = e[K];
            r = s.createComment("");
            const o = e1(n, e);
            c2(
              s,
              go(s, o),
              r,
              (function AM(n, e) {
                return Pe(n) ? n.nextSibling(e) : e.nextSibling;
              })(s, o),
              !1
            );
          }
          (e[n.index] = t = O7(i, e, r, n)), wo(e, t);
        }
        return new o9(t, n, e);
      }
      class I3 {
        constructor(e) {
          (this.queryList = e), (this.matches = null);
        }
        clone() {
          return new I3(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class H3 {
        constructor(e = []) {
          this.queries = e;
        }
        createEmbeddedView(e) {
          const t = e.queries;
          if (null !== t) {
            const i =
                null !== e.contentQueries ? e.contentQueries[0] : t.length,
              r = [];
            for (let s = 0; s < i; s++) {
              const o = t.getByIndex(s);
              r.push(this.queries[o.indexInDeclarationView].clone());
            }
            return new H3(r);
          }
          return null;
        }
        insertView(e) {
          this.dirtyQueriesWithMatches(e);
        }
        detachView(e) {
          this.dirtyQueriesWithMatches(e);
        }
        dirtyQueriesWithMatches(e) {
          for (let t = 0; t < this.queries.length; t++)
            null !== d9(e, t).matches && this.queries[t].setDirty();
        }
      }
      class l9 {
        constructor(e, t, i = null) {
          (this.predicate = e), (this.flags = t), (this.read = i);
        }
      }
      class O3 {
        constructor(e = []) {
          this.queries = e;
        }
        elementStart(e, t) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(e, t);
        }
        elementEnd(e) {
          for (let t = 0; t < this.queries.length; t++)
            this.queries[t].elementEnd(e);
        }
        embeddedTView(e) {
          let t = null;
          for (let i = 0; i < this.length; i++) {
            const r = null !== t ? t.length : 0,
              s = this.getByIndex(i).embeddedTView(e, r);
            s &&
              ((s.indexInDeclarationView = i),
              null !== t ? t.push(s) : (t = [s]));
          }
          return null !== t ? new O3(t) : null;
        }
        template(e, t) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(e, t);
        }
        getByIndex(e) {
          return this.queries[e];
        }
        get length() {
          return this.queries.length;
        }
        track(e) {
          this.queries.push(e);
        }
      }
      class P3 {
        constructor(e, t = -1) {
          (this.metadata = e),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = t);
        }
        elementStart(e, t) {
          this.isApplyingToNode(t) && this.matchTNode(e, t);
        }
        elementEnd(e) {
          this._declarationNodeIndex === e.index &&
            (this._appliesToNextNode = !1);
        }
        template(e, t) {
          this.elementStart(e, t);
        }
        embeddedTView(e, t) {
          return this.isApplyingToNode(e)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-e.index, t),
              new P3(this.metadata))
            : null;
        }
        isApplyingToNode(e) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const t = this._declarationNodeIndex;
            let i = e.parent;
            for (; null !== i && 8 & i.type && i.index !== t; ) i = i.parent;
            return t === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(e, t) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let r = 0; r < i.length; r++) {
              const s = i[r];
              this.matchTNodeWithReadOption(e, t, KE(t, s)),
                this.matchTNodeWithReadOption(e, t, ao(t, e, s, !1, !1));
            }
          else
            i === W1
              ? 4 & t.type && this.matchTNodeWithReadOption(e, t, -1)
              : this.matchTNodeWithReadOption(e, t, ao(t, e, i, !1, !1));
        }
        matchTNodeWithReadOption(e, t, i) {
          if (null !== i) {
            const r = this.metadata.read;
            if (null !== r)
              if (r === Le || r === r1 || (r === W1 && 4 & t.type))
                this.addMatch(t.index, -2);
              else {
                const s = ao(t, e, r, !1, !1);
                null !== s && this.addMatch(t.index, s);
              }
            else this.addMatch(t.index, i);
          }
        }
        addMatch(e, t) {
          null === this.matches
            ? (this.matches = [e, t])
            : this.matches.push(e, t);
        }
      }
      function KE(n, e) {
        const t = n.localNames;
        if (null !== t)
          for (let i = 0; i < t.length; i += 2) if (t[i] === e) return t[i + 1];
        return null;
      }
      function QE(n, e, t, i) {
        return -1 === t
          ? (function YE(n, e) {
              return 11 & n.type ? Mi(n, e) : 4 & n.type ? Po(n, e) : null;
            })(e, n)
          : -2 === t
          ? (function XE(n, e, t) {
              return t === Le
                ? Mi(e, n)
                : t === W1
                ? Po(e, n)
                : t === r1
                ? c9(e, n)
                : void 0;
            })(n, e, i)
          : ur(n, n[1], t, e);
      }
      function u9(n, e, t, i) {
        const r = e[19].queries[i];
        if (null === r.matches) {
          const s = n.data,
            o = t.matches,
            a = [];
          for (let c = 0; c < o.length; c += 2) {
            const l = o[c];
            a.push(l < 0 ? null : QE(e, s[l], o[c + 1], t.metadata.read));
          }
          r.matches = a;
        }
        return r.matches;
      }
      function F3(n, e, t, i) {
        const r = n.queries.getByIndex(t),
          s = r.matches;
        if (null !== s) {
          const o = u9(n, e, r, t);
          for (let a = 0; a < s.length; a += 2) {
            const c = s[a];
            if (c > 0) i.push(o[a / 2]);
            else {
              const l = s[a + 1],
                u = e[-c];
              for (let f = 10; f < u.length; f++) {
                const h = u[f];
                h[17] === h[3] && F3(h[1], h, l, i);
              }
              if (null !== u[9]) {
                const f = u[9];
                for (let h = 0; h < f.length; h++) {
                  const d = f[h];
                  F3(d[1], d, l, i);
                }
              }
            }
          }
        }
        return i;
      }
      function je(n) {
        const e = b(),
          t = re(),
          i = Bl();
        t6(i + 1);
        const r = d9(t, i);
        if (n.dirty && Il(e) === (2 == (2 & r.metadata.flags))) {
          if (null === r.matches) n.reset([]);
          else {
            const s = r.crossesNgTemplate ? F3(t, e, i, []) : u9(t, e, r, i);
            n.reset(s, pE), n.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function d2(n, e, t) {
        const i = re();
        i.firstCreatePass &&
          (h9(i, new l9(n, e, t), -1),
          2 == (2 & e) && (i.staticViewQueries = !0)),
          f9(i, b(), e);
      }
      function Dt(n, e, t, i) {
        const r = re();
        if (r.firstCreatePass) {
          const s = et();
          h9(r, new l9(e, t, i), s.index),
            (function eS(n, e) {
              const t = n.contentQueries || (n.contentQueries = []);
              e !== (t.length ? t[t.length - 1] : -1) &&
                t.push(n.queries.length - 1, e);
            })(r, n),
            2 == (2 & t) && (r.staticContentQueries = !0);
        }
        f9(r, b(), t);
      }
      function Ue() {
        return (function JE(n, e) {
          return n[19].queries[e].queryList;
        })(b(), Bl());
      }
      function f9(n, e, t) {
        const i = new Ur(4 == (4 & t));
        z7(n, e, i, i.destroy),
          null === e[19] && (e[19] = new H3()),
          e[19].queries.push(new I3(i));
      }
      function h9(n, e, t) {
        null === n.queries && (n.queries = new O3()),
          n.queries.track(new P3(e, t));
      }
      function d9(n, e) {
        return n.queries.getByIndex(e);
      }
      const s1 = o5("Input", (n) => ({ bindingPropertyName: n })),
        Bo = o5("Output", (n) => ({ bindingPropertyName: n }));
      function jo(...n) {}
      const Uo = new L("Application Initializer");
      let Ei = (() => {
        class n {
          constructor(t) {
            (this.appInits = t),
              (this.resolve = jo),
              (this.reject = jo),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((i, r) => {
                (this.resolve = i), (this.reject = r);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const t = [],
              i = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let r = 0; r < this.appInits.length; r++) {
                const s = this.appInits[r]();
                if (Nr(s)) t.push(s);
                else if (_3(s)) {
                  const o = new Promise((a, c) => {
                    s.subscribe({ complete: a, error: c });
                  });
                  t.push(o);
                }
              }
            Promise.all(t)
              .then(() => {
                i();
              })
              .catch((r) => {
                this.reject(r);
              }),
              0 === t.length && i(),
              (this.initialized = !0);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(Uo, 8));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Gr = new L("AppId"),
        yS = {
          provide: Gr,
          useFactory: function _S() {
            return `${G3()}${G3()}${G3()}`;
          },
          deps: [],
        };
      function G3() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const L9 = new L("Platform Initializer"),
        Wr = new L("Platform ID"),
        T9 = new L("appBootstrapListener");
      let N9 = (() => {
        class n {
          log(t) {
            console.log(t);
          }
          warn(t) {
            console.warn(t);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const pn = new L("LocaleId"),
        V9 = new L("DefaultCurrencyCode");
      class CS {
        constructor(e, t) {
          (this.ngModuleFactory = e), (this.componentFactories = t);
        }
      }
      let $o = (() => {
        class n {
          compileModuleSync(t) {
            return new T3(t);
          }
          compileModuleAsync(t) {
            return Promise.resolve(this.compileModuleSync(t));
          }
          compileModuleAndAllComponentsSync(t) {
            const i = this.compileModuleSync(t),
              s = P1(Qt(t).declarations).reduce((o, a) => {
                const c = ht(a);
                return c && o.push(new L3(c)), o;
              }, []);
            return new CS(i, s);
          }
          compileModuleAndAllComponentsAsync(t) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(t));
          }
          clearCache() {}
          clearCacheFor(t) {}
          getModuleId(t) {}
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const bS = (() => Promise.resolve(0))();
      function W3(n) {
        "undefined" == typeof Zone
          ? bS.then(() => {
              n && n.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", n);
      }
      class fe {
        constructor({
          enableLongStackTrace: e = !1,
          shouldCoalesceEventChangeDetection: t = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new $(!1)),
            (this.onMicrotaskEmpty = new $(!1)),
            (this.onStable = new $(!1)),
            (this.onError = new $(!1)),
            "undefined" == typeof Zone)
          )
            throw new Error("In this configuration Angular requires Zone.js");
          Zone.assertZonePatched();
          const r = this;
          (r._nesting = 0),
            (r._outer = r._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec())),
            e &&
              Zone.longStackTraceZoneSpec &&
              (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)),
            (r.shouldCoalesceEventChangeDetection = !i && t),
            (r.shouldCoalesceRunChangeDetection = i),
            (r.lastRequestAnimationFrameId = -1),
            (r.nativeRequestAnimationFrame = (function wS() {
              let n = _e.requestAnimationFrame,
                e = _e.cancelAnimationFrame;
              if ("undefined" != typeof Zone && n && e) {
                const t = n[Zone.__symbol__("OriginalDelegate")];
                t && (n = t);
                const i = e[Zone.__symbol__("OriginalDelegate")];
                i && (e = i);
              }
              return {
                nativeRequestAnimationFrame: n,
                nativeCancelAnimationFrame: e,
              };
            })().nativeRequestAnimationFrame),
            (function SS(n) {
              const e = () => {
                !(function ES(n) {
                  n.isCheckStableRunning ||
                    -1 !== n.lastRequestAnimationFrameId ||
                    ((n.lastRequestAnimationFrameId =
                      n.nativeRequestAnimationFrame.call(_e, () => {
                        n.fakeTopEventTask ||
                          (n.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (n.lastRequestAnimationFrameId = -1),
                                Z3(n),
                                (n.isCheckStableRunning = !0),
                                q3(n),
                                (n.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          n.fakeTopEventTask.invoke();
                      })),
                    Z3(n));
                })(n);
              };
              n._inner = n._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (t, i, r, s, o, a) => {
                  try {
                    return k9(n), t.invokeTask(r, s, o, a);
                  } finally {
                    ((n.shouldCoalesceEventChangeDetection &&
                      "eventTask" === s.type) ||
                      n.shouldCoalesceRunChangeDetection) &&
                      e(),
                      I9(n);
                  }
                },
                onInvoke: (t, i, r, s, o, a, c) => {
                  try {
                    return k9(n), t.invoke(r, s, o, a, c);
                  } finally {
                    n.shouldCoalesceRunChangeDetection && e(), I9(n);
                  }
                },
                onHasTask: (t, i, r, s) => {
                  t.hasTask(r, s),
                    i === r &&
                      ("microTask" == s.change
                        ? ((n._hasPendingMicrotasks = s.microTask),
                          Z3(n),
                          q3(n))
                        : "macroTask" == s.change &&
                          (n.hasPendingMacrotasks = s.macroTask));
                },
                onHandleError: (t, i, r, s) => (
                  t.handleError(r, s),
                  n.runOutsideAngular(() => n.onError.emit(s)),
                  !1
                ),
              });
            })(r);
        }
        static isInAngularZone() {
          return !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!fe.isInAngularZone())
            throw new Error("Expected to be in Angular Zone, but it is not!");
        }
        static assertNotInAngularZone() {
          if (fe.isInAngularZone())
            throw new Error("Expected to not be in Angular Zone, but it is!");
        }
        run(e, t, i) {
          return this._inner.run(e, t, i);
        }
        runTask(e, t, i, r) {
          const s = this._inner,
            o = s.scheduleEventTask("NgZoneEvent: " + r, e, DS, jo, jo);
          try {
            return s.runTask(o, t, i);
          } finally {
            s.cancelTask(o);
          }
        }
        runGuarded(e, t, i) {
          return this._inner.runGuarded(e, t, i);
        }
        runOutsideAngular(e) {
          return this._outer.run(e);
        }
      }
      const DS = {};
      function q3(n) {
        if (0 == n._nesting && !n.hasPendingMicrotasks && !n.isStable)
          try {
            n._nesting++, n.onMicrotaskEmpty.emit(null);
          } finally {
            if ((n._nesting--, !n.hasPendingMicrotasks))
              try {
                n.runOutsideAngular(() => n.onStable.emit(null));
              } finally {
                n.isStable = !0;
              }
          }
      }
      function Z3(n) {
        n.hasPendingMicrotasks = !!(
          n._hasPendingMicrotasks ||
          ((n.shouldCoalesceEventChangeDetection ||
            n.shouldCoalesceRunChangeDetection) &&
            -1 !== n.lastRequestAnimationFrameId)
        );
      }
      function k9(n) {
        n._nesting++,
          n.isStable && ((n.isStable = !1), n.onUnstable.emit(null));
      }
      function I9(n) {
        n._nesting--, q3(n);
      }
      class AS {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new $()),
            (this.onMicrotaskEmpty = new $()),
            (this.onStable = new $()),
            (this.onError = new $());
        }
        run(e, t, i) {
          return e.apply(t, i);
        }
        runGuarded(e, t, i) {
          return e.apply(t, i);
        }
        runOutsideAngular(e) {
          return e();
        }
        runTask(e, t, i, r) {
          return e.apply(t, i);
        }
      }
      let K3 = (() => {
          class n {
            constructor(t) {
              (this._ngZone = t),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                this._watchAngularEvents(),
                t.run(() => {
                  this.taskTrackingZone =
                    "undefined" == typeof Zone
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      fe.assertNotInAngularZone(),
                        W3(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                W3(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let t = this._callbacks.pop();
                    clearTimeout(t.timeoutId), t.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let t = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (i) =>
                    !i.updateCb ||
                    !i.updateCb(t) ||
                    (clearTimeout(i.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((t) => ({
                    source: t.source,
                    creationLocation: t.creationLocation,
                    data: t.data,
                  }))
                : [];
            }
            addCallback(t, i, r) {
              let s = -1;
              i &&
                i > 0 &&
                (s = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (o) => o.timeoutId !== s
                  )),
                    t(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: t, timeoutId: s, updateCb: r });
            }
            whenStable(t, i, r) {
              if (r && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(t, i, r), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            findProviders(t, i, r) {
              return [];
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(fe));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        H9 = (() => {
          class n {
            constructor() {
              (this._applications = new Map()), Y3.addToWindow(this);
            }
            registerApplication(t, i) {
              this._applications.set(t, i);
            }
            unregisterApplication(t) {
              this._applications.delete(t);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(t) {
              return this._applications.get(t) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(t, i = !0) {
              return Y3.findTestabilityInTree(this, t, i);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      class xS {
        addToWindow(e) {}
        findTestabilityInTree(e, t, i) {
          return null;
        }
      }
      let E1,
        Y3 = new xS();
      const O9 = new L("AllowMultipleToken");
      class P9 {
        constructor(e, t) {
          (this.name = e), (this.token = t);
        }
      }
      function F9(n, e, t = []) {
        const i = `Platform: ${e}`,
          r = new L(i);
        return (s = []) => {
          let o = R9();
          if (!o || o.injector.get(O9, !1))
            if (n) n(t.concat(s).concat({ provide: r, useValue: !0 }));
            else {
              const a = t
                .concat(s)
                .concat(
                  { provide: r, useValue: !0 },
                  { provide: o3, useValue: "platform" }
                );
              !(function NS(n) {
                if (E1 && !E1.destroyed && !E1.injector.get(O9, !1))
                  throw new ie(400, "");
                E1 = n.get(B9);
                const e = n.get(L9, null);
                e && e.forEach((t) => t());
              })(nt.create({ providers: a, name: i }));
            }
          return (function VS(n) {
            const e = R9();
            if (!e) throw new ie(401, "");
            return e;
          })();
        };
      }
      function R9() {
        return E1 && !E1.destroyed ? E1 : null;
      }
      let B9 = (() => {
        class n {
          constructor(t) {
            (this._injector = t),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(t, i) {
            const a = (function kS(n, e) {
                let t;
                return (
                  (t =
                    "noop" === n
                      ? new AS()
                      : ("zone.js" === n ? void 0 : n) ||
                        new fe({
                          enableLongStackTrace: !1,
                          shouldCoalesceEventChangeDetection: !!(null == e
                            ? void 0
                            : e.ngZoneEventCoalescing),
                          shouldCoalesceRunChangeDetection: !!(null == e
                            ? void 0
                            : e.ngZoneRunCoalescing),
                        })),
                  t
                );
              })(i ? i.ngZone : void 0, {
                ngZoneEventCoalescing: (i && i.ngZoneEventCoalescing) || !1,
                ngZoneRunCoalescing: (i && i.ngZoneRunCoalescing) || !1,
              }),
              c = [{ provide: fe, useValue: a }];
            return a.run(() => {
              const l = nt.create({
                  providers: c,
                  parent: this.injector,
                  name: t.moduleType.name,
                }),
                u = t.create(l),
                f = u.injector.get(J2, null);
              if (!f) throw new ie(402, "");
              return (
                a.runOutsideAngular(() => {
                  const h = a.onError.subscribe({
                    next: (d) => {
                      f.handleError(d);
                    },
                  });
                  u.onDestroy(() => {
                    Q3(this._modules, u), h.unsubscribe();
                  });
                }),
                (function IS(n, e, t) {
                  try {
                    const i = t();
                    return Nr(i)
                      ? i.catch((r) => {
                          throw (
                            (e.runOutsideAngular(() => n.handleError(r)), r)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (e.runOutsideAngular(() => n.handleError(i)), i);
                  }
                })(f, a, () => {
                  const h = u.injector.get(Ei);
                  return (
                    h.runInitializers(),
                    h.donePromise.then(
                      () => (
                        (function mD(n) {
                          Ot(n, "Expected localeId to be defined"),
                            "string" == typeof n &&
                              (Mf = n.toLowerCase().replace(/_/g, "-"));
                        })(u.injector.get(pn, To) || To),
                        this._moduleDoBootstrap(u),
                        u
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(t, i = []) {
            const r = j9({}, i);
            return (function LS(n, e, t) {
              const i = new T3(t);
              return Promise.resolve(i);
            })(0, 0, t).then((s) => this.bootstrapModuleFactory(s, r));
          }
          _moduleDoBootstrap(t) {
            const i = t.injector.get(Si);
            if (t._bootstrapComponents.length > 0)
              t._bootstrapComponents.forEach((r) => i.bootstrap(r));
            else {
              if (!t.instance.ngDoBootstrap) throw new ie(403, "");
              t.instance.ngDoBootstrap(i);
            }
            this._modules.push(t);
          }
          onDestroy(t) {
            this._destroyListeners.push(t);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new ie(404, "");
            this._modules.slice().forEach((t) => t.destroy()),
              this._destroyListeners.forEach((t) => t()),
              (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(nt));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function j9(n, e) {
        return Array.isArray(e)
          ? e.reduce(j9, n)
          : Object.assign(Object.assign({}, n), e);
      }
      let Si = (() => {
        class n {
          constructor(t, i, r, s, o) {
            (this._zone = t),
              (this._injector = i),
              (this._exceptionHandler = r),
              (this._componentFactoryResolver = s),
              (this._initStatus = o),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const a = new pe((l) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    l.next(this._stable), l.complete();
                  });
              }),
              c = new pe((l) => {
                let u;
                this._zone.runOutsideAngular(() => {
                  u = this._zone.onStable.subscribe(() => {
                    fe.assertNotInAngularZone(),
                      W3(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), l.next(!0));
                      });
                  });
                });
                const f = this._zone.onUnstable.subscribe(() => {
                  fe.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        l.next(!1);
                      }));
                });
                return () => {
                  u.unsubscribe(), f.unsubscribe();
                };
              });
            this.isStable = V2(
              a,
              c.pipe(
                (function B_(n = {}) {
                  const {
                    connector: e = () => new me(),
                    resetOnError: t = !0,
                    resetOnComplete: i = !0,
                    resetOnRefCountZero: r = !0,
                  } = n;
                  return (s) => {
                    let o = null,
                      a = null,
                      c = null,
                      l = 0,
                      u = !1,
                      f = !1;
                    const h = () => {
                        null == a || a.unsubscribe(), (a = null);
                      },
                      d = () => {
                        h(), (o = c = null), (u = f = !1);
                      },
                      p = () => {
                        const m = o;
                        d(), null == m || m.unsubscribe();
                      };
                    return Oe((m, g) => {
                      l++, !f && !u && h();
                      const y = (c = null != c ? c : e());
                      g.add(() => {
                        l--, 0 === l && !f && !u && (a = N4(p, r));
                      }),
                        y.subscribe(g),
                        o ||
                          ((o = new E4({
                            next: (v) => y.next(v),
                            error: (v) => {
                              (f = !0), h(), (a = N4(d, t, v)), y.error(v);
                            },
                            complete: () => {
                              (u = !0), h(), (a = N4(d, i)), y.complete();
                            },
                          })),
                          st(m).subscribe(o));
                    })(s);
                  };
                })()
              )
            );
          }
          bootstrap(t, i) {
            if (!this._initStatus.done) throw new ie(405, "");
            let r;
            (r =
              t instanceof Wf
                ? t
                : this._componentFactoryResolver.resolveComponentFactory(t)),
              this.componentTypes.push(r.componentType);
            const s = (function TS(n) {
                return n.isBoundToModule;
              })(r)
                ? void 0
                : this._injector.get(dn),
              a = r.create(nt.NULL, [], i || r.selector, s),
              c = a.location.nativeElement,
              l = a.injector.get(K3, null),
              u = l && a.injector.get(H9);
            return (
              l && u && u.registerApplication(c, l),
              a.onDestroy(() => {
                this.detachView(a.hostView),
                  Q3(this.components, a),
                  u && u.unregisterApplication(c);
              }),
              this._loadComponent(a),
              a
            );
          }
          tick() {
            if (this._runningTick) throw new ie(101, "");
            try {
              this._runningTick = !0;
              for (let t of this._views) t.detectChanges();
            } catch (t) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(t)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(t) {
            const i = t;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(t) {
            const i = t;
            Q3(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(t) {
            this.attachView(t.hostView),
              this.tick(),
              this.components.push(t),
              this._injector
                .get(T9, [])
                .concat(this._bootstrapListeners)
                .forEach((r) => r(t));
          }
          ngOnDestroy() {
            this._views.slice().forEach((t) => t.destroy()),
              this._onMicrotaskEmptySubscription.unsubscribe();
          }
          get viewCount() {
            return this._views.length;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(fe), C(nt), C(J2), C(f2), C(Ei));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function Q3(n, e) {
        const t = n.indexOf(e);
        t > -1 && n.splice(t, 1);
      }
      let $9 = !0,
        q1 = (() => {
          class n {}
          return (n.__NG_ELEMENT_ID__ = PS), n;
        })();
      function PS(n) {
        return (function FS(n, e, t) {
          if (Ws(n) && !t) {
            const i = Ft(n.index, e);
            return new Rr(i, i);
          }
          return 47 & n.type ? new Rr(e[16], e) : null;
        })(et(), b(), 16 == (16 & n));
      }
      class Q9 {
        constructor() {}
        supports(e) {
          return xr(e);
        }
        create(e) {
          return new GS(e);
        }
      }
      const $S = (n, e) => e;
      class GS {
        constructor(e) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = e || $S);
        }
        forEachItem(e) {
          let t;
          for (t = this._itHead; null !== t; t = t._next) e(t);
        }
        forEachOperation(e) {
          let t = this._itHead,
            i = this._removalsHead,
            r = 0,
            s = null;
          for (; t || i; ) {
            const o = !i || (t && t.currentIndex < J9(i, r, s)) ? t : i,
              a = J9(o, r, s),
              c = o.currentIndex;
            if (o === i) r--, (i = i._nextRemoved);
            else if (((t = t._next), null == o.previousIndex)) r++;
            else {
              s || (s = []);
              const l = a - r,
                u = c - r;
              if (l != u) {
                for (let h = 0; h < l; h++) {
                  const d = h < s.length ? s[h] : (s[h] = 0),
                    p = d + h;
                  u <= p && p < l && (s[h] = d + 1);
                }
                s[o.previousIndex] = u - l;
              }
            }
            a !== c && e(o, a, c);
          }
        }
        forEachPreviousItem(e) {
          let t;
          for (t = this._previousItHead; null !== t; t = t._nextPrevious) e(t);
        }
        forEachAddedItem(e) {
          let t;
          for (t = this._additionsHead; null !== t; t = t._nextAdded) e(t);
        }
        forEachMovedItem(e) {
          let t;
          for (t = this._movesHead; null !== t; t = t._nextMoved) e(t);
        }
        forEachRemovedItem(e) {
          let t;
          for (t = this._removalsHead; null !== t; t = t._nextRemoved) e(t);
        }
        forEachIdentityChange(e) {
          let t;
          for (
            t = this._identityChangesHead;
            null !== t;
            t = t._nextIdentityChange
          )
            e(t);
        }
        diff(e) {
          if ((null == e && (e = []), !xr(e))) throw new ie(900, "");
          return this.check(e) ? this : null;
        }
        onDestroy() {}
        check(e) {
          this._reset();
          let r,
            s,
            o,
            t = this._itHead,
            i = !1;
          if (Array.isArray(e)) {
            this.length = e.length;
            for (let a = 0; a < this.length; a++)
              (s = e[a]),
                (o = this._trackByFn(a, s)),
                null !== t && Object.is(t.trackById, o)
                  ? (i && (t = this._verifyReinsertion(t, s, o, a)),
                    Object.is(t.item, s) || this._addIdentityChange(t, s))
                  : ((t = this._mismatch(t, s, o, a)), (i = !0)),
                (t = t._next);
          } else
            (r = 0),
              (function nw(n, e) {
                if (Array.isArray(n))
                  for (let t = 0; t < n.length; t++) e(n[t]);
                else {
                  const t = n[ai()]();
                  let i;
                  for (; !(i = t.next()).done; ) e(i.value);
                }
              })(e, (a) => {
                (o = this._trackByFn(r, a)),
                  null !== t && Object.is(t.trackById, o)
                    ? (i && (t = this._verifyReinsertion(t, a, o, r)),
                      Object.is(t.item, a) || this._addIdentityChange(t, a))
                    : ((t = this._mismatch(t, a, o, r)), (i = !0)),
                  (t = t._next),
                  r++;
              }),
              (this.length = r);
          return this._truncate(t), (this.collection = e), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let e;
            for (
              e = this._previousItHead = this._itHead;
              null !== e;
              e = e._next
            )
              e._nextPrevious = e._next;
            for (e = this._additionsHead; null !== e; e = e._nextAdded)
              e.previousIndex = e.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                e = this._movesHead;
              null !== e;
              e = e._nextMoved
            )
              e.previousIndex = e.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(e, t, i, r) {
          let s;
          return (
            null === e ? (s = this._itTail) : ((s = e._prev), this._remove(e)),
            null !==
            (e =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(e.item, t) || this._addIdentityChange(e, t),
                this._reinsertAfter(e, s, r))
              : null !==
                (e =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, r))
              ? (Object.is(e.item, t) || this._addIdentityChange(e, t),
                this._moveAfter(e, s, r))
              : (e = this._addAfter(new WS(t, i), s, r)),
            e
          );
        }
        _verifyReinsertion(e, t, i, r) {
          let s =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== s
              ? (e = this._reinsertAfter(s, e._prev, r))
              : e.currentIndex != r &&
                ((e.currentIndex = r), this._addToMoves(e, r)),
            e
          );
        }
        _truncate(e) {
          for (; null !== e; ) {
            const t = e._next;
            this._addToRemovals(this._unlink(e)), (e = t);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(e, t, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(e);
          const r = e._prevRemoved,
            s = e._nextRemoved;
          return (
            null === r ? (this._removalsHead = s) : (r._nextRemoved = s),
            null === s ? (this._removalsTail = r) : (s._prevRemoved = r),
            this._insertAfter(e, t, i),
            this._addToMoves(e, i),
            e
          );
        }
        _moveAfter(e, t, i) {
          return (
            this._unlink(e),
            this._insertAfter(e, t, i),
            this._addToMoves(e, i),
            e
          );
        }
        _addAfter(e, t, i) {
          return (
            this._insertAfter(e, t, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = e)
                : (this._additionsTail._nextAdded = e)),
            e
          );
        }
        _insertAfter(e, t, i) {
          const r = null === t ? this._itHead : t._next;
          return (
            (e._next = r),
            (e._prev = t),
            null === r ? (this._itTail = e) : (r._prev = e),
            null === t ? (this._itHead = e) : (t._next = e),
            null === this._linkedRecords && (this._linkedRecords = new X9()),
            this._linkedRecords.put(e),
            (e.currentIndex = i),
            e
          );
        }
        _remove(e) {
          return this._addToRemovals(this._unlink(e));
        }
        _unlink(e) {
          null !== this._linkedRecords && this._linkedRecords.remove(e);
          const t = e._prev,
            i = e._next;
          return (
            null === t ? (this._itHead = i) : (t._next = i),
            null === i ? (this._itTail = t) : (i._prev = t),
            e
          );
        }
        _addToMoves(e, t) {
          return (
            e.previousIndex === t ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = e)
                  : (this._movesTail._nextMoved = e)),
            e
          );
        }
        _addToRemovals(e) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new X9()),
            this._unlinkedRecords.put(e),
            (e.currentIndex = null),
            (e._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = e),
                (e._prevRemoved = null))
              : ((e._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = e)),
            e
          );
        }
        _addIdentityChange(e, t) {
          return (
            (e.item = t),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = e)
                : (this._identityChangesTail._nextIdentityChange = e)),
            e
          );
        }
      }
      class WS {
        constructor(e, t) {
          (this.item = e),
            (this.trackById = t),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class qS {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(e) {
          null === this._head
            ? ((this._head = this._tail = e),
              (e._nextDup = null),
              (e._prevDup = null))
            : ((this._tail._nextDup = e),
              (e._prevDup = this._tail),
              (e._nextDup = null),
              (this._tail = e));
        }
        get(e, t) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === t || t <= i.currentIndex) &&
              Object.is(i.trackById, e)
            )
              return i;
          return null;
        }
        remove(e) {
          const t = e._prevDup,
            i = e._nextDup;
          return (
            null === t ? (this._head = i) : (t._nextDup = i),
            null === i ? (this._tail = t) : (i._prevDup = t),
            null === this._head
          );
        }
      }
      class X9 {
        constructor() {
          this.map = new Map();
        }
        put(e) {
          const t = e.trackById;
          let i = this.map.get(t);
          i || ((i = new qS()), this.map.set(t, i)), i.add(e);
        }
        get(e, t) {
          const r = this.map.get(e);
          return r ? r.get(e, t) : null;
        }
        remove(e) {
          const t = e.trackById;
          return this.map.get(t).remove(e) && this.map.delete(t), e;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function J9(n, e, t) {
        const i = n.previousIndex;
        if (null === i) return i;
        let r = 0;
        return t && i < t.length && (r = t[i]), i + e + r;
      }
      class eh {
        constructor() {}
        supports(e) {
          return e instanceof Map || h3(e);
        }
        create() {
          return new ZS();
        }
      }
      class ZS {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(e) {
          let t;
          for (t = this._mapHead; null !== t; t = t._next) e(t);
        }
        forEachPreviousItem(e) {
          let t;
          for (t = this._previousMapHead; null !== t; t = t._nextPrevious) e(t);
        }
        forEachChangedItem(e) {
          let t;
          for (t = this._changesHead; null !== t; t = t._nextChanged) e(t);
        }
        forEachAddedItem(e) {
          let t;
          for (t = this._additionsHead; null !== t; t = t._nextAdded) e(t);
        }
        forEachRemovedItem(e) {
          let t;
          for (t = this._removalsHead; null !== t; t = t._nextRemoved) e(t);
        }
        diff(e) {
          if (e) {
            if (!(e instanceof Map || h3(e))) throw new ie(900, "");
          } else e = new Map();
          return this.check(e) ? this : null;
        }
        onDestroy() {}
        check(e) {
          this._reset();
          let t = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(e, (i, r) => {
              if (t && t.key === r)
                this._maybeAddToChanges(t, i),
                  (this._appendAfter = t),
                  (t = t._next);
              else {
                const s = this._getOrCreateRecordForKey(r, i);
                t = this._insertBeforeOrAppend(t, s);
              }
            }),
            t)
          ) {
            t._prev && (t._prev._next = null), (this._removalsHead = t);
            for (let i = t; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(e, t) {
          if (e) {
            const i = e._prev;
            return (
              (t._next = e),
              (t._prev = i),
              (e._prev = t),
              i && (i._next = t),
              e === this._mapHead && (this._mapHead = t),
              (this._appendAfter = e),
              e
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = t), (t._prev = this._appendAfter))
              : (this._mapHead = t),
            (this._appendAfter = t),
            null
          );
        }
        _getOrCreateRecordForKey(e, t) {
          if (this._records.has(e)) {
            const r = this._records.get(e);
            this._maybeAddToChanges(r, t);
            const s = r._prev,
              o = r._next;
            return (
              s && (s._next = o),
              o && (o._prev = s),
              (r._next = null),
              (r._prev = null),
              r
            );
          }
          const i = new KS(e);
          return (
            this._records.set(e, i),
            (i.currentValue = t),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let e;
            for (
              this._previousMapHead = this._mapHead, e = this._previousMapHead;
              null !== e;
              e = e._next
            )
              e._nextPrevious = e._next;
            for (e = this._changesHead; null !== e; e = e._nextChanged)
              e.previousValue = e.currentValue;
            for (e = this._additionsHead; null != e; e = e._nextAdded)
              e.previousValue = e.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(e, t) {
          Object.is(t, e.currentValue) ||
            ((e.previousValue = e.currentValue),
            (e.currentValue = t),
            this._addToChanges(e));
        }
        _addToAdditions(e) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = e)
            : ((this._additionsTail._nextAdded = e), (this._additionsTail = e));
        }
        _addToChanges(e) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = e)
            : ((this._changesTail._nextChanged = e), (this._changesTail = e));
        }
        _forEach(e, t) {
          e instanceof Map
            ? e.forEach(t)
            : Object.keys(e).forEach((i) => t(e[i], i));
        }
      }
      class KS {
        constructor(e) {
          (this.key = e),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function th() {
        return new qr([new Q9()]);
      }
      let qr = (() => {
        class n {
          constructor(t) {
            this.factories = t;
          }
          static create(t, i) {
            if (null != i) {
              const r = i.factories.slice();
              t = t.concat(r);
            }
            return new n(t);
          }
          static extend(t) {
            return {
              provide: n,
              useFactory: (i) => n.create(t, i || th()),
              deps: [[n, new Y2(), new I1()]],
            };
          }
          find(t) {
            const i = this.factories.find((r) => r.supports(t));
            if (null != i) return i;
            throw new ie(901, "");
          }
        }
        return (n.ɵprov = z({ token: n, providedIn: "root", factory: th })), n;
      })();
      function nh() {
        return new Ai([new eh()]);
      }
      let Ai = (() => {
        class n {
          constructor(t) {
            this.factories = t;
          }
          static create(t, i) {
            if (i) {
              const r = i.factories.slice();
              t = t.concat(r);
            }
            return new n(t);
          }
          static extend(t) {
            return {
              provide: n,
              useFactory: (i) => n.create(t, i || nh()),
              deps: [[n, new Y2(), new I1()]],
            };
          }
          find(t) {
            const i = this.factories.find((s) => s.supports(t));
            if (i) return i;
            throw new ie(901, "");
          }
        }
        return (n.ɵprov = z({ token: n, providedIn: "root", factory: nh })), n;
      })();
      const YS = [new eh()],
        XS = new qr([new Q9()]),
        JS = new Ai(YS),
        eA = F9(null, "core", [
          { provide: Wr, useValue: "unknown" },
          { provide: B9, deps: [nt] },
          { provide: H9, deps: [] },
          { provide: N9, deps: [] },
        ]),
        sA = [
          { provide: Si, useClass: Si, deps: [fe, nt, J2, f2, Ei] },
          {
            provide: ME,
            deps: [fe],
            useFactory: function oA(n) {
              let e = [];
              return (
                n.onStable.subscribe(() => {
                  for (; e.length; ) e.pop()();
                }),
                function (t) {
                  e.push(t);
                }
              );
            },
          },
          { provide: Ei, useClass: Ei, deps: [[new I1(), Uo]] },
          { provide: $o, useClass: $o, deps: [] },
          yS,
          {
            provide: qr,
            useFactory: function tA() {
              return XS;
            },
            deps: [],
          },
          {
            provide: Ai,
            useFactory: function nA() {
              return JS;
            },
            deps: [],
          },
          {
            provide: pn,
            useFactory: function iA(n) {
              return (
                n ||
                (function rA() {
                  return (
                    ("undefined" != typeof $localize && $localize.locale) || To
                  );
                })()
              );
            },
            deps: [[new vr(pn), new I1(), new Y2()]],
          },
          { provide: V9, useValue: "USD" },
        ];
      let aA = (() => {
          class n {
            constructor(t) {}
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(Si));
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({ providers: sA })),
            n
          );
        })(),
        Wo = null;
      function Z1() {
        return Wo;
      }
      const he = new L("DocumentToken");
      let m2 = (() => {
        class n {
          historyGo(t) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵprov = z({
            token: n,
            factory: function () {
              return (function fA() {
                return C(ih);
              })();
            },
            providedIn: "platform",
          })),
          n
        );
      })();
      const hA = new L("Location Initialized");
      let ih = (() => {
        class n extends m2 {
          constructor(t) {
            super(), (this._doc = t), this._init();
          }
          _init() {
            (this.location = window.location), (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return Z1().getBaseHref(this._doc);
          }
          onPopState(t) {
            const i = Z1().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("popstate", t, !1),
              () => i.removeEventListener("popstate", t)
            );
          }
          onHashChange(t) {
            const i = Z1().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("hashchange", t, !1),
              () => i.removeEventListener("hashchange", t)
            );
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname(t) {
            this.location.pathname = t;
          }
          pushState(t, i, r) {
            rh() ? this._history.pushState(t, i, r) : (this.location.hash = r);
          }
          replaceState(t, i, r) {
            rh()
              ? this._history.replaceState(t, i, r)
              : (this.location.hash = r);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(t = 0) {
            this._history.go(t);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(he));
          }),
          (n.ɵprov = z({
            token: n,
            factory: function () {
              return (function dA() {
                return new ih(C(he));
              })();
            },
            providedIn: "platform",
          })),
          n
        );
      })();
      function rh() {
        return !!window.history.pushState;
      }
      function n0(n, e) {
        if (0 == n.length) return e;
        if (0 == e.length) return n;
        let t = 0;
        return (
          n.endsWith("/") && t++,
          e.startsWith("/") && t++,
          2 == t ? n + e.substring(1) : 1 == t ? n + e : n + "/" + e
        );
      }
      function sh(n) {
        const e = n.match(/#|\?|$/),
          t = (e && e.index) || n.length;
        return n.slice(0, t - ("/" === n[t - 1] ? 1 : 0)) + n.slice(t);
      }
      function mn(n) {
        return n && "?" !== n[0] ? "?" + n : n;
      }
      let xi = (() => {
        class n {
          historyGo(t) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵprov = z({
            token: n,
            factory: function () {
              return (function pA(n) {
                const e = C(he).location;
                return new oh(C(m2), (e && e.origin) || "");
              })();
            },
            providedIn: "root",
          })),
          n
        );
      })();
      const r0 = new L("appBaseHref");
      let oh = (() => {
          class n extends xi {
            constructor(t, i) {
              if (
                (super(),
                (this._platformLocation = t),
                (this._removeListenerFns = []),
                null == i && (i = this._platformLocation.getBaseHrefFromDOM()),
                null == i)
              )
                throw new Error(
                  "No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document."
                );
              this._baseHref = i;
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(t) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(t),
                this._platformLocation.onHashChange(t)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(t) {
              return n0(this._baseHref, t);
            }
            path(t = !1) {
              const i =
                  this._platformLocation.pathname +
                  mn(this._platformLocation.search),
                r = this._platformLocation.hash;
              return r && t ? `${i}${r}` : i;
            }
            pushState(t, i, r, s) {
              const o = this.prepareExternalUrl(r + mn(s));
              this._platformLocation.pushState(t, i, o);
            }
            replaceState(t, i, r, s) {
              const o = this.prepareExternalUrl(r + mn(s));
              this._platformLocation.replaceState(t, i, o);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            historyGo(t = 0) {
              var i, r;
              null === (r = (i = this._platformLocation).historyGo) ||
                void 0 === r ||
                r.call(i, t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(m2), C(r0, 8));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        mA = (() => {
          class n extends xi {
            constructor(t, i) {
              super(),
                (this._platformLocation = t),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != i && (this._baseHref = i);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(t) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(t),
                this._platformLocation.onHashChange(t)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(t = !1) {
              let i = this._platformLocation.hash;
              return null == i && (i = "#"), i.length > 0 ? i.substring(1) : i;
            }
            prepareExternalUrl(t) {
              const i = n0(this._baseHref, t);
              return i.length > 0 ? "#" + i : i;
            }
            pushState(t, i, r, s) {
              let o = this.prepareExternalUrl(r + mn(s));
              0 == o.length && (o = this._platformLocation.pathname),
                this._platformLocation.pushState(t, i, o);
            }
            replaceState(t, i, r, s) {
              let o = this.prepareExternalUrl(r + mn(s));
              0 == o.length && (o = this._platformLocation.pathname),
                this._platformLocation.replaceState(t, i, o);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            historyGo(t = 0) {
              var i, r;
              null === (r = (i = this._platformLocation).historyGo) ||
                void 0 === r ||
                r.call(i, t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(m2), C(r0, 8));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        qo = (() => {
          class n {
            constructor(t, i) {
              (this._subject = new $()),
                (this._urlChangeListeners = []),
                (this._platformStrategy = t);
              const r = this._platformStrategy.getBaseHref();
              (this._platformLocation = i),
                (this._baseHref = sh(ah(r))),
                this._platformStrategy.onPopState((s) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: s.state,
                    type: s.type,
                  });
                });
            }
            path(t = !1) {
              return this.normalize(this._platformStrategy.path(t));
            }
            getState() {
              return this._platformLocation.getState();
            }
            isCurrentPathEqualTo(t, i = "") {
              return this.path() == this.normalize(t + mn(i));
            }
            normalize(t) {
              return n.stripTrailingSlash(
                (function vA(n, e) {
                  return n && e.startsWith(n) ? e.substring(n.length) : e;
                })(this._baseHref, ah(t))
              );
            }
            prepareExternalUrl(t) {
              return (
                t && "/" !== t[0] && (t = "/" + t),
                this._platformStrategy.prepareExternalUrl(t)
              );
            }
            go(t, i = "", r = null) {
              this._platformStrategy.pushState(r, "", t, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(t + mn(i)),
                  r
                );
            }
            replaceState(t, i = "", r = null) {
              this._platformStrategy.replaceState(r, "", t, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(t + mn(i)),
                  r
                );
            }
            forward() {
              this._platformStrategy.forward();
            }
            back() {
              this._platformStrategy.back();
            }
            historyGo(t = 0) {
              var i, r;
              null === (r = (i = this._platformStrategy).historyGo) ||
                void 0 === r ||
                r.call(i, t);
            }
            onUrlChange(t) {
              this._urlChangeListeners.push(t),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((i) => {
                    this._notifyUrlChangeListeners(i.url, i.state);
                  }));
            }
            _notifyUrlChangeListeners(t = "", i) {
              this._urlChangeListeners.forEach((r) => r(t, i));
            }
            subscribe(t, i, r) {
              return this._subject.subscribe({
                next: t,
                error: i,
                complete: r,
              });
            }
          }
          return (
            (n.normalizeQueryParams = mn),
            (n.joinWithSlash = n0),
            (n.stripTrailingSlash = sh),
            (n.ɵfac = function (t) {
              return new (t || n)(C(xi), C(m2));
            }),
            (n.ɵprov = z({
              token: n,
              factory: function () {
                return (function gA() {
                  return new qo(C(xi), C(m2));
                })();
              },
              providedIn: "root",
            })),
            n
          );
        })();
      function ah(n) {
        return n.replace(/\/index.html$/, "");
      }
      var kt = (() => (
          ((kt = kt || {})[(kt.Decimal = 0)] = "Decimal"),
          (kt[(kt.Percent = 1)] = "Percent"),
          (kt[(kt.Currency = 2)] = "Currency"),
          (kt[(kt.Scientific = 3)] = "Scientific"),
          kt
        ))(),
        Ze = (() => (
          ((Ze = Ze || {})[(Ze.Zero = 0)] = "Zero"),
          (Ze[(Ze.One = 1)] = "One"),
          (Ze[(Ze.Two = 2)] = "Two"),
          (Ze[(Ze.Few = 3)] = "Few"),
          (Ze[(Ze.Many = 4)] = "Many"),
          (Ze[(Ze.Other = 5)] = "Other"),
          Ze
        ))(),
        I = (() => (
          ((I = I || {})[(I.Decimal = 0)] = "Decimal"),
          (I[(I.Group = 1)] = "Group"),
          (I[(I.List = 2)] = "List"),
          (I[(I.PercentSign = 3)] = "PercentSign"),
          (I[(I.PlusSign = 4)] = "PlusSign"),
          (I[(I.MinusSign = 5)] = "MinusSign"),
          (I[(I.Exponential = 6)] = "Exponential"),
          (I[(I.SuperscriptingExponent = 7)] = "SuperscriptingExponent"),
          (I[(I.PerMille = 8)] = "PerMille"),
          (I[(I.Infinity = 9)] = "Infinity"),
          (I[(I.NaN = 10)] = "NaN"),
          (I[(I.TimeSeparator = 11)] = "TimeSeparator"),
          (I[(I.CurrencyDecimal = 12)] = "CurrencyDecimal"),
          (I[(I.CurrencyGroup = 13)] = "CurrencyGroup"),
          I
        ))();
      function o1(n, e) {
        const t = wt(n),
          i = t[x.NumberSymbols][e];
        if (void 0 === i) {
          if (e === I.CurrencyDecimal) return t[x.NumberSymbols][I.Decimal];
          if (e === I.CurrencyGroup) return t[x.NumberSymbols][I.Group];
        }
        return i;
      }
      const DA = function yf(n) {
          return wt(n)[x.PluralCase];
        },
        UA = /^(\d+)?\.((\d+)(-(\d+))?)?$/;
      function h0(n) {
        const e = parseInt(n);
        if (isNaN(e))
          throw new Error("Invalid integer literal when parsing " + n);
        return e;
      }
      class ia {}
      let JA = (() => {
        class n extends ia {
          constructor(t) {
            super(), (this.locale = t);
          }
          getPluralCategory(t, i) {
            switch (DA(i || this.locale)(t)) {
              case Ze.Zero:
                return "zero";
              case Ze.One:
                return "one";
              case Ze.Two:
                return "two";
              case Ze.Few:
                return "few";
              case Ze.Many:
                return "many";
              default:
                return "other";
            }
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(pn));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function gh(n, e) {
        e = encodeURIComponent(e);
        for (const t of n.split(";")) {
          const i = t.indexOf("="),
            [r, s] = -1 == i ? [t, ""] : [t.slice(0, i), t.slice(i + 1)];
          if (r.trim() === e) return decodeURIComponent(s);
        }
        return null;
      }
      let vh = (() => {
        class n {
          constructor(t, i, r, s) {
            (this._iterableDiffers = t),
              (this._keyValueDiffers = i),
              (this._ngEl = r),
              (this._renderer = s),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._initialClasses = []),
              (this._rawClass = null);
          }
          set klass(t) {
            this._removeClasses(this._initialClasses),
              (this._initialClasses =
                "string" == typeof t ? t.split(/\s+/) : []),
              this._applyClasses(this._initialClasses),
              this._applyClasses(this._rawClass);
          }
          set ngClass(t) {
            this._removeClasses(this._rawClass),
              this._applyClasses(this._initialClasses),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._rawClass = "string" == typeof t ? t.split(/\s+/) : t),
              this._rawClass &&
                (xr(this._rawClass)
                  ? (this._iterableDiffer = this._iterableDiffers
                      .find(this._rawClass)
                      .create())
                  : (this._keyValueDiffer = this._keyValueDiffers
                      .find(this._rawClass)
                      .create()));
          }
          ngDoCheck() {
            if (this._iterableDiffer) {
              const t = this._iterableDiffer.diff(this._rawClass);
              t && this._applyIterableChanges(t);
            } else if (this._keyValueDiffer) {
              const t = this._keyValueDiffer.diff(this._rawClass);
              t && this._applyKeyValueChanges(t);
            }
          }
          _applyKeyValueChanges(t) {
            t.forEachAddedItem((i) => this._toggleClass(i.key, i.currentValue)),
              t.forEachChangedItem((i) =>
                this._toggleClass(i.key, i.currentValue)
              ),
              t.forEachRemovedItem((i) => {
                i.previousValue && this._toggleClass(i.key, !1);
              });
          }
          _applyIterableChanges(t) {
            t.forEachAddedItem((i) => {
              if ("string" != typeof i.item)
                throw new Error(
                  `NgClass can only toggle CSS classes expressed as strings, got ${ge(
                    i.item
                  )}`
                );
              this._toggleClass(i.item, !0);
            }),
              t.forEachRemovedItem((i) => this._toggleClass(i.item, !1));
          }
          _applyClasses(t) {
            t &&
              (Array.isArray(t) || t instanceof Set
                ? t.forEach((i) => this._toggleClass(i, !0))
                : Object.keys(t).forEach((i) => this._toggleClass(i, !!t[i])));
          }
          _removeClasses(t) {
            t &&
              (Array.isArray(t) || t instanceof Set
                ? t.forEach((i) => this._toggleClass(i, !1))
                : Object.keys(t).forEach((i) => this._toggleClass(i, !1)));
          }
          _toggleClass(t, i) {
            (t = t.trim()) &&
              t.split(/\s+/g).forEach((r) => {
                i
                  ? this._renderer.addClass(this._ngEl.nativeElement, r)
                  : this._renderer.removeClass(this._ngEl.nativeElement, r);
              });
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(_(qr), _(Ai), _(Le), _(G1));
          }),
          (n.ɵdir = V({
            type: n,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
          })),
          n
        );
      })();
      class tx {
        constructor(e, t, i, r) {
          (this.$implicit = e),
            (this.ngForOf = t),
            (this.index = i),
            (this.count = r);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let d0 = (() => {
        class n {
          constructor(t, i, r) {
            (this._viewContainer = t),
              (this._template = i),
              (this._differs = r),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf(t) {
            (this._ngForOf = t), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(t) {
            this._trackByFn = t;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(t) {
            t && (this._template = t);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const t = this._ngForOf;
              !this._differ &&
                t &&
                (this._differ = this._differs
                  .find(t)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const t = this._differ.diff(this._ngForOf);
              t && this._applyChanges(t);
            }
          }
          _applyChanges(t) {
            const i = this._viewContainer;
            t.forEachOperation((r, s, o) => {
              if (null == r.previousIndex)
                i.createEmbeddedView(
                  this._template,
                  new tx(r.item, this._ngForOf, -1, -1),
                  null === o ? void 0 : o
                );
              else if (null == o) i.remove(null === s ? void 0 : s);
              else if (null !== s) {
                const a = i.get(s);
                i.move(a, o), _h(a, r);
              }
            });
            for (let r = 0, s = i.length; r < s; r++) {
              const a = i.get(r).context;
              (a.index = r), (a.count = s), (a.ngForOf = this._ngForOf);
            }
            t.forEachIdentityChange((r) => {
              _h(i.get(r.currentIndex), r);
            });
          }
          static ngTemplateContextGuard(t, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(_(r1), _(W1), _(qr));
          }),
          (n.ɵdir = V({
            type: n,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
          })),
          n
        );
      })();
      function _h(n, e) {
        n.context.$implicit = e.item;
      }
      let zi = (() => {
        class n {
          constructor(t, i) {
            (this._viewContainer = t),
              (this._context = new nx()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = i);
          }
          set ngIf(t) {
            (this._context.$implicit = this._context.ngIf = t),
              this._updateView();
          }
          set ngIfThen(t) {
            yh("ngIfThen", t),
              (this._thenTemplateRef = t),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(t) {
            yh("ngIfElse", t),
              (this._elseTemplateRef = t),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(t, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(_(r1), _(W1));
          }),
          (n.ɵdir = V({
            type: n,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
          })),
          n
        );
      })();
      class nx {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function yh(n, e) {
        if (e && !e.createEmbeddedView)
          throw new Error(
            `${n} must be a TemplateRef, but received '${ge(e)}'.`
          );
      }
      class p0 {
        constructor(e, t) {
          (this._viewContainerRef = e),
            (this._templateRef = t),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(e) {
          e && !this._created
            ? this.create()
            : !e && this._created && this.destroy();
        }
      }
      let g2 = (() => {
          class n {
            constructor() {
              (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(t) {
              (this._ngSwitch = t),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(t) {
              this._defaultViews || (this._defaultViews = []),
                this._defaultViews.push(t);
            }
            _matchCase(t) {
              const i = t == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || i),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                i
              );
            }
            _updateDefaultCases(t) {
              if (this._defaultViews && t !== this._defaultUsed) {
                this._defaultUsed = t;
                for (let i = 0; i < this._defaultViews.length; i++)
                  this._defaultViews[i].enforceState(t);
              }
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵdir = V({
              type: n,
              selectors: [["", "ngSwitch", ""]],
              inputs: { ngSwitch: "ngSwitch" },
            })),
            n
          );
        })(),
        Yr = (() => {
          class n {
            constructor(t, i, r) {
              (this.ngSwitch = r), r._addCase(), (this._view = new p0(t, i));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase)
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(r1), _(W1), _(g2, 9));
            }),
            (n.ɵdir = V({
              type: n,
              selectors: [["", "ngSwitchCase", ""]],
              inputs: { ngSwitchCase: "ngSwitchCase" },
            })),
            n
          );
        })(),
        Ch = (() => {
          class n {
            constructor(t, i, r) {
              r._addDefault(new p0(t, i));
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(r1), _(W1), _(g2, 9));
            }),
            (n.ɵdir = V({ type: n, selectors: [["", "ngSwitchDefault", ""]] })),
            n
          );
        })();
      function A1(n, e) {
        return new ie(2100, "");
      }
      const hx =
        /(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])\S*/g;
      let bh = (() => {
          class n {
            transform(t) {
              if (null == t) return null;
              if ("string" != typeof t) throw A1();
              return t.replace(
                hx,
                (i) => i[0].toUpperCase() + i.substr(1).toLowerCase()
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵpipe = _t({ name: "titlecase", type: n, pure: !0 })),
            n
          );
        })(),
        Dh = (() => {
          class n {
            constructor(t) {
              this._locale = t;
            }
            transform(t, i, r) {
              if (
                !(function m0(n) {
                  return !(null == n || "" === n || n != n);
                })(t)
              )
                return null;
              r = r || this._locale;
              try {
                return (function KA(n, e, t) {
                  return (function u0(n, e, t, i, r, s, o = !1) {
                    let a = "",
                      c = !1;
                    if (isFinite(n)) {
                      let l = (function QA(n) {
                        let i,
                          r,
                          s,
                          o,
                          a,
                          e = Math.abs(n) + "",
                          t = 0;
                        for (
                          (r = e.indexOf(".")) > -1 && (e = e.replace(".", "")),
                            (s = e.search(/e/i)) > 0
                              ? (r < 0 && (r = s),
                                (r += +e.slice(s + 1)),
                                (e = e.substring(0, s)))
                              : r < 0 && (r = e.length),
                            s = 0;
                          "0" === e.charAt(s);
                          s++
                        );
                        if (s === (a = e.length)) (i = [0]), (r = 1);
                        else {
                          for (a--; "0" === e.charAt(a); ) a--;
                          for (r -= s, i = [], o = 0; s <= a; s++, o++)
                            i[o] = Number(e.charAt(s));
                        }
                        return (
                          r > 22 &&
                            ((i = i.splice(0, 21)), (t = r - 1), (r = 1)),
                          { digits: i, exponent: t, integerLen: r }
                        );
                      })(n);
                      o &&
                        (l = (function YA(n) {
                          if (0 === n.digits[0]) return n;
                          const e = n.digits.length - n.integerLen;
                          return (
                            n.exponent
                              ? (n.exponent += 2)
                              : (0 === e
                                  ? n.digits.push(0, 0)
                                  : 1 === e && n.digits.push(0),
                                (n.integerLen += 2)),
                            n
                          );
                        })(l));
                      let u = e.minInt,
                        f = e.minFrac,
                        h = e.maxFrac;
                      if (s) {
                        const v = s.match(UA);
                        if (null === v)
                          throw new Error(`${s} is not a valid digit info`);
                        const M = v[1],
                          E = v[3],
                          F = v[5];
                        null != M && (u = h0(M)),
                          null != E && (f = h0(E)),
                          null != F
                            ? (h = h0(F))
                            : null != E && f > h && (h = f);
                      }
                      !(function XA(n, e, t) {
                        if (e > t)
                          throw new Error(
                            `The minimum number of digits after fraction (${e}) is higher than the maximum (${t}).`
                          );
                        let i = n.digits,
                          r = i.length - n.integerLen;
                        const s = Math.min(Math.max(e, r), t);
                        let o = s + n.integerLen,
                          a = i[o];
                        if (o > 0) {
                          i.splice(Math.max(n.integerLen, o));
                          for (let f = o; f < i.length; f++) i[f] = 0;
                        } else {
                          (r = Math.max(0, r)),
                            (n.integerLen = 1),
                            (i.length = Math.max(1, (o = s + 1))),
                            (i[0] = 0);
                          for (let f = 1; f < o; f++) i[f] = 0;
                        }
                        if (a >= 5)
                          if (o - 1 < 0) {
                            for (let f = 0; f > o; f--)
                              i.unshift(0), n.integerLen++;
                            i.unshift(1), n.integerLen++;
                          } else i[o - 1]++;
                        for (; r < Math.max(0, s); r++) i.push(0);
                        let c = 0 !== s;
                        const l = e + n.integerLen,
                          u = i.reduceRight(function (f, h, d, p) {
                            return (
                              (p[d] = (h += f) < 10 ? h : h - 10),
                              c && (0 === p[d] && d >= l ? p.pop() : (c = !1)),
                              h >= 10 ? 1 : 0
                            );
                          }, 0);
                        u && (i.unshift(u), n.integerLen++);
                      })(l, f, h);
                      let d = l.digits,
                        p = l.integerLen;
                      const m = l.exponent;
                      let g = [];
                      for (c = d.every((v) => !v); p < u; p++) d.unshift(0);
                      for (; p < 0; p++) d.unshift(0);
                      p > 0
                        ? (g = d.splice(p, d.length))
                        : ((g = d), (d = [0]));
                      const y = [];
                      for (
                        d.length >= e.lgSize &&
                        y.unshift(d.splice(-e.lgSize, d.length).join(""));
                        d.length > e.gSize;

                      )
                        y.unshift(d.splice(-e.gSize, d.length).join(""));
                      d.length && y.unshift(d.join("")),
                        (a = y.join(o1(t, i))),
                        g.length && (a += o1(t, r) + g.join("")),
                        m && (a += o1(t, I.Exponential) + "+" + m);
                    } else a = o1(t, I.Infinity);
                    return (
                      (a =
                        n < 0 && !c
                          ? e.negPre + a + e.negSuf
                          : e.posPre + a + e.posSuf),
                      a
                    );
                  })(
                    n,
                    (function f0(n, e = "-") {
                      const t = {
                          minInt: 1,
                          minFrac: 0,
                          maxFrac: 0,
                          posPre: "",
                          posSuf: "",
                          negPre: "",
                          negSuf: "",
                          gSize: 0,
                          lgSize: 0,
                        },
                        i = n.split(";"),
                        r = i[0],
                        s = i[1],
                        o =
                          -1 !== r.indexOf(".")
                            ? r.split(".")
                            : [
                                r.substring(0, r.lastIndexOf("0") + 1),
                                r.substring(r.lastIndexOf("0") + 1),
                              ],
                        a = o[0],
                        c = o[1] || "";
                      t.posPre = a.substr(0, a.indexOf("#"));
                      for (let u = 0; u < c.length; u++) {
                        const f = c.charAt(u);
                        "0" === f
                          ? (t.minFrac = t.maxFrac = u + 1)
                          : "#" === f
                          ? (t.maxFrac = u + 1)
                          : (t.posSuf += f);
                      }
                      const l = a.split(",");
                      if (
                        ((t.gSize = l[1] ? l[1].length : 0),
                        (t.lgSize = l[2] || l[1] ? (l[2] || l[1]).length : 0),
                        s)
                      ) {
                        const u = r.length - t.posPre.length - t.posSuf.length,
                          f = s.indexOf("#");
                        (t.negPre = s.substr(0, f).replace(/'/g, "")),
                          (t.negSuf = s.substr(f + u).replace(/'/g, ""));
                      } else (t.negPre = e + t.posPre), (t.negSuf = t.posSuf);
                      return t;
                    })(
                      (function s0(n, e) {
                        return wt(n)[x.NumberFormats][e];
                      })(e, kt.Decimal),
                      o1(e, I.MinusSign)
                    ),
                    e,
                    I.Group,
                    I.Decimal,
                    t
                  );
                })(
                  (function g0(n) {
                    if (
                      "string" == typeof n &&
                      !isNaN(Number(n) - parseFloat(n))
                    )
                      return Number(n);
                    if ("number" != typeof n)
                      throw new Error(`${n} is not a number`);
                    return n;
                  })(t),
                  r,
                  i
                );
              } catch (s) {
                throw A1();
              }
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(pn, 16));
            }),
            (n.ɵpipe = _t({ name: "number", type: n, pure: !0 })),
            n
          );
        })();
      let Li = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = Me({ type: n })),
          (n.ɵinj = ve({ providers: [{ provide: ia, useClass: JA }] })),
          n
        );
      })();
      const Eh = "browser";
      let zx = (() => {
        class n {}
        return (
          (n.ɵprov = z({
            token: n,
            providedIn: "root",
            factory: () => new Lx(C(he), window),
          })),
          n
        );
      })();
      class Lx {
        constructor(e, t) {
          (this.document = e), (this.window = t), (this.offset = () => [0, 0]);
        }
        setOffset(e) {
          this.offset = Array.isArray(e) ? () => e : e;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(e) {
          this.supportsScrolling() && this.window.scrollTo(e[0], e[1]);
        }
        scrollToAnchor(e) {
          if (!this.supportsScrolling()) return;
          const t = (function Tx(n, e) {
            const t = n.getElementById(e) || n.getElementsByName(e)[0];
            if (t) return t;
            if (
              "function" == typeof n.createTreeWalker &&
              n.body &&
              (n.body.createShadowRoot || n.body.attachShadow)
            ) {
              const i = n.createTreeWalker(n.body, NodeFilter.SHOW_ELEMENT);
              let r = i.currentNode;
              for (; r; ) {
                const s = r.shadowRoot;
                if (s) {
                  const o =
                    s.getElementById(e) || s.querySelector(`[name="${e}"]`);
                  if (o) return o;
                }
                r = i.nextNode();
              }
            }
            return null;
          })(this.document, e);
          t && (this.scrollToElement(t), this.attemptFocus(t));
        }
        setHistoryScrollRestoration(e) {
          if (this.supportScrollRestoration()) {
            const t = this.window.history;
            t && t.scrollRestoration && (t.scrollRestoration = e);
          }
        }
        scrollToElement(e) {
          const t = e.getBoundingClientRect(),
            i = t.left + this.window.pageXOffset,
            r = t.top + this.window.pageYOffset,
            s = this.offset();
          this.window.scrollTo(i - s[0], r - s[1]);
        }
        attemptFocus(e) {
          return e.focus(), this.document.activeElement === e;
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const e =
              Sh(this.window.history) ||
              Sh(Object.getPrototypeOf(this.window.history));
            return !(!e || (!e.writable && !e.set));
          } catch (e) {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch (e) {
            return !1;
          }
        }
      }
      function Sh(n) {
        return Object.getOwnPropertyDescriptor(n, "scrollRestoration");
      }
      class Ah {}
      class v0 extends class Nx extends class uA {} {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      } {
        static makeCurrent() {
          !(function lA(n) {
            Wo || (Wo = n);
          })(new v0());
        }
        onAndCancel(e, t, i) {
          return (
            e.addEventListener(t, i, !1),
            () => {
              e.removeEventListener(t, i, !1);
            }
          );
        }
        dispatchEvent(e, t) {
          e.dispatchEvent(t);
        }
        remove(e) {
          e.parentNode && e.parentNode.removeChild(e);
        }
        createElement(e, t) {
          return (t = t || this.getDefaultDocument()).createElement(e);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(e) {
          return e.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(e) {
          return e instanceof DocumentFragment;
        }
        getGlobalEventTarget(e, t) {
          return "window" === t
            ? window
            : "document" === t
            ? e
            : "body" === t
            ? e.body
            : null;
        }
        getBaseHref(e) {
          const t = (function Vx() {
            return (
              (Qr = Qr || document.querySelector("base")),
              Qr ? Qr.getAttribute("href") : null
            );
          })();
          return null == t
            ? null
            : (function kx(n) {
                (ra = ra || document.createElement("a")),
                  ra.setAttribute("href", n);
                const e = ra.pathname;
                return "/" === e.charAt(0) ? e : `/${e}`;
              })(t);
        }
        resetBaseElement() {
          Qr = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(e) {
          return gh(document.cookie, e);
        }
      }
      let ra,
        Qr = null;
      const xh = new L("TRANSITION_ID"),
        Hx = [
          {
            provide: Uo,
            useFactory: function Ix(n, e, t) {
              return () => {
                t.get(Ei).donePromise.then(() => {
                  const i = Z1(),
                    r = e.querySelectorAll(`style[ng-transition="${n}"]`);
                  for (let s = 0; s < r.length; s++) i.remove(r[s]);
                });
              };
            },
            deps: [xh, he, nt],
            multi: !0,
          },
        ];
      class _0 {
        static init() {
          !(function zS(n) {
            Y3 = n;
          })(new _0());
        }
        addToWindow(e) {
          (_e.getAngularTestability = (i, r = !0) => {
            const s = e.findTestabilityInTree(i, r);
            if (null == s)
              throw new Error("Could not find testability for element.");
            return s;
          }),
            (_e.getAllAngularTestabilities = () => e.getAllTestabilities()),
            (_e.getAllAngularRootElements = () => e.getAllRootElements()),
            _e.frameworkStabilizers || (_e.frameworkStabilizers = []),
            _e.frameworkStabilizers.push((i) => {
              const r = _e.getAllAngularTestabilities();
              let s = r.length,
                o = !1;
              const a = function (c) {
                (o = o || c), s--, 0 == s && i(o);
              };
              r.forEach(function (c) {
                c.whenStable(a);
              });
            });
        }
        findTestabilityInTree(e, t, i) {
          if (null == t) return null;
          const r = e.getTestability(t);
          return null != r
            ? r
            : i
            ? Z1().isShadowRoot(t)
              ? this.findTestabilityInTree(e, t.host, !0)
              : this.findTestabilityInTree(e, t.parentElement, !0)
            : null;
        }
      }
      let Ox = (() => {
        class n {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const sa = new L("EventManagerPlugins");
      let oa = (() => {
        class n {
          constructor(t, i) {
            (this._zone = i),
              (this._eventNameToPlugin = new Map()),
              t.forEach((r) => (r.manager = this)),
              (this._plugins = t.slice().reverse());
          }
          addEventListener(t, i, r) {
            return this._findPluginFor(i).addEventListener(t, i, r);
          }
          addGlobalEventListener(t, i, r) {
            return this._findPluginFor(i).addGlobalEventListener(t, i, r);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(t) {
            const i = this._eventNameToPlugin.get(t);
            if (i) return i;
            const r = this._plugins;
            for (let s = 0; s < r.length; s++) {
              const o = r[s];
              if (o.supports(t)) return this._eventNameToPlugin.set(t, o), o;
            }
            throw new Error(`No event manager plugin found for event ${t}`);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(sa), C(fe));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class zh {
        constructor(e) {
          this._doc = e;
        }
        addGlobalEventListener(e, t, i) {
          const r = Z1().getGlobalEventTarget(this._doc, e);
          if (!r)
            throw new Error(`Unsupported event target ${r} for event ${t}`);
          return this.addEventListener(r, t, i);
        }
      }
      let Lh = (() => {
          class n {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(t) {
              const i = new Set();
              t.forEach((r) => {
                this._stylesSet.has(r) || (this._stylesSet.add(r), i.add(r));
              }),
                this.onStylesAdded(i);
            }
            onStylesAdded(t) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Xr = (() => {
          class n extends Lh {
            constructor(t) {
              super(),
                (this._doc = t),
                (this._hostNodes = new Map()),
                this._hostNodes.set(t.head, []);
            }
            _addStylesToHost(t, i, r) {
              t.forEach((s) => {
                const o = this._doc.createElement("style");
                (o.textContent = s), r.push(i.appendChild(o));
              });
            }
            addHost(t) {
              const i = [];
              this._addStylesToHost(this._stylesSet, t, i),
                this._hostNodes.set(t, i);
            }
            removeHost(t) {
              const i = this._hostNodes.get(t);
              i && i.forEach(Th), this._hostNodes.delete(t);
            }
            onStylesAdded(t) {
              this._hostNodes.forEach((i, r) => {
                this._addStylesToHost(t, r, i);
              });
            }
            ngOnDestroy() {
              this._hostNodes.forEach((t) => t.forEach(Th));
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(he));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      function Th(n) {
        Z1().remove(n);
      }
      const y0 = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
        },
        C0 = /%COMP%/g;
      function aa(n, e, t) {
        for (let i = 0; i < e.length; i++) {
          let r = e[i];
          Array.isArray(r) ? aa(n, r, t) : ((r = r.replace(C0, n)), t.push(r));
        }
        return t;
      }
      function kh(n) {
        return (e) => {
          if ("__ngUnwrap__" === e) return n;
          !1 === n(e) && (e.preventDefault(), (e.returnValue = !1));
        };
      }
      let ca = (() => {
        class n {
          constructor(t, i, r) {
            (this.eventManager = t),
              (this.sharedStylesHost = i),
              (this.appId = r),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new M0(t));
          }
          createRenderer(t, i) {
            if (!t || !i) return this.defaultRenderer;
            switch (i.encapsulation) {
              case m1.Emulated: {
                let r = this.rendererByCompId.get(i.id);
                return (
                  r ||
                    ((r = new Ux(
                      this.eventManager,
                      this.sharedStylesHost,
                      i,
                      this.appId
                    )),
                    this.rendererByCompId.set(i.id, r)),
                  r.applyToHost(t),
                  r
                );
              }
              case 1:
              case m1.ShadowDom:
                return new $x(this.eventManager, this.sharedStylesHost, t, i);
              default:
                if (!this.rendererByCompId.has(i.id)) {
                  const r = aa(i.id, i.styles, []);
                  this.sharedStylesHost.addStyles(r),
                    this.rendererByCompId.set(i.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(oa), C(Xr), C(Gr));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class M0 {
        constructor(e) {
          (this.eventManager = e),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(e, t) {
          return t
            ? document.createElementNS(y0[t] || t, e)
            : document.createElement(e);
        }
        createComment(e) {
          return document.createComment(e);
        }
        createText(e) {
          return document.createTextNode(e);
        }
        appendChild(e, t) {
          e.appendChild(t);
        }
        insertBefore(e, t, i) {
          e && e.insertBefore(t, i);
        }
        removeChild(e, t) {
          e && e.removeChild(t);
        }
        selectRootElement(e, t) {
          let i = "string" == typeof e ? document.querySelector(e) : e;
          if (!i)
            throw new Error(`The selector "${e}" did not match any elements`);
          return t || (i.textContent = ""), i;
        }
        parentNode(e) {
          return e.parentNode;
        }
        nextSibling(e) {
          return e.nextSibling;
        }
        setAttribute(e, t, i, r) {
          if (r) {
            t = r + ":" + t;
            const s = y0[r];
            s ? e.setAttributeNS(s, t, i) : e.setAttribute(t, i);
          } else e.setAttribute(t, i);
        }
        removeAttribute(e, t, i) {
          if (i) {
            const r = y0[i];
            r ? e.removeAttributeNS(r, t) : e.removeAttribute(`${i}:${t}`);
          } else e.removeAttribute(t);
        }
        addClass(e, t) {
          e.classList.add(t);
        }
        removeClass(e, t) {
          e.classList.remove(t);
        }
        setStyle(e, t, i, r) {
          r & (jt.DashCase | jt.Important)
            ? e.style.setProperty(t, i, r & jt.Important ? "important" : "")
            : (e.style[t] = i);
        }
        removeStyle(e, t, i) {
          i & jt.DashCase ? e.style.removeProperty(t) : (e.style[t] = "");
        }
        setProperty(e, t, i) {
          e[t] = i;
        }
        setValue(e, t) {
          e.nodeValue = t;
        }
        listen(e, t, i) {
          return "string" == typeof e
            ? this.eventManager.addGlobalEventListener(e, t, kh(i))
            : this.eventManager.addEventListener(e, t, kh(i));
        }
      }
      class Ux extends M0 {
        constructor(e, t, i, r) {
          super(e), (this.component = i);
          const s = aa(r + "-" + i.id, i.styles, []);
          t.addStyles(s),
            (this.contentAttr = (function Rx(n) {
              return "_ngcontent-%COMP%".replace(C0, n);
            })(r + "-" + i.id)),
            (this.hostAttr = (function Bx(n) {
              return "_nghost-%COMP%".replace(C0, n);
            })(r + "-" + i.id));
        }
        applyToHost(e) {
          super.setAttribute(e, this.hostAttr, "");
        }
        createElement(e, t) {
          const i = super.createElement(e, t);
          return super.setAttribute(i, this.contentAttr, ""), i;
        }
      }
      class $x extends M0 {
        constructor(e, t, i, r) {
          super(e),
            (this.sharedStylesHost = t),
            (this.hostEl = i),
            (this.shadowRoot = i.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const s = aa(r.id, r.styles, []);
          for (let o = 0; o < s.length; o++) {
            const a = document.createElement("style");
            (a.textContent = s[o]), this.shadowRoot.appendChild(a);
          }
        }
        nodeOrShadowRoot(e) {
          return e === this.hostEl ? this.shadowRoot : e;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(e, t) {
          return super.appendChild(this.nodeOrShadowRoot(e), t);
        }
        insertBefore(e, t, i) {
          return super.insertBefore(this.nodeOrShadowRoot(e), t, i);
        }
        removeChild(e, t) {
          return super.removeChild(this.nodeOrShadowRoot(e), t);
        }
        parentNode(e) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(e))
          );
        }
      }
      let Gx = (() => {
        class n extends zh {
          constructor(t) {
            super(t);
          }
          supports(t) {
            return !0;
          }
          addEventListener(t, i, r) {
            return (
              t.addEventListener(i, r, !1),
              () => this.removeEventListener(t, i, r)
            );
          }
          removeEventListener(t, i, r) {
            return t.removeEventListener(i, r);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(he));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Hh = ["alt", "control", "meta", "shift"],
        qx = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        Oh = {
          A: "1",
          B: "2",
          C: "3",
          D: "4",
          E: "5",
          F: "6",
          G: "7",
          H: "8",
          I: "9",
          J: "*",
          K: "+",
          M: "-",
          N: ".",
          O: "/",
          "`": "0",
          "\x90": "NumLock",
        },
        Zx = {
          alt: (n) => n.altKey,
          control: (n) => n.ctrlKey,
          meta: (n) => n.metaKey,
          shift: (n) => n.shiftKey,
        };
      let Kx = (() => {
        class n extends zh {
          constructor(t) {
            super(t);
          }
          supports(t) {
            return null != n.parseEventName(t);
          }
          addEventListener(t, i, r) {
            const s = n.parseEventName(i),
              o = n.eventCallback(s.fullKey, r, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => Z1().onAndCancel(t, s.domEventName, o));
          }
          static parseEventName(t) {
            const i = t.toLowerCase().split("."),
              r = i.shift();
            if (0 === i.length || ("keydown" !== r && "keyup" !== r))
              return null;
            const s = n._normalizeKey(i.pop());
            let o = "";
            if (
              (Hh.forEach((c) => {
                const l = i.indexOf(c);
                l > -1 && (i.splice(l, 1), (o += c + "."));
              }),
              (o += s),
              0 != i.length || 0 === s.length)
            )
              return null;
            const a = {};
            return (a.domEventName = r), (a.fullKey = o), a;
          }
          static getEventFullKey(t) {
            let i = "",
              r = (function Yx(n) {
                let e = n.key;
                if (null == e) {
                  if (((e = n.keyIdentifier), null == e)) return "Unidentified";
                  e.startsWith("U+") &&
                    ((e = String.fromCharCode(parseInt(e.substring(2), 16))),
                    3 === n.location && Oh.hasOwnProperty(e) && (e = Oh[e]));
                }
                return qx[e] || e;
              })(t);
            return (
              (r = r.toLowerCase()),
              " " === r ? (r = "space") : "." === r && (r = "dot"),
              Hh.forEach((s) => {
                s != r && Zx[s](t) && (i += s + ".");
              }),
              (i += r),
              i
            );
          }
          static eventCallback(t, i, r) {
            return (s) => {
              n.getEventFullKey(s) === t && r.runGuarded(() => i(s));
            };
          }
          static _normalizeKey(t) {
            return "esc" === t ? "escape" : t;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(he));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const ez = F9(eA, "browser", [
          { provide: Wr, useValue: Eh },
          {
            provide: L9,
            useValue: function Qx() {
              v0.makeCurrent(), _0.init();
            },
            multi: !0,
          },
          {
            provide: he,
            useFactory: function Jx() {
              return (
                (function py(n) {
                  W4 = n;
                })(document),
                document
              );
            },
            deps: [],
          },
        ]),
        tz = [
          { provide: o3, useValue: "root" },
          {
            provide: J2,
            useFactory: function Xx() {
              return new J2();
            },
            deps: [],
          },
          { provide: sa, useClass: Gx, multi: !0, deps: [he, fe, Wr] },
          { provide: sa, useClass: Kx, multi: !0, deps: [he] },
          { provide: ca, useClass: ca, deps: [oa, Xr, Gr] },
          { provide: Fr, useExisting: ca },
          { provide: Lh, useExisting: Xr },
          { provide: Xr, useClass: Xr, deps: [he] },
          { provide: K3, useClass: K3, deps: [fe] },
          { provide: oa, useClass: oa, deps: [sa, fe] },
          { provide: Ah, useClass: Ox, deps: [] },
        ];
      let Ph = (() => {
        class n {
          constructor(t) {
            if (t)
              throw new Error(
                "BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead."
              );
          }
          static withServerTransition(t) {
            return {
              ngModule: n,
              providers: [
                { provide: Gr, useValue: t.appId },
                { provide: xh, useExisting: Gr },
                Hx,
              ],
            };
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(n, 12));
          }),
          (n.ɵmod = Me({ type: n })),
          (n.ɵinj = ve({ providers: tz, imports: [Li, aA] })),
          n
        );
      })();
      "undefined" != typeof window && window;
      let Bh = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = z({
              token: n,
              factory: function (t) {
                let i = null;
                return (i = t ? new (t || n)() : C(jh)), i;
              },
              providedIn: "root",
            })),
            n
          );
        })(),
        jh = (() => {
          class n extends Bh {
            constructor(t) {
              super(), (this._doc = t);
            }
            sanitize(t, i) {
              if (null == i) return null;
              switch (t) {
                case Ee.NONE:
                  return i;
                case Ee.HTML:
                  return H1(i, "HTML")
                    ? Bt(i)
                    : T5(this._doc, String(i)).toString();
                case Ee.STYLE:
                  return H1(i, "Style") ? Bt(i) : i;
                case Ee.SCRIPT:
                  if (H1(i, "Script")) return Bt(i);
                  throw new Error("unsafe value used in a script context");
                case Ee.URL:
                  return w5(i), H1(i, "URL") ? Bt(i) : yr(String(i));
                case Ee.RESOURCE_URL:
                  if (H1(i, "ResourceURL")) return Bt(i);
                  throw new Error(
                    "unsafe value used in a resource URL context (see https://g.co/ng/security#xss)"
                  );
                default:
                  throw new Error(
                    `Unexpected SecurityContext ${t} (see https://g.co/ng/security#xss)`
                  );
              }
            }
            bypassSecurityTrustHtml(t) {
              return (function AC(n) {
                return new bC(n);
              })(t);
            }
            bypassSecurityTrustStyle(t) {
              return (function xC(n) {
                return new wC(n);
              })(t);
            }
            bypassSecurityTrustScript(t) {
              return (function zC(n) {
                return new DC(n);
              })(t);
            }
            bypassSecurityTrustUrl(t) {
              return (function LC(n) {
                return new EC(n);
              })(t);
            }
            bypassSecurityTrustResourceUrl(t) {
              return (function TC(n) {
                return new SC(n);
              })(t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(he));
            }),
            (n.ɵprov = z({
              token: n,
              factory: function (t) {
                let i = null;
                return (
                  (i = t
                    ? new t()
                    : (function fz(n) {
                        return new jh(n.get(he));
                      })(C(nt))),
                  i
                );
              },
              providedIn: "root",
            })),
            n
          );
        })();
      function G(...n) {
        return st(n, tr(n));
      }
      class c1 extends me {
        constructor(e) {
          super(), (this._value = e);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(e) {
          const t = super._subscribe(e);
          return !t.closed && e.next(this._value), t;
        }
        getValue() {
          const { hasError: e, thrownError: t, _value: i } = this;
          if (e) throw t;
          return this._throwIfClosed(), i;
        }
        next(e) {
          super.next((this._value = e));
        }
      }
      const { isArray: hz } = Array,
        { getPrototypeOf: dz, prototype: pz, keys: mz } = Object;
      function Uh(n) {
        if (1 === n.length) {
          const e = n[0];
          if (hz(e)) return { args: e, keys: null };
          if (
            (function gz(n) {
              return n && "object" == typeof n && dz(n) === pz;
            })(e)
          ) {
            const t = mz(e);
            return { args: t.map((i) => e[i]), keys: t };
          }
        }
        return { args: n, keys: null };
      }
      const { isArray: vz } = Array;
      function w0(n) {
        return ae((e) =>
          (function _z(n, e) {
            return vz(e) ? n(...e) : n(e);
          })(n, e)
        );
      }
      function $h(n, e) {
        return n.reduce((t, i, r) => ((t[i] = e[r]), t), {});
      }
      function Gh(n, e, t) {
        n ? rn(t, n, e) : e();
      }
      const la = Xi(
        (n) =>
          function () {
            n(this),
              (this.name = "EmptyError"),
              (this.message = "no elements in sequence");
          }
      );
      function D0(...n) {
        return (function Mz() {
          return er(1);
        })()(st(n, tr(n)));
      }
      function E0(n) {
        return new pe((e) => {
          It(n()).subscribe(e);
        });
      }
      function Wh() {
        return Oe((n, e) => {
          let t = null;
          n._refCount++;
          const i = new Te(e, void 0, void 0, void 0, () => {
            if (!n || n._refCount <= 0 || 0 < --n._refCount)
              return void (t = null);
            const r = n._connection,
              s = t;
            (t = null),
              r && (!s || r === s) && r.unsubscribe(),
              e.unsubscribe();
          });
          n.subscribe(i), i.closed || (t = n.connect());
        });
      }
      class bz extends pe {
        constructor(e, t) {
          super(),
            (this.source = e),
            (this.subjectFactory = t),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            el(e) && (this.lift = e.lift);
        }
        _subscribe(e) {
          return this.getSubject().subscribe(e);
        }
        getSubject() {
          const e = this._subject;
          return (
            (!e || e.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: e } = this;
          (this._subject = this._connection = null),
            null == e || e.unsubscribe();
        }
        connect() {
          let e = this._connection;
          if (!e) {
            e = this._connection = new He();
            const t = this.getSubject();
            e.add(
              this.source.subscribe(
                new Te(
                  t,
                  void 0,
                  () => {
                    this._teardown(), t.complete();
                  },
                  (i) => {
                    this._teardown(), t.error(i);
                  },
                  () => this._teardown()
                )
              )
            ),
              e.closed && ((this._connection = null), (e = He.EMPTY));
          }
          return e;
        }
        refCount() {
          return Wh()(this);
        }
      }
      function vn(n, e) {
        return Oe((t, i) => {
          let r = null,
            s = 0,
            o = !1;
          const a = () => o && !r && i.complete();
          t.subscribe(
            new Te(
              i,
              (c) => {
                null == r || r.unsubscribe();
                let l = 0;
                const u = s++;
                It(n(c, u)).subscribe(
                  (r = new Te(
                    i,
                    (f) => i.next(e ? e(c, f, u, l++) : f),
                    () => {
                      (r = null), a();
                    }
                  ))
                );
              },
              () => {
                (o = !0), a();
              }
            )
          );
        });
      }
      function Ti(...n) {
        const e = tr(n);
        return Oe((t, i) => {
          (e ? D0(n, t, e) : D0(n, t)).subscribe(i);
        });
      }
      function wz(n, e, t, i, r) {
        return (s, o) => {
          let a = t,
            c = e,
            l = 0;
          s.subscribe(
            new Te(
              o,
              (u) => {
                const f = l++;
                (c = a ? n(c, u, f) : ((a = !0), u)), i && o.next(c);
              },
              r &&
                (() => {
                  a && o.next(c), o.complete();
                })
            )
          );
        };
      }
      function qh(n, e) {
        return Oe(wz(n, e, arguments.length >= 2, !0));
      }
      function x1(n, e) {
        return Oe((t, i) => {
          let r = 0;
          t.subscribe(new Te(i, (s) => n.call(e, s, r++) && i.next(s)));
        });
      }
      function K1(n) {
        return Oe((e, t) => {
          let s,
            i = null,
            r = !1;
          (i = e.subscribe(
            new Te(t, void 0, void 0, (o) => {
              (s = It(n(o, K1(n)(e)))),
                i ? (i.unsubscribe(), (i = null), s.subscribe(t)) : (r = !0);
            })
          )),
            r && (i.unsubscribe(), (i = null), s.subscribe(t));
        });
      }
      function Ni(n, e) {
        return oe(e) ? Xe(n, e, 1) : Xe(n, 1);
      }
      function S0(n) {
        return n <= 0
          ? () => sn
          : Oe((e, t) => {
              let i = [];
              e.subscribe(
                new Te(
                  t,
                  (r) => {
                    i.push(r), n < i.length && i.shift();
                  },
                  () => {
                    for (const r of i) t.next(r);
                    t.complete();
                  },
                  void 0,
                  () => {
                    i = null;
                  }
                )
              );
            });
      }
      function Zh(n = Dz) {
        return Oe((e, t) => {
          let i = !1;
          e.subscribe(
            new Te(
              t,
              (r) => {
                (i = !0), t.next(r);
              },
              () => (i ? t.complete() : t.error(n()))
            )
          );
        });
      }
      function Dz() {
        return new la();
      }
      function Kh(n) {
        return Oe((e, t) => {
          let i = !1;
          e.subscribe(
            new Te(
              t,
              (r) => {
                (i = !0), t.next(r);
              },
              () => {
                i || t.next(n), t.complete();
              }
            )
          );
        });
      }
      function Vi(n, e) {
        const t = arguments.length >= 2;
        return (i) =>
          i.pipe(
            n ? x1((r, s) => n(r, s, i)) : zn,
            on(1),
            t ? Kh(e) : Zh(() => new la())
          );
      }
      function St(n, e, t) {
        const i = oe(n) || e || t ? { next: n, error: e, complete: t } : n;
        return i
          ? Oe((r, s) => {
              var o;
              null === (o = i.subscribe) || void 0 === o || o.call(i);
              let a = !0;
              r.subscribe(
                new Te(
                  s,
                  (c) => {
                    var l;
                    null === (l = i.next) || void 0 === l || l.call(i, c),
                      s.next(c);
                  },
                  () => {
                    var c;
                    (a = !1),
                      null === (c = i.complete) || void 0 === c || c.call(i),
                      s.complete();
                  },
                  (c) => {
                    var l;
                    (a = !1),
                      null === (l = i.error) || void 0 === l || l.call(i, c),
                      s.error(c);
                  },
                  () => {
                    var c, l;
                    a &&
                      (null === (c = i.unsubscribe) ||
                        void 0 === c ||
                        c.call(i)),
                      null === (l = i.finalize) || void 0 === l || l.call(i);
                  }
                )
              );
            })
          : zn;
      }
      class _n {
        constructor(e, t) {
          (this.id = e), (this.url = t);
        }
      }
      class A0 extends _n {
        constructor(e, t, i = "imperative", r = null) {
          super(e, t), (this.navigationTrigger = i), (this.restoredState = r);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Jr extends _n {
        constructor(e, t, i) {
          super(e, t), (this.urlAfterRedirects = i);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class Yh extends _n {
        constructor(e, t, i) {
          super(e, t), (this.reason = i);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Az extends _n {
        constructor(e, t, i) {
          super(e, t), (this.error = i);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class xz extends _n {
        constructor(e, t, i, r) {
          super(e, t), (this.urlAfterRedirects = i), (this.state = r);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class zz extends _n {
        constructor(e, t, i, r) {
          super(e, t), (this.urlAfterRedirects = i), (this.state = r);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Lz extends _n {
        constructor(e, t, i, r, s) {
          super(e, t),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.shouldActivate = s);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class Tz extends _n {
        constructor(e, t, i, r) {
          super(e, t), (this.urlAfterRedirects = i), (this.state = r);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Nz extends _n {
        constructor(e, t, i, r) {
          super(e, t), (this.urlAfterRedirects = i), (this.state = r);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Qh {
        constructor(e) {
          this.route = e;
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class Xh {
        constructor(e) {
          this.route = e;
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class Vz {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class kz {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class Iz {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class Hz {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class Jh {
        constructor(e, t, i) {
          (this.routerEvent = e), (this.position = t), (this.anchor = i);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      const J = "primary";
      class Oz {
        constructor(e) {
          this.params = e || {};
        }
        has(e) {
          return Object.prototype.hasOwnProperty.call(this.params, e);
        }
        get(e) {
          if (this.has(e)) {
            const t = this.params[e];
            return Array.isArray(t) ? t[0] : t;
          }
          return null;
        }
        getAll(e) {
          if (this.has(e)) {
            const t = this.params[e];
            return Array.isArray(t) ? t : [t];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function ki(n) {
        return new Oz(n);
      }
      const ed = "ngNavigationCancelingError";
      function x0(n) {
        const e = Error("NavigationCancelingError: " + n);
        return (e[ed] = !0), e;
      }
      function Fz(n, e, t) {
        const i = t.path.split("/");
        if (
          i.length > n.length ||
          ("full" === t.pathMatch && (e.hasChildren() || i.length < n.length))
        )
          return null;
        const r = {};
        for (let s = 0; s < i.length; s++) {
          const o = i[s],
            a = n[s];
          if (o.startsWith(":")) r[o.substring(1)] = a;
          else if (o !== a.path) return null;
        }
        return { consumed: n.slice(0, i.length), posParams: r };
      }
      function Y1(n, e) {
        const t = n ? Object.keys(n) : void 0,
          i = e ? Object.keys(e) : void 0;
        if (!t || !i || t.length != i.length) return !1;
        let r;
        for (let s = 0; s < t.length; s++)
          if (((r = t[s]), !td(n[r], e[r]))) return !1;
        return !0;
      }
      function td(n, e) {
        if (Array.isArray(n) && Array.isArray(e)) {
          if (n.length !== e.length) return !1;
          const t = [...n].sort(),
            i = [...e].sort();
          return t.every((r, s) => i[s] === r);
        }
        return n === e;
      }
      function nd(n) {
        return Array.prototype.concat.apply([], n);
      }
      function id(n) {
        return n.length > 0 ? n[n.length - 1] : null;
      }
      function ft(n, e) {
        for (const t in n) n.hasOwnProperty(t) && e(n[t], t);
      }
      function Q1(n) {
        return _3(n) ? n : Nr(n) ? st(Promise.resolve(n)) : G(n);
      }
      const jz = {
          exact: function od(n, e, t) {
            if (
              !_2(n.segments, e.segments) ||
              !ua(n.segments, e.segments, t) ||
              n.numberOfChildren !== e.numberOfChildren
            )
              return !1;
            for (const i in e.children)
              if (!n.children[i] || !od(n.children[i], e.children[i], t))
                return !1;
            return !0;
          },
          subset: ad,
        },
        rd = {
          exact: function Uz(n, e) {
            return Y1(n, e);
          },
          subset: function $z(n, e) {
            return (
              Object.keys(e).length <= Object.keys(n).length &&
              Object.keys(e).every((t) => td(n[t], e[t]))
            );
          },
          ignored: () => !0,
        };
      function sd(n, e, t) {
        return (
          jz[t.paths](n.root, e.root, t.matrixParams) &&
          rd[t.queryParams](n.queryParams, e.queryParams) &&
          !("exact" === t.fragment && n.fragment !== e.fragment)
        );
      }
      function ad(n, e, t) {
        return cd(n, e, e.segments, t);
      }
      function cd(n, e, t, i) {
        if (n.segments.length > t.length) {
          const r = n.segments.slice(0, t.length);
          return !(!_2(r, t) || e.hasChildren() || !ua(r, t, i));
        }
        if (n.segments.length === t.length) {
          if (!_2(n.segments, t) || !ua(n.segments, t, i)) return !1;
          for (const r in e.children)
            if (!n.children[r] || !ad(n.children[r], e.children[r], i))
              return !1;
          return !0;
        }
        {
          const r = t.slice(0, n.segments.length),
            s = t.slice(n.segments.length);
          return (
            !!(_2(n.segments, r) && ua(n.segments, r, i) && n.children[J]) &&
            cd(n.children[J], e, s, i)
          );
        }
      }
      function ua(n, e, t) {
        return e.every((i, r) => rd[t](n[r].parameters, i.parameters));
      }
      class v2 {
        constructor(e, t, i) {
          (this.root = e), (this.queryParams = t), (this.fragment = i);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ki(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return qz.serialize(this);
        }
      }
      class te {
        constructor(e, t) {
          (this.segments = e),
            (this.children = t),
            (this.parent = null),
            ft(t, (i, r) => (i.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return fa(this);
        }
      }
      class es {
        constructor(e, t) {
          (this.path = e), (this.parameters = t);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = ki(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return dd(this);
        }
      }
      function _2(n, e) {
        return n.length === e.length && n.every((t, i) => t.path === e[i].path);
      }
      class ld {}
      class ud {
        parse(e) {
          const t = new nL(e);
          return new v2(
            t.parseRootSegment(),
            t.parseQueryParams(),
            t.parseFragment()
          );
        }
        serialize(e) {
          const t = `/${ts(e.root, !0)}`,
            i = (function Yz(n) {
              const e = Object.keys(n)
                .map((t) => {
                  const i = n[t];
                  return Array.isArray(i)
                    ? i.map((r) => `${ha(t)}=${ha(r)}`).join("&")
                    : `${ha(t)}=${ha(i)}`;
                })
                .filter((t) => !!t);
              return e.length ? `?${e.join("&")}` : "";
            })(e.queryParams);
          return `${t}${i}${
            "string" == typeof e.fragment
              ? `#${(function Zz(n) {
                  return encodeURI(n);
                })(e.fragment)}`
              : ""
          }`;
        }
      }
      const qz = new ud();
      function fa(n) {
        return n.segments.map((e) => dd(e)).join("/");
      }
      function ts(n, e) {
        if (!n.hasChildren()) return fa(n);
        if (e) {
          const t = n.children[J] ? ts(n.children[J], !1) : "",
            i = [];
          return (
            ft(n.children, (r, s) => {
              s !== J && i.push(`${s}:${ts(r, !1)}`);
            }),
            i.length > 0 ? `${t}(${i.join("//")})` : t
          );
        }
        {
          const t = (function Wz(n, e) {
            let t = [];
            return (
              ft(n.children, (i, r) => {
                r === J && (t = t.concat(e(i, r)));
              }),
              ft(n.children, (i, r) => {
                r !== J && (t = t.concat(e(i, r)));
              }),
              t
            );
          })(n, (i, r) =>
            r === J ? [ts(n.children[J], !1)] : [`${r}:${ts(i, !1)}`]
          );
          return 1 === Object.keys(n.children).length && null != n.children[J]
            ? `${fa(n)}/${t[0]}`
            : `${fa(n)}/(${t.join("//")})`;
        }
      }
      function fd(n) {
        return encodeURIComponent(n)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function ha(n) {
        return fd(n).replace(/%3B/gi, ";");
      }
      function z0(n) {
        return fd(n)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function da(n) {
        return decodeURIComponent(n);
      }
      function hd(n) {
        return da(n.replace(/\+/g, "%20"));
      }
      function dd(n) {
        return `${z0(n.path)}${(function Kz(n) {
          return Object.keys(n)
            .map((e) => `;${z0(e)}=${z0(n[e])}`)
            .join("");
        })(n.parameters)}`;
      }
      const Qz = /^[^\/()?;=#]+/;
      function pa(n) {
        const e = n.match(Qz);
        return e ? e[0] : "";
      }
      const Xz = /^[^=?&#]+/,
        eL = /^[^&#]+/;
      class nL {
        constructor(e) {
          (this.url = e), (this.remaining = e);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new te([], {})
              : new te([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const e = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(e);
            } while (this.consumeOptional("&"));
          return e;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const e = [];
          for (
            this.peekStartsWith("(") || e.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), e.push(this.parseSegment());
          let t = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (t = this.parseParens(!0)));
          let i = {};
          return (
            this.peekStartsWith("(") && (i = this.parseParens(!1)),
            (e.length > 0 || Object.keys(t).length > 0) &&
              (i[J] = new te(e, t)),
            i
          );
        }
        parseSegment() {
          const e = pa(this.remaining);
          if ("" === e && this.peekStartsWith(";"))
            throw new Error(
              `Empty path url segment cannot have parameters: '${this.remaining}'.`
            );
          return this.capture(e), new es(da(e), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const e = {};
          for (; this.consumeOptional(";"); ) this.parseParam(e);
          return e;
        }
        parseParam(e) {
          const t = pa(this.remaining);
          if (!t) return;
          this.capture(t);
          let i = "";
          if (this.consumeOptional("=")) {
            const r = pa(this.remaining);
            r && ((i = r), this.capture(i));
          }
          e[da(t)] = da(i);
        }
        parseQueryParam(e) {
          const t = (function Jz(n) {
            const e = n.match(Xz);
            return e ? e[0] : "";
          })(this.remaining);
          if (!t) return;
          this.capture(t);
          let i = "";
          if (this.consumeOptional("=")) {
            const o = (function tL(n) {
              const e = n.match(eL);
              return e ? e[0] : "";
            })(this.remaining);
            o && ((i = o), this.capture(i));
          }
          const r = hd(t),
            s = hd(i);
          if (e.hasOwnProperty(r)) {
            let o = e[r];
            Array.isArray(o) || ((o = [o]), (e[r] = o)), o.push(s);
          } else e[r] = s;
        }
        parseParens(e) {
          const t = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const i = pa(this.remaining),
              r = this.remaining[i.length];
            if ("/" !== r && ")" !== r && ";" !== r)
              throw new Error(`Cannot parse url '${this.url}'`);
            let s;
            i.indexOf(":") > -1
              ? ((s = i.substr(0, i.indexOf(":"))),
                this.capture(s),
                this.capture(":"))
              : e && (s = J);
            const o = this.parseChildren();
            (t[s] = 1 === Object.keys(o).length ? o[J] : new te([], o)),
              this.consumeOptional("//");
          }
          return t;
        }
        peekStartsWith(e) {
          return this.remaining.startsWith(e);
        }
        consumeOptional(e) {
          return (
            !!this.peekStartsWith(e) &&
            ((this.remaining = this.remaining.substring(e.length)), !0)
          );
        }
        capture(e) {
          if (!this.consumeOptional(e)) throw new Error(`Expected "${e}".`);
        }
      }
      class pd {
        constructor(e) {
          this._root = e;
        }
        get root() {
          return this._root.value;
        }
        parent(e) {
          const t = this.pathFromRoot(e);
          return t.length > 1 ? t[t.length - 2] : null;
        }
        children(e) {
          const t = L0(e, this._root);
          return t ? t.children.map((i) => i.value) : [];
        }
        firstChild(e) {
          const t = L0(e, this._root);
          return t && t.children.length > 0 ? t.children[0].value : null;
        }
        siblings(e) {
          const t = T0(e, this._root);
          return t.length < 2
            ? []
            : t[t.length - 2].children
                .map((r) => r.value)
                .filter((r) => r !== e);
        }
        pathFromRoot(e) {
          return T0(e, this._root).map((t) => t.value);
        }
      }
      function L0(n, e) {
        if (n === e.value) return e;
        for (const t of e.children) {
          const i = L0(n, t);
          if (i) return i;
        }
        return null;
      }
      function T0(n, e) {
        if (n === e.value) return [e];
        for (const t of e.children) {
          const i = T0(n, t);
          if (i.length) return i.unshift(e), i;
        }
        return [];
      }
      class yn {
        constructor(e, t) {
          (this.value = e), (this.children = t);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function Ii(n) {
        const e = {};
        return n && n.children.forEach((t) => (e[t.value.outlet] = t)), e;
      }
      class md extends pd {
        constructor(e, t) {
          super(e), (this.snapshot = t), N0(this, e);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function gd(n, e) {
        const t = (function iL(n, e) {
            const o = new ma([], {}, {}, "", {}, J, e, null, n.root, -1, {});
            return new _d("", new yn(o, []));
          })(n, e),
          i = new c1([new es("", {})]),
          r = new c1({}),
          s = new c1({}),
          o = new c1({}),
          a = new c1(""),
          c = new Hi(i, r, o, a, s, J, e, t.root);
        return (c.snapshot = t.root), new md(new yn(c, []), t);
      }
      class Hi {
        constructor(e, t, i, r, s, o, a, c) {
          (this.url = e),
            (this.params = t),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = s),
            (this.outlet = o),
            (this.component = a),
            (this._futureSnapshot = c);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe(ae((e) => ki(e)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(ae((e) => ki(e)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function vd(n, e = "emptyOnly") {
        const t = n.pathFromRoot;
        let i = 0;
        if ("always" !== e)
          for (i = t.length - 1; i >= 1; ) {
            const r = t[i],
              s = t[i - 1];
            if (r.routeConfig && "" === r.routeConfig.path) i--;
            else {
              if (s.component) break;
              i--;
            }
          }
        return (function rL(n) {
          return n.reduce(
            (e, t) => ({
              params: Object.assign(Object.assign({}, e.params), t.params),
              data: Object.assign(Object.assign({}, e.data), t.data),
              resolve: Object.assign(
                Object.assign({}, e.resolve),
                t._resolvedData
              ),
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(t.slice(i));
      }
      class ma {
        constructor(e, t, i, r, s, o, a, c, l, u, f) {
          (this.url = e),
            (this.params = t),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = s),
            (this.outlet = o),
            (this.component = a),
            (this.routeConfig = c),
            (this._urlSegment = l),
            (this._lastPathIndex = u),
            (this._resolve = f);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = ki(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ki(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((i) => i.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class _d extends pd {
        constructor(e, t) {
          super(t), (this.url = e), N0(this, t);
        }
        toString() {
          return yd(this._root);
        }
      }
      function N0(n, e) {
        (e.value._routerState = n), e.children.forEach((t) => N0(n, t));
      }
      function yd(n) {
        const e =
          n.children.length > 0 ? ` { ${n.children.map(yd).join(", ")} } ` : "";
        return `${n.value}${e}`;
      }
      function V0(n) {
        if (n.snapshot) {
          const e = n.snapshot,
            t = n._futureSnapshot;
          (n.snapshot = t),
            Y1(e.queryParams, t.queryParams) ||
              n.queryParams.next(t.queryParams),
            e.fragment !== t.fragment && n.fragment.next(t.fragment),
            Y1(e.params, t.params) || n.params.next(t.params),
            (function Rz(n, e) {
              if (n.length !== e.length) return !1;
              for (let t = 0; t < n.length; ++t) if (!Y1(n[t], e[t])) return !1;
              return !0;
            })(e.url, t.url) || n.url.next(t.url),
            Y1(e.data, t.data) || n.data.next(t.data);
        } else
          (n.snapshot = n._futureSnapshot), n.data.next(n._futureSnapshot.data);
      }
      function k0(n, e) {
        const t =
          Y1(n.params, e.params) &&
          (function Gz(n, e) {
            return (
              _2(n, e) && n.every((t, i) => Y1(t.parameters, e[i].parameters))
            );
          })(n.url, e.url);
        return (
          t &&
          !(!n.parent != !e.parent) &&
          (!n.parent || k0(n.parent, e.parent))
        );
      }
      function ns(n, e, t) {
        if (t && n.shouldReuseRoute(e.value, t.value.snapshot)) {
          const i = t.value;
          i._futureSnapshot = e.value;
          const r = (function oL(n, e, t) {
            return e.children.map((i) => {
              for (const r of t.children)
                if (n.shouldReuseRoute(i.value, r.value.snapshot))
                  return ns(n, i, r);
              return ns(n, i);
            });
          })(n, e, t);
          return new yn(i, r);
        }
        {
          if (n.shouldAttach(e.value)) {
            const s = n.retrieve(e.value);
            if (null !== s) {
              const o = s.route;
              return (
                (o.value._futureSnapshot = e.value),
                (o.children = e.children.map((a) => ns(n, a))),
                o
              );
            }
          }
          const i = (function aL(n) {
              return new Hi(
                new c1(n.url),
                new c1(n.params),
                new c1(n.queryParams),
                new c1(n.fragment),
                new c1(n.data),
                n.outlet,
                n.component,
                n
              );
            })(e.value),
            r = e.children.map((s) => ns(n, s));
          return new yn(i, r);
        }
      }
      function ga(n) {
        return (
          "object" == typeof n && null != n && !n.outlets && !n.segmentPath
        );
      }
      function is(n) {
        return "object" == typeof n && null != n && n.outlets;
      }
      function I0(n, e, t, i, r) {
        let s = {};
        return (
          i &&
            ft(i, (o, a) => {
              s[a] = Array.isArray(o) ? o.map((c) => `${c}`) : `${o}`;
            }),
          new v2(t.root === n ? e : Cd(t.root, n, e), s, r)
        );
      }
      function Cd(n, e, t) {
        const i = {};
        return (
          ft(n.children, (r, s) => {
            i[s] = r === e ? t : Cd(r, e, t);
          }),
          new te(n.segments, i)
        );
      }
      class Md {
        constructor(e, t, i) {
          if (
            ((this.isAbsolute = e),
            (this.numberOfDoubleDots = t),
            (this.commands = i),
            e && i.length > 0 && ga(i[0]))
          )
            throw new Error("Root segment cannot have matrix parameters");
          const r = i.find(is);
          if (r && r !== id(i))
            throw new Error("{outlets:{}} has to be the last command");
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class H0 {
        constructor(e, t, i) {
          (this.segmentGroup = e), (this.processChildren = t), (this.index = i);
        }
      }
      function bd(n, e, t) {
        if (
          (n || (n = new te([], {})),
          0 === n.segments.length && n.hasChildren())
        )
          return va(n, e, t);
        const i = (function dL(n, e, t) {
            let i = 0,
              r = e;
            const s = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; r < n.segments.length; ) {
              if (i >= t.length) return s;
              const o = n.segments[r],
                a = t[i];
              if (is(a)) break;
              const c = `${a}`,
                l = i < t.length - 1 ? t[i + 1] : null;
              if (r > 0 && void 0 === c) break;
              if (c && l && "object" == typeof l && void 0 === l.outlets) {
                if (!Dd(c, l, o)) return s;
                i += 2;
              } else {
                if (!Dd(c, {}, o)) return s;
                i++;
              }
              r++;
            }
            return { match: !0, pathIndex: r, commandIndex: i };
          })(n, e, t),
          r = t.slice(i.commandIndex);
        if (i.match && i.pathIndex < n.segments.length) {
          const s = new te(n.segments.slice(0, i.pathIndex), {});
          return (
            (s.children[J] = new te(n.segments.slice(i.pathIndex), n.children)),
            va(s, 0, r)
          );
        }
        return i.match && 0 === r.length
          ? new te(n.segments, {})
          : i.match && !n.hasChildren()
          ? O0(n, e, t)
          : i.match
          ? va(n, 0, r)
          : O0(n, e, t);
      }
      function va(n, e, t) {
        if (0 === t.length) return new te(n.segments, {});
        {
          const i = (function hL(n) {
              return is(n[0]) ? n[0].outlets : { [J]: n };
            })(t),
            r = {};
          return (
            ft(i, (s, o) => {
              "string" == typeof s && (s = [s]),
                null !== s && (r[o] = bd(n.children[o], e, s));
            }),
            ft(n.children, (s, o) => {
              void 0 === i[o] && (r[o] = s);
            }),
            new te(n.segments, r)
          );
        }
      }
      function O0(n, e, t) {
        const i = n.segments.slice(0, e);
        let r = 0;
        for (; r < t.length; ) {
          const s = t[r];
          if (is(s)) {
            const c = pL(s.outlets);
            return new te(i, c);
          }
          if (0 === r && ga(t[0])) {
            i.push(new es(n.segments[e].path, wd(t[0]))), r++;
            continue;
          }
          const o = is(s) ? s.outlets[J] : `${s}`,
            a = r < t.length - 1 ? t[r + 1] : null;
          o && a && ga(a)
            ? (i.push(new es(o, wd(a))), (r += 2))
            : (i.push(new es(o, {})), r++);
        }
        return new te(i, {});
      }
      function pL(n) {
        const e = {};
        return (
          ft(n, (t, i) => {
            "string" == typeof t && (t = [t]),
              null !== t && (e[i] = O0(new te([], {}), 0, t));
          }),
          e
        );
      }
      function wd(n) {
        const e = {};
        return ft(n, (t, i) => (e[i] = `${t}`)), e;
      }
      function Dd(n, e, t) {
        return n == t.path && Y1(e, t.parameters);
      }
      class gL {
        constructor(e, t, i, r) {
          (this.routeReuseStrategy = e),
            (this.futureState = t),
            (this.currState = i),
            (this.forwardEvent = r);
        }
        activate(e) {
          const t = this.futureState._root,
            i = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(t, i, e),
            V0(this.futureState.root),
            this.activateChildRoutes(t, i, e);
        }
        deactivateChildRoutes(e, t, i) {
          const r = Ii(t);
          e.children.forEach((s) => {
            const o = s.value.outlet;
            this.deactivateRoutes(s, r[o], i), delete r[o];
          }),
            ft(r, (s, o) => {
              this.deactivateRouteAndItsChildren(s, i);
            });
        }
        deactivateRoutes(e, t, i) {
          const r = e.value,
            s = t ? t.value : null;
          if (r === s)
            if (r.component) {
              const o = i.getContext(r.outlet);
              o && this.deactivateChildRoutes(e, t, o.children);
            } else this.deactivateChildRoutes(e, t, i);
          else s && this.deactivateRouteAndItsChildren(t, i);
        }
        deactivateRouteAndItsChildren(e, t) {
          e.value.component &&
          this.routeReuseStrategy.shouldDetach(e.value.snapshot)
            ? this.detachAndStoreRouteSubtree(e, t)
            : this.deactivateRouteAndOutlet(e, t);
        }
        detachAndStoreRouteSubtree(e, t) {
          const i = t.getContext(e.value.outlet),
            r = i && e.value.component ? i.children : t,
            s = Ii(e);
          for (const o of Object.keys(s))
            this.deactivateRouteAndItsChildren(s[o], r);
          if (i && i.outlet) {
            const o = i.outlet.detach(),
              a = i.children.onOutletDeactivated();
            this.routeReuseStrategy.store(e.value.snapshot, {
              componentRef: o,
              route: e,
              contexts: a,
            });
          }
        }
        deactivateRouteAndOutlet(e, t) {
          const i = t.getContext(e.value.outlet),
            r = i && e.value.component ? i.children : t,
            s = Ii(e);
          for (const o of Object.keys(s))
            this.deactivateRouteAndItsChildren(s[o], r);
          i &&
            i.outlet &&
            (i.outlet.deactivate(),
            i.children.onOutletDeactivated(),
            (i.attachRef = null),
            (i.resolver = null),
            (i.route = null));
        }
        activateChildRoutes(e, t, i) {
          const r = Ii(t);
          e.children.forEach((s) => {
            this.activateRoutes(s, r[s.value.outlet], i),
              this.forwardEvent(new Hz(s.value.snapshot));
          }),
            e.children.length && this.forwardEvent(new kz(e.value.snapshot));
        }
        activateRoutes(e, t, i) {
          const r = e.value,
            s = t ? t.value : null;
          if ((V0(r), r === s))
            if (r.component) {
              const o = i.getOrCreateContext(r.outlet);
              this.activateChildRoutes(e, t, o.children);
            } else this.activateChildRoutes(e, t, i);
          else if (r.component) {
            const o = i.getOrCreateContext(r.outlet);
            if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
              const a = this.routeReuseStrategy.retrieve(r.snapshot);
              this.routeReuseStrategy.store(r.snapshot, null),
                o.children.onOutletReAttached(a.contexts),
                (o.attachRef = a.componentRef),
                (o.route = a.route.value),
                o.outlet && o.outlet.attach(a.componentRef, a.route.value),
                V0(a.route.value),
                this.activateChildRoutes(e, null, o.children);
            } else {
              const a = (function vL(n) {
                  for (let e = n.parent; e; e = e.parent) {
                    const t = e.routeConfig;
                    if (t && t._loadedConfig) return t._loadedConfig;
                    if (t && t.component) return null;
                  }
                  return null;
                })(r.snapshot),
                c = a ? a.module.componentFactoryResolver : null;
              (o.attachRef = null),
                (o.route = r),
                (o.resolver = c),
                o.outlet && o.outlet.activateWith(r, c),
                this.activateChildRoutes(e, null, o.children);
            }
          } else this.activateChildRoutes(e, null, i);
        }
      }
      class P0 {
        constructor(e, t) {
          (this.routes = e), (this.module = t);
        }
      }
      function Rn(n) {
        return "function" == typeof n;
      }
      function y2(n) {
        return n instanceof v2;
      }
      const rs = Symbol("INITIAL_VALUE");
      function ss() {
        return vn((n) =>
          (function yz(...n) {
            const e = tr(n),
              t = pl(n),
              { args: i, keys: r } = Uh(n);
            if (0 === i.length) return st([], e);
            const s = new pe(
              (function Cz(n, e, t = zn) {
                return (i) => {
                  Gh(
                    e,
                    () => {
                      const { length: r } = n,
                        s = new Array(r);
                      let o = r,
                        a = r;
                      for (let c = 0; c < r; c++)
                        Gh(
                          e,
                          () => {
                            const l = st(n[c], e);
                            let u = !1;
                            l.subscribe(
                              new Te(
                                i,
                                (f) => {
                                  (s[c] = f),
                                    u || ((u = !0), a--),
                                    a || i.next(t(s.slice()));
                                },
                                () => {
                                  --o || i.complete();
                                }
                              )
                            );
                          },
                          i
                        );
                    },
                    i
                  );
                };
              })(i, e, r ? (o) => $h(r, o) : zn)
            );
            return t ? s.pipe(w0(t)) : s;
          })(n.map((e) => e.pipe(on(1), Ti(rs)))).pipe(
            qh((e, t) => {
              let i = !1;
              return t.reduce(
                (r, s, o) =>
                  r !== rs
                    ? r
                    : (s === rs && (i = !0),
                      i || (!1 !== s && o !== t.length - 1 && !y2(s)) ? r : s),
                e
              );
            }, rs),
            x1((e) => e !== rs),
            ae((e) => (y2(e) ? e : !0 === e)),
            on(1)
          )
        );
      }
      class wL {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.children = new os()),
            (this.attachRef = null);
        }
      }
      class os {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(e, t) {
          const i = this.getOrCreateContext(e);
          (i.outlet = t), this.contexts.set(e, i);
        }
        onChildOutletDestroyed(e) {
          const t = this.getContext(e);
          t && ((t.outlet = null), (t.attachRef = null));
        }
        onOutletDeactivated() {
          const e = this.contexts;
          return (this.contexts = new Map()), e;
        }
        onOutletReAttached(e) {
          this.contexts = e;
        }
        getOrCreateContext(e) {
          let t = this.getContext(e);
          return t || ((t = new wL()), this.contexts.set(e, t)), t;
        }
        getContext(e) {
          return this.contexts.get(e) || null;
        }
      }
      let F0 = (() => {
        class n {
          constructor(t, i, r, s, o) {
            (this.parentContexts = t),
              (this.location = i),
              (this.resolver = r),
              (this.changeDetector = o),
              (this.activated = null),
              (this._activatedRoute = null),
              (this.activateEvents = new $()),
              (this.deactivateEvents = new $()),
              (this.attachEvents = new $()),
              (this.detachEvents = new $()),
              (this.name = s || J),
              t.onChildOutletCreated(this.name, this);
          }
          ngOnDestroy() {
            this.parentContexts.onChildOutletDestroyed(this.name);
          }
          ngOnInit() {
            if (!this.activated) {
              const t = this.parentContexts.getContext(this.name);
              t &&
                t.route &&
                (t.attachRef
                  ? this.attach(t.attachRef, t.route)
                  : this.activateWith(t.route, t.resolver || null));
            }
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new Error("Outlet is not activated");
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new Error("Outlet is not activated");
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new Error("Outlet is not activated");
            this.location.detach();
            const t = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(t.instance),
              t
            );
          }
          attach(t, i) {
            (this.activated = t),
              (this._activatedRoute = i),
              this.location.insert(t.hostView),
              this.attachEvents.emit(t.instance);
          }
          deactivate() {
            if (this.activated) {
              const t = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(t);
            }
          }
          activateWith(t, i) {
            if (this.isActivated)
              throw new Error("Cannot activate an already activated outlet");
            this._activatedRoute = t;
            const o = (i = i || this.resolver).resolveComponentFactory(
                t._futureSnapshot.routeConfig.component
              ),
              a = this.parentContexts.getOrCreateContext(this.name).children,
              c = new DL(t, a, this.location.injector);
            (this.activated = this.location.createComponent(
              o,
              this.location.length,
              c
            )),
              this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(_(os), _(r1), _(f2), $2("name"), _(q1));
          }),
          (n.ɵdir = V({
            type: n,
            selectors: [["router-outlet"]],
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
              attachEvents: "attach",
              detachEvents: "detach",
            },
            exportAs: ["outlet"],
          })),
          n
        );
      })();
      class DL {
        constructor(e, t, i) {
          (this.route = e), (this.childContexts = t), (this.parent = i);
        }
        get(e, t) {
          return e === Hi
            ? this.route
            : e === os
            ? this.childContexts
            : this.parent.get(e, t);
        }
      }
      let Ed = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵcmp = ot({
            type: n,
            selectors: [["ng-component"]],
            decls: 1,
            vars: 0,
            template: function (t, i) {
              1 & t && se(0, "router-outlet");
            },
            directives: [F0],
            encapsulation: 2,
          })),
          n
        );
      })();
      function Sd(n, e = "") {
        for (let t = 0; t < n.length; t++) {
          const i = n[t];
          EL(i, SL(e, i));
        }
      }
      function EL(n, e) {
        n.children && Sd(n.children, e);
      }
      function SL(n, e) {
        return e
          ? n || e.path
            ? n && !e.path
              ? `${n}/`
              : !n && e.path
              ? e.path
              : `${n}/${e.path}`
            : ""
          : n;
      }
      function R0(n) {
        const e = n.children && n.children.map(R0),
          t = e
            ? Object.assign(Object.assign({}, n), { children: e })
            : Object.assign({}, n);
        return (
          !t.component &&
            (e || t.loadChildren) &&
            t.outlet &&
            t.outlet !== J &&
            (t.component = Ed),
          t
        );
      }
      function l1(n) {
        return n.outlet || J;
      }
      function Ad(n, e) {
        const t = n.filter((i) => l1(i) === e);
        return t.push(...n.filter((i) => l1(i) !== e)), t;
      }
      const xd = {
        matched: !1,
        consumedSegments: [],
        lastChild: 0,
        parameters: {},
        positionalParamSegments: {},
      };
      function _a(n, e, t) {
        var i;
        if ("" === e.path)
          return "full" === e.pathMatch && (n.hasChildren() || t.length > 0)
            ? Object.assign({}, xd)
            : {
                matched: !0,
                consumedSegments: [],
                lastChild: 0,
                parameters: {},
                positionalParamSegments: {},
              };
        const s = (e.matcher || Fz)(t, n, e);
        if (!s) return Object.assign({}, xd);
        const o = {};
        ft(s.posParams, (c, l) => {
          o[l] = c.path;
        });
        const a =
          s.consumed.length > 0
            ? Object.assign(
                Object.assign({}, o),
                s.consumed[s.consumed.length - 1].parameters
              )
            : o;
        return {
          matched: !0,
          consumedSegments: s.consumed,
          lastChild: s.consumed.length,
          parameters: a,
          positionalParamSegments:
            null !== (i = s.posParams) && void 0 !== i ? i : {},
        };
      }
      function ya(n, e, t, i, r = "corrected") {
        if (
          t.length > 0 &&
          (function zL(n, e, t) {
            return t.some((i) => Ca(n, e, i) && l1(i) !== J);
          })(n, t, i)
        ) {
          const o = new te(
            e,
            (function xL(n, e, t, i) {
              const r = {};
              (r[J] = i),
                (i._sourceSegment = n),
                (i._segmentIndexShift = e.length);
              for (const s of t)
                if ("" === s.path && l1(s) !== J) {
                  const o = new te([], {});
                  (o._sourceSegment = n),
                    (o._segmentIndexShift = e.length),
                    (r[l1(s)] = o);
                }
              return r;
            })(n, e, i, new te(t, n.children))
          );
          return (
            (o._sourceSegment = n),
            (o._segmentIndexShift = e.length),
            { segmentGroup: o, slicedSegments: [] }
          );
        }
        if (
          0 === t.length &&
          (function LL(n, e, t) {
            return t.some((i) => Ca(n, e, i));
          })(n, t, i)
        ) {
          const o = new te(
            n.segments,
            (function AL(n, e, t, i, r, s) {
              const o = {};
              for (const a of i)
                if (Ca(n, t, a) && !r[l1(a)]) {
                  const c = new te([], {});
                  (c._sourceSegment = n),
                    (c._segmentIndexShift =
                      "legacy" === s ? n.segments.length : e.length),
                    (o[l1(a)] = c);
                }
              return Object.assign(Object.assign({}, r), o);
            })(n, e, t, i, n.children, r)
          );
          return (
            (o._sourceSegment = n),
            (o._segmentIndexShift = e.length),
            { segmentGroup: o, slicedSegments: t }
          );
        }
        const s = new te(n.segments, n.children);
        return (
          (s._sourceSegment = n),
          (s._segmentIndexShift = e.length),
          { segmentGroup: s, slicedSegments: t }
        );
      }
      function Ca(n, e, t) {
        return (
          (!(n.hasChildren() || e.length > 0) || "full" !== t.pathMatch) &&
          "" === t.path
        );
      }
      function zd(n, e, t, i) {
        return (
          !!(l1(n) === i || (i !== J && Ca(e, t, n))) &&
          ("**" === n.path || _a(e, n, t).matched)
        );
      }
      function Ld(n, e, t) {
        return 0 === e.length && !n.children[t];
      }
      class as {
        constructor(e) {
          this.segmentGroup = e || null;
        }
      }
      class Td {
        constructor(e) {
          this.urlTree = e;
        }
      }
      function Ma(n) {
        return new pe((e) => e.error(new as(n)));
      }
      function Nd(n) {
        return new pe((e) => e.error(new Td(n)));
      }
      function TL(n) {
        return new pe((e) =>
          e.error(
            new Error(
              `Only absolute redirects can have named outlets. redirectTo: '${n}'`
            )
          )
        );
      }
      class kL {
        constructor(e, t, i, r, s) {
          (this.configLoader = t),
            (this.urlSerializer = i),
            (this.urlTree = r),
            (this.config = s),
            (this.allowRedirects = !0),
            (this.ngModule = e.get(dn));
        }
        apply() {
          const e = ya(this.urlTree.root, [], [], this.config).segmentGroup,
            t = new te(e.segments, e.children);
          return this.expandSegmentGroup(this.ngModule, this.config, t, J)
            .pipe(
              ae((s) =>
                this.createUrlTree(
                  B0(s),
                  this.urlTree.queryParams,
                  this.urlTree.fragment
                )
              )
            )
            .pipe(
              K1((s) => {
                if (s instanceof Td)
                  return (this.allowRedirects = !1), this.match(s.urlTree);
                throw s instanceof as ? this.noMatchError(s) : s;
              })
            );
        }
        match(e) {
          return this.expandSegmentGroup(this.ngModule, this.config, e.root, J)
            .pipe(
              ae((r) => this.createUrlTree(B0(r), e.queryParams, e.fragment))
            )
            .pipe(
              K1((r) => {
                throw r instanceof as ? this.noMatchError(r) : r;
              })
            );
        }
        noMatchError(e) {
          return new Error(
            `Cannot match any routes. URL Segment: '${e.segmentGroup}'`
          );
        }
        createUrlTree(e, t, i) {
          const r = e.segments.length > 0 ? new te([], { [J]: e }) : e;
          return new v2(r, t, i);
        }
        expandSegmentGroup(e, t, i, r) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.expandChildren(e, t, i).pipe(ae((s) => new te([], s)))
            : this.expandSegment(e, i, t, i.segments, r, !0);
        }
        expandChildren(e, t, i) {
          const r = [];
          for (const s of Object.keys(i.children))
            "primary" === s ? r.unshift(s) : r.push(s);
          return st(r).pipe(
            Ni((s) => {
              const o = i.children[s],
                a = Ad(t, s);
              return this.expandSegmentGroup(e, a, o, s).pipe(
                ae((c) => ({ segment: c, outlet: s }))
              );
            }),
            qh((s, o) => ((s[o.outlet] = o.segment), s), {}),
            (function Ez(n, e) {
              const t = arguments.length >= 2;
              return (i) =>
                i.pipe(
                  n ? x1((r, s) => n(r, s, i)) : zn,
                  S0(1),
                  t ? Kh(e) : Zh(() => new la())
                );
            })()
          );
        }
        expandSegment(e, t, i, r, s, o) {
          return st(i).pipe(
            Ni((a) =>
              this.expandSegmentAgainstRoute(e, t, i, a, r, s, o).pipe(
                K1((l) => {
                  if (l instanceof as) return G(null);
                  throw l;
                })
              )
            ),
            Vi((a) => !!a),
            K1((a, c) => {
              if (a instanceof la || "EmptyError" === a.name) {
                if (Ld(t, r, s)) return G(new te([], {}));
                throw new as(t);
              }
              throw a;
            })
          );
        }
        expandSegmentAgainstRoute(e, t, i, r, s, o, a) {
          return zd(r, t, s, o)
            ? void 0 === r.redirectTo
              ? this.matchSegmentAgainstRoute(e, t, r, s, o)
              : a && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(e, t, i, r, s, o)
              : Ma(t)
            : Ma(t);
        }
        expandSegmentAgainstRouteUsingRedirect(e, t, i, r, s, o) {
          return "**" === r.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(e, i, r, o)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                e,
                t,
                i,
                r,
                s,
                o
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(e, t, i, r) {
          const s = this.applyRedirectCommands([], i.redirectTo, {});
          return i.redirectTo.startsWith("/")
            ? Nd(s)
            : this.lineralizeSegments(i, s).pipe(
                Xe((o) => {
                  const a = new te(o, {});
                  return this.expandSegment(e, a, t, o, r, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(e, t, i, r, s, o) {
          const {
            matched: a,
            consumedSegments: c,
            lastChild: l,
            positionalParamSegments: u,
          } = _a(t, r, s);
          if (!a) return Ma(t);
          const f = this.applyRedirectCommands(c, r.redirectTo, u);
          return r.redirectTo.startsWith("/")
            ? Nd(f)
            : this.lineralizeSegments(r, f).pipe(
                Xe((h) =>
                  this.expandSegment(e, t, i, h.concat(s.slice(l)), o, !1)
                )
              );
        }
        matchSegmentAgainstRoute(e, t, i, r, s) {
          if ("**" === i.path)
            return i.loadChildren
              ? (i._loadedConfig
                  ? G(i._loadedConfig)
                  : this.configLoader.load(e.injector, i)
                ).pipe(ae((h) => ((i._loadedConfig = h), new te(r, {}))))
              : G(new te(r, {}));
          const { matched: o, consumedSegments: a, lastChild: c } = _a(t, i, r);
          if (!o) return Ma(t);
          const l = r.slice(c);
          return this.getChildConfig(e, i, r).pipe(
            Xe((f) => {
              const h = f.module,
                d = f.routes,
                { segmentGroup: p, slicedSegments: m } = ya(t, a, l, d),
                g = new te(p.segments, p.children);
              if (0 === m.length && g.hasChildren())
                return this.expandChildren(h, d, g).pipe(
                  ae((E) => new te(a, E))
                );
              if (0 === d.length && 0 === m.length) return G(new te(a, {}));
              const y = l1(i) === s;
              return this.expandSegment(h, g, d, m, y ? J : s, !0).pipe(
                ae((M) => new te(a.concat(M.segments), M.children))
              );
            })
          );
        }
        getChildConfig(e, t, i) {
          return t.children
            ? G(new P0(t.children, e))
            : t.loadChildren
            ? void 0 !== t._loadedConfig
              ? G(t._loadedConfig)
              : this.runCanLoadGuards(e.injector, t, i).pipe(
                  Xe((r) =>
                    r
                      ? this.configLoader
                          .load(e.injector, t)
                          .pipe(ae((s) => ((t._loadedConfig = s), s)))
                      : (function NL(n) {
                          return new pe((e) =>
                            e.error(
                              x0(
                                `Cannot load children because the guard of the route "path: '${n.path}'" returned false`
                              )
                            )
                          );
                        })(t)
                  )
                )
            : G(new P0([], e));
        }
        runCanLoadGuards(e, t, i) {
          const r = t.canLoad;
          return r && 0 !== r.length
            ? G(
                r.map((o) => {
                  const a = e.get(o);
                  let c;
                  if (
                    (function yL(n) {
                      return n && Rn(n.canLoad);
                    })(a)
                  )
                    c = a.canLoad(t, i);
                  else {
                    if (!Rn(a)) throw new Error("Invalid CanLoad guard");
                    c = a(t, i);
                  }
                  return Q1(c);
                })
              ).pipe(
                ss(),
                St((o) => {
                  if (!y2(o)) return;
                  const a = x0(
                    `Redirecting to "${this.urlSerializer.serialize(o)}"`
                  );
                  throw ((a.url = o), a);
                }),
                ae((o) => !0 === o)
              )
            : G(!0);
        }
        lineralizeSegments(e, t) {
          let i = [],
            r = t.root;
          for (;;) {
            if (((i = i.concat(r.segments)), 0 === r.numberOfChildren))
              return G(i);
            if (r.numberOfChildren > 1 || !r.children[J])
              return TL(e.redirectTo);
            r = r.children[J];
          }
        }
        applyRedirectCommands(e, t, i) {
          return this.applyRedirectCreatreUrlTree(
            t,
            this.urlSerializer.parse(t),
            e,
            i
          );
        }
        applyRedirectCreatreUrlTree(e, t, i, r) {
          const s = this.createSegmentGroup(e, t.root, i, r);
          return new v2(
            s,
            this.createQueryParams(t.queryParams, this.urlTree.queryParams),
            t.fragment
          );
        }
        createQueryParams(e, t) {
          const i = {};
          return (
            ft(e, (r, s) => {
              if ("string" == typeof r && r.startsWith(":")) {
                const a = r.substring(1);
                i[s] = t[a];
              } else i[s] = r;
            }),
            i
          );
        }
        createSegmentGroup(e, t, i, r) {
          const s = this.createSegments(e, t.segments, i, r);
          let o = {};
          return (
            ft(t.children, (a, c) => {
              o[c] = this.createSegmentGroup(e, a, i, r);
            }),
            new te(s, o)
          );
        }
        createSegments(e, t, i, r) {
          return t.map((s) =>
            s.path.startsWith(":")
              ? this.findPosParam(e, s, r)
              : this.findOrReturn(s, i)
          );
        }
        findPosParam(e, t, i) {
          const r = i[t.path.substring(1)];
          if (!r)
            throw new Error(
              `Cannot redirect to '${e}'. Cannot find '${t.path}'.`
            );
          return r;
        }
        findOrReturn(e, t) {
          let i = 0;
          for (const r of t) {
            if (r.path === e.path) return t.splice(i), r;
            i++;
          }
          return e;
        }
      }
      function B0(n) {
        const e = {};
        for (const i of Object.keys(n.children)) {
          const s = B0(n.children[i]);
          (s.segments.length > 0 || s.hasChildren()) && (e[i] = s);
        }
        return (function IL(n) {
          if (1 === n.numberOfChildren && n.children[J]) {
            const e = n.children[J];
            return new te(n.segments.concat(e.segments), e.children);
          }
          return n;
        })(new te(n.segments, e));
      }
      class Vd {
        constructor(e) {
          (this.path = e), (this.route = this.path[this.path.length - 1]);
        }
      }
      class ba {
        constructor(e, t) {
          (this.component = e), (this.route = t);
        }
      }
      function OL(n, e, t) {
        const i = n._root;
        return cs(i, e ? e._root : null, t, [i.value]);
      }
      function wa(n, e, t) {
        const i = (function FL(n) {
          if (!n) return null;
          for (let e = n.parent; e; e = e.parent) {
            const t = e.routeConfig;
            if (t && t._loadedConfig) return t._loadedConfig;
          }
          return null;
        })(e);
        return (i ? i.module.injector : t).get(n);
      }
      function cs(
        n,
        e,
        t,
        i,
        r = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const s = Ii(e);
        return (
          n.children.forEach((o) => {
            (function RL(
              n,
              e,
              t,
              i,
              r = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const s = n.value,
                o = e ? e.value : null,
                a = t ? t.getContext(n.value.outlet) : null;
              if (o && s.routeConfig === o.routeConfig) {
                const c = (function BL(n, e, t) {
                  if ("function" == typeof t) return t(n, e);
                  switch (t) {
                    case "pathParamsChange":
                      return !_2(n.url, e.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !_2(n.url, e.url) || !Y1(n.queryParams, e.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !k0(n, e) || !Y1(n.queryParams, e.queryParams);
                    default:
                      return !k0(n, e);
                  }
                })(o, s, s.routeConfig.runGuardsAndResolvers);
                c
                  ? r.canActivateChecks.push(new Vd(i))
                  : ((s.data = o.data), (s._resolvedData = o._resolvedData)),
                  cs(n, e, s.component ? (a ? a.children : null) : t, i, r),
                  c &&
                    a &&
                    a.outlet &&
                    a.outlet.isActivated &&
                    r.canDeactivateChecks.push(new ba(a.outlet.component, o));
              } else
                o && ls(e, a, r),
                  r.canActivateChecks.push(new Vd(i)),
                  cs(n, null, s.component ? (a ? a.children : null) : t, i, r);
            })(o, s[o.value.outlet], t, i.concat([o.value]), r),
              delete s[o.value.outlet];
          }),
          ft(s, (o, a) => ls(o, t.getContext(a), r)),
          r
        );
      }
      function ls(n, e, t) {
        const i = Ii(n),
          r = n.value;
        ft(i, (s, o) => {
          ls(s, r.component ? (e ? e.children.getContext(o) : null) : e, t);
        }),
          t.canDeactivateChecks.push(
            new ba(
              r.component && e && e.outlet && e.outlet.isActivated
                ? e.outlet.component
                : null,
              r
            )
          );
      }
      class YL {}
      function kd(n) {
        return new pe((e) => e.error(n));
      }
      class XL {
        constructor(e, t, i, r, s, o) {
          (this.rootComponentType = e),
            (this.config = t),
            (this.urlTree = i),
            (this.url = r),
            (this.paramsInheritanceStrategy = s),
            (this.relativeLinkResolution = o);
        }
        recognize() {
          const e = ya(
              this.urlTree.root,
              [],
              [],
              this.config.filter((o) => void 0 === o.redirectTo),
              this.relativeLinkResolution
            ).segmentGroup,
            t = this.processSegmentGroup(this.config, e, J);
          if (null === t) return null;
          const i = new ma(
              [],
              Object.freeze({}),
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              {},
              J,
              this.rootComponentType,
              null,
              this.urlTree.root,
              -1,
              {}
            ),
            r = new yn(i, t),
            s = new _d(this.url, r);
          return this.inheritParamsAndData(s._root), s;
        }
        inheritParamsAndData(e) {
          const t = e.value,
            i = vd(t, this.paramsInheritanceStrategy);
          (t.params = Object.freeze(i.params)),
            (t.data = Object.freeze(i.data)),
            e.children.forEach((r) => this.inheritParamsAndData(r));
        }
        processSegmentGroup(e, t, i) {
          return 0 === t.segments.length && t.hasChildren()
            ? this.processChildren(e, t)
            : this.processSegment(e, t, t.segments, i);
        }
        processChildren(e, t) {
          const i = [];
          for (const s of Object.keys(t.children)) {
            const o = t.children[s],
              a = Ad(e, s),
              c = this.processSegmentGroup(a, o, s);
            if (null === c) return null;
            i.push(...c);
          }
          const r = Id(i);
          return (
            (function JL(n) {
              n.sort((e, t) =>
                e.value.outlet === J
                  ? -1
                  : t.value.outlet === J
                  ? 1
                  : e.value.outlet.localeCompare(t.value.outlet)
              );
            })(r),
            r
          );
        }
        processSegment(e, t, i, r) {
          for (const s of e) {
            const o = this.processSegmentAgainstRoute(s, t, i, r);
            if (null !== o) return o;
          }
          return Ld(t, i, r) ? [] : null;
        }
        processSegmentAgainstRoute(e, t, i, r) {
          if (e.redirectTo || !zd(e, t, i, r)) return null;
          let s,
            o = [],
            a = [];
          if ("**" === e.path) {
            const d = i.length > 0 ? id(i).parameters : {};
            s = new ma(
              i,
              d,
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              Pd(e),
              l1(e),
              e.component,
              e,
              Hd(t),
              Od(t) + i.length,
              Fd(e)
            );
          } else {
            const d = _a(t, e, i);
            if (!d.matched) return null;
            (o = d.consumedSegments),
              (a = i.slice(d.lastChild)),
              (s = new ma(
                o,
                d.parameters,
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                Pd(e),
                l1(e),
                e.component,
                e,
                Hd(t),
                Od(t) + o.length,
                Fd(e)
              ));
          }
          const c = (function eT(n) {
              return n.children
                ? n.children
                : n.loadChildren
                ? n._loadedConfig.routes
                : [];
            })(e),
            { segmentGroup: l, slicedSegments: u } = ya(
              t,
              o,
              a,
              c.filter((d) => void 0 === d.redirectTo),
              this.relativeLinkResolution
            );
          if (0 === u.length && l.hasChildren()) {
            const d = this.processChildren(c, l);
            return null === d ? null : [new yn(s, d)];
          }
          if (0 === c.length && 0 === u.length) return [new yn(s, [])];
          const f = l1(e) === r,
            h = this.processSegment(c, l, u, f ? J : r);
          return null === h ? null : [new yn(s, h)];
        }
      }
      function tT(n) {
        const e = n.value.routeConfig;
        return e && "" === e.path && void 0 === e.redirectTo;
      }
      function Id(n) {
        const e = [],
          t = new Set();
        for (const i of n) {
          if (!tT(i)) {
            e.push(i);
            continue;
          }
          const r = e.find((s) => i.value.routeConfig === s.value.routeConfig);
          void 0 !== r ? (r.children.push(...i.children), t.add(r)) : e.push(i);
        }
        for (const i of t) {
          const r = Id(i.children);
          e.push(new yn(i.value, r));
        }
        return e.filter((i) => !t.has(i));
      }
      function Hd(n) {
        let e = n;
        for (; e._sourceSegment; ) e = e._sourceSegment;
        return e;
      }
      function Od(n) {
        let e = n,
          t = e._segmentIndexShift ? e._segmentIndexShift : 0;
        for (; e._sourceSegment; )
          (e = e._sourceSegment),
            (t += e._segmentIndexShift ? e._segmentIndexShift : 0);
        return t - 1;
      }
      function Pd(n) {
        return n.data || {};
      }
      function Fd(n) {
        return n.resolve || {};
      }
      function j0(n) {
        return vn((e) => {
          const t = n(e);
          return t ? st(t).pipe(ae(() => e)) : G(e);
        });
      }
      class lT extends class cT {
        shouldDetach(e) {
          return !1;
        }
        store(e, t) {}
        shouldAttach(e) {
          return !1;
        }
        retrieve(e) {
          return null;
        }
        shouldReuseRoute(e, t) {
          return e.routeConfig === t.routeConfig;
        }
      } {}
      const U0 = new L("ROUTES");
      class Rd {
        constructor(e, t, i, r) {
          (this.injector = e),
            (this.compiler = t),
            (this.onLoadStartListener = i),
            (this.onLoadEndListener = r);
        }
        load(e, t) {
          if (t._loader$) return t._loader$;
          this.onLoadStartListener && this.onLoadStartListener(t);
          const r = this.loadModuleFactory(t.loadChildren).pipe(
            ae((s) => {
              this.onLoadEndListener && this.onLoadEndListener(t);
              const o = s.create(e);
              return new P0(
                nd(o.injector.get(U0, void 0, U.Self | U.Optional)).map(R0),
                o
              );
            }),
            K1((s) => {
              throw ((t._loader$ = void 0), s);
            })
          );
          return (
            (t._loader$ = new bz(r, () => new me()).pipe(Wh())), t._loader$
          );
        }
        loadModuleFactory(e) {
          return Q1(e()).pipe(
            Xe((t) =>
              t instanceof Yf ? G(t) : st(this.compiler.compileModuleAsync(t))
            )
          );
        }
      }
      class fT {
        shouldProcessUrl(e) {
          return !0;
        }
        extract(e) {
          return e;
        }
        merge(e, t) {
          return e;
        }
      }
      function hT(n) {
        throw n;
      }
      function dT(n, e, t) {
        return e.parse("/");
      }
      function Bd(n, e) {
        return G(null);
      }
      const pT = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        mT = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      let Gt = (() => {
        class n {
          constructor(t, i, r, s, o, a, c) {
            (this.rootComponentType = t),
              (this.urlSerializer = i),
              (this.rootContexts = r),
              (this.location = s),
              (this.config = c),
              (this.lastSuccessfulNavigation = null),
              (this.currentNavigation = null),
              (this.disposed = !1),
              (this.navigationId = 0),
              (this.currentPageId = 0),
              (this.isNgZoneEnabled = !1),
              (this.events = new me()),
              (this.errorHandler = hT),
              (this.malformedUriErrorHandler = dT),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.hooks = {
                beforePreactivation: Bd,
                afterPreactivation: Bd,
              }),
              (this.urlHandlingStrategy = new fT()),
              (this.routeReuseStrategy = new lT()),
              (this.onSameUrlNavigation = "ignore"),
              (this.paramsInheritanceStrategy = "emptyOnly"),
              (this.urlUpdateStrategy = "deferred"),
              (this.relativeLinkResolution = "corrected"),
              (this.canceledNavigationResolution = "replace"),
              (this.ngModule = o.get(dn)),
              (this.console = o.get(N9));
            const f = o.get(fe);
            (this.isNgZoneEnabled = f instanceof fe && fe.isInAngularZone()),
              this.resetConfig(c),
              (this.currentUrlTree = (function Bz() {
                return new v2(new te([], {}), {}, null);
              })()),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.configLoader = new Rd(
                o,
                a,
                (h) => this.triggerEvent(new Qh(h)),
                (h) => this.triggerEvent(new Xh(h))
              )),
              (this.routerState = gd(
                this.currentUrlTree,
                this.rootComponentType
              )),
              (this.transitions = new c1({
                id: 0,
                targetPageId: 0,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                extractedUrl: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                urlAfterRedirects: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                rawUrl: this.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: "imperative",
                restoredState: null,
                currentSnapshot: this.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: this.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              (this.navigations = this.setupNavigations(this.transitions)),
              this.processNavigations();
          }
          get browserPageId() {
            var t;
            return null === (t = this.location.getState()) || void 0 === t
              ? void 0
              : t.ɵrouterPageId;
          }
          setupNavigations(t) {
            const i = this.events;
            return t.pipe(
              x1((r) => 0 !== r.id),
              ae((r) =>
                Object.assign(Object.assign({}, r), {
                  extractedUrl: this.urlHandlingStrategy.extract(r.rawUrl),
                })
              ),
              vn((r) => {
                let s = !1,
                  o = !1;
                return G(r).pipe(
                  St((a) => {
                    this.currentNavigation = {
                      id: a.id,
                      initialUrl: a.currentRawUrl,
                      extractedUrl: a.extractedUrl,
                      trigger: a.source,
                      extras: a.extras,
                      previousNavigation: this.lastSuccessfulNavigation
                        ? Object.assign(
                            Object.assign({}, this.lastSuccessfulNavigation),
                            { previousNavigation: null }
                          )
                        : null,
                    };
                  }),
                  vn((a) => {
                    const c = this.browserUrlTree.toString(),
                      l =
                        !this.navigated ||
                        a.extractedUrl.toString() !== c ||
                        c !== this.currentUrlTree.toString();
                    if (
                      ("reload" === this.onSameUrlNavigation || l) &&
                      this.urlHandlingStrategy.shouldProcessUrl(a.rawUrl)
                    )
                      return (
                        Da(a.source) && (this.browserUrlTree = a.extractedUrl),
                        G(a).pipe(
                          vn((f) => {
                            const h = this.transitions.getValue();
                            return (
                              i.next(
                                new A0(
                                  f.id,
                                  this.serializeUrl(f.extractedUrl),
                                  f.source,
                                  f.restoredState
                                )
                              ),
                              h !== this.transitions.getValue()
                                ? sn
                                : Promise.resolve(f)
                            );
                          }),
                          (function HL(n, e, t, i) {
                            return vn((r) =>
                              (function VL(n, e, t, i, r) {
                                return new kL(n, e, t, i, r).apply();
                              })(n, e, t, r.extractedUrl, i).pipe(
                                ae((s) =>
                                  Object.assign(Object.assign({}, r), {
                                    urlAfterRedirects: s,
                                  })
                                )
                              )
                            );
                          })(
                            this.ngModule.injector,
                            this.configLoader,
                            this.urlSerializer,
                            this.config
                          ),
                          St((f) => {
                            this.currentNavigation = Object.assign(
                              Object.assign({}, this.currentNavigation),
                              { finalUrl: f.urlAfterRedirects }
                            );
                          }),
                          (function nT(n, e, t, i, r) {
                            return Xe((s) =>
                              (function QL(
                                n,
                                e,
                                t,
                                i,
                                r = "emptyOnly",
                                s = "legacy"
                              ) {
                                try {
                                  const o = new XL(
                                    n,
                                    e,
                                    t,
                                    i,
                                    r,
                                    s
                                  ).recognize();
                                  return null === o ? kd(new YL()) : G(o);
                                } catch (o) {
                                  return kd(o);
                                }
                              })(
                                n,
                                e,
                                s.urlAfterRedirects,
                                t(s.urlAfterRedirects),
                                i,
                                r
                              ).pipe(
                                ae((o) =>
                                  Object.assign(Object.assign({}, s), {
                                    targetSnapshot: o,
                                  })
                                )
                              )
                            );
                          })(
                            this.rootComponentType,
                            this.config,
                            (f) => this.serializeUrl(f),
                            this.paramsInheritanceStrategy,
                            this.relativeLinkResolution
                          ),
                          St((f) => {
                            if ("eager" === this.urlUpdateStrategy) {
                              if (!f.extras.skipLocationChange) {
                                const d = this.urlHandlingStrategy.merge(
                                  f.urlAfterRedirects,
                                  f.rawUrl
                                );
                                this.setBrowserUrl(d, f);
                              }
                              this.browserUrlTree = f.urlAfterRedirects;
                            }
                            const h = new xz(
                              f.id,
                              this.serializeUrl(f.extractedUrl),
                              this.serializeUrl(f.urlAfterRedirects),
                              f.targetSnapshot
                            );
                            i.next(h);
                          })
                        )
                      );
                    if (
                      l &&
                      this.rawUrlTree &&
                      this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)
                    ) {
                      const {
                          id: h,
                          extractedUrl: d,
                          source: p,
                          restoredState: m,
                          extras: g,
                        } = a,
                        y = new A0(h, this.serializeUrl(d), p, m);
                      i.next(y);
                      const v = gd(d, this.rootComponentType).snapshot;
                      return G(
                        Object.assign(Object.assign({}, a), {
                          targetSnapshot: v,
                          urlAfterRedirects: d,
                          extras: Object.assign(Object.assign({}, g), {
                            skipLocationChange: !1,
                            replaceUrl: !1,
                          }),
                        })
                      );
                    }
                    return (this.rawUrlTree = a.rawUrl), a.resolve(null), sn;
                  }),
                  j0((a) => {
                    const {
                      targetSnapshot: c,
                      id: l,
                      extractedUrl: u,
                      rawUrl: f,
                      extras: { skipLocationChange: h, replaceUrl: d },
                    } = a;
                    return this.hooks.beforePreactivation(c, {
                      navigationId: l,
                      appliedUrlTree: u,
                      rawUrlTree: f,
                      skipLocationChange: !!h,
                      replaceUrl: !!d,
                    });
                  }),
                  St((a) => {
                    const c = new zz(
                      a.id,
                      this.serializeUrl(a.extractedUrl),
                      this.serializeUrl(a.urlAfterRedirects),
                      a.targetSnapshot
                    );
                    this.triggerEvent(c);
                  }),
                  ae((a) =>
                    Object.assign(Object.assign({}, a), {
                      guards: OL(
                        a.targetSnapshot,
                        a.currentSnapshot,
                        this.rootContexts
                      ),
                    })
                  ),
                  (function jL(n, e) {
                    return Xe((t) => {
                      const {
                        targetSnapshot: i,
                        currentSnapshot: r,
                        guards: {
                          canActivateChecks: s,
                          canDeactivateChecks: o,
                        },
                      } = t;
                      return 0 === o.length && 0 === s.length
                        ? G(
                            Object.assign(Object.assign({}, t), {
                              guardsResult: !0,
                            })
                          )
                        : (function UL(n, e, t, i) {
                            return st(n).pipe(
                              Xe((r) =>
                                (function KL(n, e, t, i, r) {
                                  const s =
                                    e && e.routeConfig
                                      ? e.routeConfig.canDeactivate
                                      : null;
                                  return s && 0 !== s.length
                                    ? G(
                                        s.map((a) => {
                                          const c = wa(a, e, r);
                                          let l;
                                          if (
                                            (function bL(n) {
                                              return n && Rn(n.canDeactivate);
                                            })(c)
                                          )
                                            l = Q1(c.canDeactivate(n, e, t, i));
                                          else {
                                            if (!Rn(c))
                                              throw new Error(
                                                "Invalid CanDeactivate guard"
                                              );
                                            l = Q1(c(n, e, t, i));
                                          }
                                          return l.pipe(Vi());
                                        })
                                      ).pipe(ss())
                                    : G(!0);
                                })(r.component, r.route, t, e, i)
                              ),
                              Vi((r) => !0 !== r, !0)
                            );
                          })(o, i, r, n).pipe(
                            Xe((a) =>
                              a &&
                              (function _L(n) {
                                return "boolean" == typeof n;
                              })(a)
                                ? (function $L(n, e, t, i) {
                                    return st(e).pipe(
                                      Ni((r) =>
                                        D0(
                                          (function WL(n, e) {
                                            return (
                                              null !== n && e && e(new Vz(n)),
                                              G(!0)
                                            );
                                          })(r.route.parent, i),
                                          (function GL(n, e) {
                                            return (
                                              null !== n && e && e(new Iz(n)),
                                              G(!0)
                                            );
                                          })(r.route, i),
                                          (function ZL(n, e, t) {
                                            const i = e[e.length - 1],
                                              s = e
                                                .slice(0, e.length - 1)
                                                .reverse()
                                                .map((o) =>
                                                  (function PL(n) {
                                                    const e = n.routeConfig
                                                      ? n.routeConfig
                                                          .canActivateChild
                                                      : null;
                                                    return e && 0 !== e.length
                                                      ? { node: n, guards: e }
                                                      : null;
                                                  })(o)
                                                )
                                                .filter((o) => null !== o)
                                                .map((o) =>
                                                  E0(() =>
                                                    G(
                                                      o.guards.map((c) => {
                                                        const l = wa(
                                                          c,
                                                          o.node,
                                                          t
                                                        );
                                                        let u;
                                                        if (
                                                          (function ML(n) {
                                                            return (
                                                              n &&
                                                              Rn(
                                                                n.canActivateChild
                                                              )
                                                            );
                                                          })(l)
                                                        )
                                                          u = Q1(
                                                            l.canActivateChild(
                                                              i,
                                                              n
                                                            )
                                                          );
                                                        else {
                                                          if (!Rn(l))
                                                            throw new Error(
                                                              "Invalid CanActivateChild guard"
                                                            );
                                                          u = Q1(l(i, n));
                                                        }
                                                        return u.pipe(Vi());
                                                      })
                                                    ).pipe(ss())
                                                  )
                                                );
                                            return G(s).pipe(ss());
                                          })(n, r.path, t),
                                          (function qL(n, e, t) {
                                            const i = e.routeConfig
                                              ? e.routeConfig.canActivate
                                              : null;
                                            if (!i || 0 === i.length)
                                              return G(!0);
                                            const r = i.map((s) =>
                                              E0(() => {
                                                const o = wa(s, e, t);
                                                let a;
                                                if (
                                                  (function CL(n) {
                                                    return (
                                                      n && Rn(n.canActivate)
                                                    );
                                                  })(o)
                                                )
                                                  a = Q1(o.canActivate(e, n));
                                                else {
                                                  if (!Rn(o))
                                                    throw new Error(
                                                      "Invalid CanActivate guard"
                                                    );
                                                  a = Q1(o(e, n));
                                                }
                                                return a.pipe(Vi());
                                              })
                                            );
                                            return G(r).pipe(ss());
                                          })(n, r.route, t)
                                        )
                                      ),
                                      Vi((r) => !0 !== r, !0)
                                    );
                                  })(i, s, n, e)
                                : G(a)
                            ),
                            ae((a) =>
                              Object.assign(Object.assign({}, t), {
                                guardsResult: a,
                              })
                            )
                          );
                    });
                  })(this.ngModule.injector, (a) => this.triggerEvent(a)),
                  St((a) => {
                    if (y2(a.guardsResult)) {
                      const l = x0(
                        `Redirecting to "${this.serializeUrl(a.guardsResult)}"`
                      );
                      throw ((l.url = a.guardsResult), l);
                    }
                    const c = new Lz(
                      a.id,
                      this.serializeUrl(a.extractedUrl),
                      this.serializeUrl(a.urlAfterRedirects),
                      a.targetSnapshot,
                      !!a.guardsResult
                    );
                    this.triggerEvent(c);
                  }),
                  x1(
                    (a) =>
                      !!a.guardsResult ||
                      (this.restoreHistory(a),
                      this.cancelNavigationTransition(a, ""),
                      !1)
                  ),
                  j0((a) => {
                    if (a.guards.canActivateChecks.length)
                      return G(a).pipe(
                        St((c) => {
                          const l = new Tz(
                            c.id,
                            this.serializeUrl(c.extractedUrl),
                            this.serializeUrl(c.urlAfterRedirects),
                            c.targetSnapshot
                          );
                          this.triggerEvent(l);
                        }),
                        vn((c) => {
                          let l = !1;
                          return G(c).pipe(
                            (function iT(n, e) {
                              return Xe((t) => {
                                const {
                                  targetSnapshot: i,
                                  guards: { canActivateChecks: r },
                                } = t;
                                if (!r.length) return G(t);
                                let s = 0;
                                return st(r).pipe(
                                  Ni((o) =>
                                    (function rT(n, e, t, i) {
                                      return (function sT(n, e, t, i) {
                                        const r = Object.keys(n);
                                        if (0 === r.length) return G({});
                                        const s = {};
                                        return st(r).pipe(
                                          Xe((o) =>
                                            (function oT(n, e, t, i) {
                                              const r = wa(n, e, i);
                                              return Q1(
                                                r.resolve
                                                  ? r.resolve(e, t)
                                                  : r(e, t)
                                              );
                                            })(n[o], e, t, i).pipe(
                                              St((a) => {
                                                s[o] = a;
                                              })
                                            )
                                          ),
                                          S0(1),
                                          Xe(() =>
                                            Object.keys(s).length === r.length
                                              ? G(s)
                                              : sn
                                          )
                                        );
                                      })(n._resolve, n, e, i).pipe(
                                        ae(
                                          (s) => (
                                            (n._resolvedData = s),
                                            (n.data = Object.assign(
                                              Object.assign({}, n.data),
                                              vd(n, t).resolve
                                            )),
                                            null
                                          )
                                        )
                                      );
                                    })(o.route, i, n, e)
                                  ),
                                  St(() => s++),
                                  S0(1),
                                  Xe((o) => (s === r.length ? G(t) : sn))
                                );
                              });
                            })(
                              this.paramsInheritanceStrategy,
                              this.ngModule.injector
                            ),
                            St({
                              next: () => (l = !0),
                              complete: () => {
                                l ||
                                  (this.restoreHistory(c),
                                  this.cancelNavigationTransition(
                                    c,
                                    "At least one route resolver didn't emit any value."
                                  ));
                              },
                            })
                          );
                        }),
                        St((c) => {
                          const l = new Nz(
                            c.id,
                            this.serializeUrl(c.extractedUrl),
                            this.serializeUrl(c.urlAfterRedirects),
                            c.targetSnapshot
                          );
                          this.triggerEvent(l);
                        })
                      );
                  }),
                  j0((a) => {
                    const {
                      targetSnapshot: c,
                      id: l,
                      extractedUrl: u,
                      rawUrl: f,
                      extras: { skipLocationChange: h, replaceUrl: d },
                    } = a;
                    return this.hooks.afterPreactivation(c, {
                      navigationId: l,
                      appliedUrlTree: u,
                      rawUrlTree: f,
                      skipLocationChange: !!h,
                      replaceUrl: !!d,
                    });
                  }),
                  ae((a) => {
                    const c = (function sL(n, e, t) {
                      const i = ns(n, e._root, t ? t._root : void 0);
                      return new md(i, e);
                    })(
                      this.routeReuseStrategy,
                      a.targetSnapshot,
                      a.currentRouterState
                    );
                    return Object.assign(Object.assign({}, a), {
                      targetRouterState: c,
                    });
                  }),
                  St((a) => {
                    (this.currentUrlTree = a.urlAfterRedirects),
                      (this.rawUrlTree = this.urlHandlingStrategy.merge(
                        a.urlAfterRedirects,
                        a.rawUrl
                      )),
                      (this.routerState = a.targetRouterState),
                      "deferred" === this.urlUpdateStrategy &&
                        (a.extras.skipLocationChange ||
                          this.setBrowserUrl(this.rawUrlTree, a),
                        (this.browserUrlTree = a.urlAfterRedirects));
                  }),
                  ((n, e, t) =>
                    ae(
                      (i) => (
                        new gL(
                          e,
                          i.targetRouterState,
                          i.currentRouterState,
                          t
                        ).activate(n),
                        i
                      )
                    ))(this.rootContexts, this.routeReuseStrategy, (a) =>
                    this.triggerEvent(a)
                  ),
                  St({
                    next() {
                      s = !0;
                    },
                    complete() {
                      s = !0;
                    },
                  }),
                  (function Sz(n) {
                    return Oe((e, t) => {
                      try {
                        e.subscribe(t);
                      } finally {
                        t.add(n);
                      }
                    });
                  })(() => {
                    var a;
                    s ||
                      o ||
                      this.cancelNavigationTransition(
                        r,
                        `Navigation ID ${r.id} is not equal to the current navigation id ${this.navigationId}`
                      ),
                      (null === (a = this.currentNavigation) || void 0 === a
                        ? void 0
                        : a.id) === r.id && (this.currentNavigation = null);
                  }),
                  K1((a) => {
                    if (
                      ((o = !0),
                      (function Pz(n) {
                        return n && n[ed];
                      })(a))
                    ) {
                      const c = y2(a.url);
                      c || ((this.navigated = !0), this.restoreHistory(r, !0));
                      const l = new Yh(
                        r.id,
                        this.serializeUrl(r.extractedUrl),
                        a.message
                      );
                      i.next(l),
                        c
                          ? setTimeout(() => {
                              const u = this.urlHandlingStrategy.merge(
                                  a.url,
                                  this.rawUrlTree
                                ),
                                f = {
                                  skipLocationChange:
                                    r.extras.skipLocationChange,
                                  replaceUrl:
                                    "eager" === this.urlUpdateStrategy ||
                                    Da(r.source),
                                };
                              this.scheduleNavigation(
                                u,
                                "imperative",
                                null,
                                f,
                                {
                                  resolve: r.resolve,
                                  reject: r.reject,
                                  promise: r.promise,
                                }
                              );
                            }, 0)
                          : r.resolve(!1);
                    } else {
                      this.restoreHistory(r, !0);
                      const c = new Az(
                        r.id,
                        this.serializeUrl(r.extractedUrl),
                        a
                      );
                      i.next(c);
                      try {
                        r.resolve(this.errorHandler(a));
                      } catch (l) {
                        r.reject(l);
                      }
                    }
                    return sn;
                  })
                );
              })
            );
          }
          resetRootComponentType(t) {
            (this.rootComponentType = t),
              (this.routerState.root.component = this.rootComponentType);
          }
          setTransition(t) {
            this.transitions.next(
              Object.assign(Object.assign({}, this.transitions.value), t)
            );
          }
          initialNavigation() {
            this.setUpLocationChangeListener(),
              0 === this.navigationId &&
                this.navigateByUrl(this.location.path(!0), { replaceUrl: !0 });
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((t) => {
                const i = "popstate" === t.type ? "popstate" : "hashchange";
                "popstate" === i &&
                  setTimeout(() => {
                    var r;
                    const s = { replaceUrl: !0 },
                      o = (
                        null === (r = t.state) || void 0 === r
                          ? void 0
                          : r.navigationId
                      )
                        ? t.state
                        : null;
                    if (o) {
                      const c = Object.assign({}, o);
                      delete c.navigationId,
                        delete c.ɵrouterPageId,
                        0 !== Object.keys(c).length && (s.state = c);
                    }
                    const a = this.parseUrl(t.url);
                    this.scheduleNavigation(a, i, o, s);
                  }, 0);
              }));
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.currentNavigation;
          }
          triggerEvent(t) {
            this.events.next(t);
          }
          resetConfig(t) {
            Sd(t),
              (this.config = t.map(R0)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.transitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0);
          }
          createUrlTree(t, i = {}) {
            const {
                relativeTo: r,
                queryParams: s,
                fragment: o,
                queryParamsHandling: a,
                preserveFragment: c,
              } = i,
              l = r || this.routerState.root,
              u = c ? this.currentUrlTree.fragment : o;
            let f = null;
            switch (a) {
              case "merge":
                f = Object.assign(
                  Object.assign({}, this.currentUrlTree.queryParams),
                  s
                );
                break;
              case "preserve":
                f = this.currentUrlTree.queryParams;
                break;
              default:
                f = s || null;
            }
            return (
              null !== f && (f = this.removeEmptyProps(f)),
              (function cL(n, e, t, i, r) {
                if (0 === t.length) return I0(e.root, e.root, e, i, r);
                const s = (function lL(n) {
                  if ("string" == typeof n[0] && 1 === n.length && "/" === n[0])
                    return new Md(!0, 0, n);
                  let e = 0,
                    t = !1;
                  const i = n.reduce((r, s, o) => {
                    if ("object" == typeof s && null != s) {
                      if (s.outlets) {
                        const a = {};
                        return (
                          ft(s.outlets, (c, l) => {
                            a[l] = "string" == typeof c ? c.split("/") : c;
                          }),
                          [...r, { outlets: a }]
                        );
                      }
                      if (s.segmentPath) return [...r, s.segmentPath];
                    }
                    return "string" != typeof s
                      ? [...r, s]
                      : 0 === o
                      ? (s.split("/").forEach((a, c) => {
                          (0 == c && "." === a) ||
                            (0 == c && "" === a
                              ? (t = !0)
                              : ".." === a
                              ? e++
                              : "" != a && r.push(a));
                        }),
                        r)
                      : [...r, s];
                  }, []);
                  return new Md(t, e, i);
                })(t);
                if (s.toRoot()) return I0(e.root, new te([], {}), e, i, r);
                const o = (function uL(n, e, t) {
                    if (n.isAbsolute) return new H0(e.root, !0, 0);
                    if (-1 === t.snapshot._lastPathIndex) {
                      const s = t.snapshot._urlSegment;
                      return new H0(s, s === e.root, 0);
                    }
                    const i = ga(n.commands[0]) ? 0 : 1;
                    return (function fL(n, e, t) {
                      let i = n,
                        r = e,
                        s = t;
                      for (; s > r; ) {
                        if (((s -= r), (i = i.parent), !i))
                          throw new Error("Invalid number of '../'");
                        r = i.segments.length;
                      }
                      return new H0(i, !1, r - s);
                    })(
                      t.snapshot._urlSegment,
                      t.snapshot._lastPathIndex + i,
                      n.numberOfDoubleDots
                    );
                  })(s, e, n),
                  a = o.processChildren
                    ? va(o.segmentGroup, o.index, s.commands)
                    : bd(o.segmentGroup, o.index, s.commands);
                return I0(o.segmentGroup, a, e, i, r);
              })(l, this.currentUrlTree, t, f, null != u ? u : null)
            );
          }
          navigateByUrl(t, i = { skipLocationChange: !1 }) {
            const r = y2(t) ? t : this.parseUrl(t),
              s = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
            return this.scheduleNavigation(s, "imperative", null, i);
          }
          navigate(t, i = { skipLocationChange: !1 }) {
            return (
              (function gT(n) {
                for (let e = 0; e < n.length; e++) {
                  const t = n[e];
                  if (null == t)
                    throw new Error(
                      `The requested path contains ${t} segment at index ${e}`
                    );
                }
              })(t),
              this.navigateByUrl(this.createUrlTree(t, i), i)
            );
          }
          serializeUrl(t) {
            return this.urlSerializer.serialize(t);
          }
          parseUrl(t) {
            let i;
            try {
              i = this.urlSerializer.parse(t);
            } catch (r) {
              i = this.malformedUriErrorHandler(r, this.urlSerializer, t);
            }
            return i;
          }
          isActive(t, i) {
            let r;
            if (
              ((r =
                !0 === i
                  ? Object.assign({}, pT)
                  : !1 === i
                  ? Object.assign({}, mT)
                  : i),
              y2(t))
            )
              return sd(this.currentUrlTree, t, r);
            const s = this.parseUrl(t);
            return sd(this.currentUrlTree, s, r);
          }
          removeEmptyProps(t) {
            return Object.keys(t).reduce((i, r) => {
              const s = t[r];
              return null != s && (i[r] = s), i;
            }, {});
          }
          processNavigations() {
            this.navigations.subscribe(
              (t) => {
                (this.navigated = !0),
                  (this.lastSuccessfulId = t.id),
                  (this.currentPageId = t.targetPageId),
                  this.events.next(
                    new Jr(
                      t.id,
                      this.serializeUrl(t.extractedUrl),
                      this.serializeUrl(this.currentUrlTree)
                    )
                  ),
                  (this.lastSuccessfulNavigation = this.currentNavigation),
                  t.resolve(!0);
              },
              (t) => {
                this.console.warn(`Unhandled Navigation Error: ${t}`);
              }
            );
          }
          scheduleNavigation(t, i, r, s, o) {
            var a, c, l;
            if (this.disposed) return Promise.resolve(!1);
            const u = this.transitions.value,
              f = Da(i) && u && !Da(u.source),
              h = u.rawUrl.toString() === t.toString(),
              d =
                u.id ===
                (null === (a = this.currentNavigation) || void 0 === a
                  ? void 0
                  : a.id);
            if (f && h && d) return Promise.resolve(!0);
            let m, g, y;
            o
              ? ((m = o.resolve), (g = o.reject), (y = o.promise))
              : (y = new Promise((E, F) => {
                  (m = E), (g = F);
                }));
            const v = ++this.navigationId;
            let M;
            return (
              "computed" === this.canceledNavigationResolution
                ? (0 === this.currentPageId && (r = this.location.getState()),
                  (M =
                    r && r.ɵrouterPageId
                      ? r.ɵrouterPageId
                      : s.replaceUrl || s.skipLocationChange
                      ? null !== (c = this.browserPageId) && void 0 !== c
                        ? c
                        : 0
                      : (null !== (l = this.browserPageId) && void 0 !== l
                          ? l
                          : 0) + 1))
                : (M = 0),
              this.setTransition({
                id: v,
                targetPageId: M,
                source: i,
                restoredState: r,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.rawUrlTree,
                rawUrl: t,
                extras: s,
                resolve: m,
                reject: g,
                promise: y,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              y.catch((E) => Promise.reject(E))
            );
          }
          setBrowserUrl(t, i) {
            const r = this.urlSerializer.serialize(t),
              s = Object.assign(
                Object.assign({}, i.extras.state),
                this.generateNgRouterState(i.id, i.targetPageId)
              );
            this.location.isCurrentPathEqualTo(r) || i.extras.replaceUrl
              ? this.location.replaceState(r, "", s)
              : this.location.go(r, "", s);
          }
          restoreHistory(t, i = !1) {
            var r, s;
            if ("computed" === this.canceledNavigationResolution) {
              const o = this.currentPageId - t.targetPageId;
              ("popstate" !== t.source &&
                "eager" !== this.urlUpdateStrategy &&
                this.currentUrlTree !==
                  (null === (r = this.currentNavigation) || void 0 === r
                    ? void 0
                    : r.finalUrl)) ||
              0 === o
                ? this.currentUrlTree ===
                    (null === (s = this.currentNavigation) || void 0 === s
                      ? void 0
                      : s.finalUrl) &&
                  0 === o &&
                  (this.resetState(t),
                  (this.browserUrlTree = t.currentUrlTree),
                  this.resetUrlToCurrentUrlTree())
                : this.location.historyGo(o);
            } else
              "replace" === this.canceledNavigationResolution &&
                (i && this.resetState(t), this.resetUrlToCurrentUrlTree());
          }
          resetState(t) {
            (this.routerState = t.currentRouterState),
              (this.currentUrlTree = t.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                t.rawUrl
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId
              )
            );
          }
          cancelNavigationTransition(t, i) {
            const r = new Yh(t.id, this.serializeUrl(t.extractedUrl), i);
            this.triggerEvent(r), t.resolve(!1);
          }
          generateNgRouterState(t, i) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: t, ɵrouterPageId: i }
              : { navigationId: t };
          }
        }
        return (
          (n.ɵfac = function (t) {
            xo();
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function Da(n) {
        return "imperative" !== n;
      }
      let Ea = (() => {
        class n {
          constructor(t, i, r) {
            (this.router = t),
              (this.route = i),
              (this.locationStrategy = r),
              (this.commands = null),
              (this.href = null),
              (this.onChanges = new me()),
              (this.subscription = t.events.subscribe((s) => {
                s instanceof Jr && this.updateTargetUrlAndHref();
              }));
          }
          set routerLink(t) {
            this.commands = null != t ? (Array.isArray(t) ? t : [t]) : null;
          }
          ngOnChanges(t) {
            this.updateTargetUrlAndHref(), this.onChanges.next(this);
          }
          ngOnDestroy() {
            this.subscription.unsubscribe();
          }
          onClick(t, i, r, s, o) {
            if (
              0 !== t ||
              i ||
              r ||
              s ||
              o ||
              ("string" == typeof this.target && "_self" != this.target) ||
              null === this.urlTree
            )
              return !0;
            const a = {
              skipLocationChange: Oi(this.skipLocationChange),
              replaceUrl: Oi(this.replaceUrl),
              state: this.state,
            };
            return this.router.navigateByUrl(this.urlTree, a), !1;
          }
          updateTargetUrlAndHref() {
            this.href =
              null !== this.urlTree
                ? this.locationStrategy.prepareExternalUrl(
                    this.router.serializeUrl(this.urlTree)
                  )
                : null;
          }
          get urlTree() {
            return null === this.commands
              ? null
              : this.router.createUrlTree(this.commands, {
                  relativeTo:
                    void 0 !== this.relativeTo ? this.relativeTo : this.route,
                  queryParams: this.queryParams,
                  fragment: this.fragment,
                  queryParamsHandling: this.queryParamsHandling,
                  preserveFragment: Oi(this.preserveFragment),
                });
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(_(Gt), _(Hi), _(xi));
          }),
          (n.ɵdir = V({
            type: n,
            selectors: [
              ["a", "routerLink", ""],
              ["area", "routerLink", ""],
            ],
            hostVars: 2,
            hostBindings: function (t, i) {
              1 & t &&
                de("click", function (s) {
                  return i.onClick(
                    s.button,
                    s.ctrlKey,
                    s.shiftKey,
                    s.altKey,
                    s.metaKey
                  );
                }),
                2 & t && be("target", i.target)("href", i.href, a2);
            },
            inputs: {
              target: "target",
              queryParams: "queryParams",
              fragment: "fragment",
              queryParamsHandling: "queryParamsHandling",
              preserveFragment: "preserveFragment",
              skipLocationChange: "skipLocationChange",
              replaceUrl: "replaceUrl",
              state: "state",
              relativeTo: "relativeTo",
              routerLink: "routerLink",
            },
            features: [Je],
          })),
          n
        );
      })();
      function Oi(n) {
        return "" === n || !!n;
      }
      class jd {}
      class Ud {
        preload(e, t) {
          return G(null);
        }
      }
      let $d = (() => {
          class n {
            constructor(t, i, r, s) {
              (this.router = t),
                (this.injector = r),
                (this.preloadingStrategy = s),
                (this.loader = new Rd(
                  r,
                  i,
                  (c) => t.triggerEvent(new Qh(c)),
                  (c) => t.triggerEvent(new Xh(c))
                ));
            }
            setUpPreloading() {
              this.subscription = this.router.events
                .pipe(
                  x1((t) => t instanceof Jr),
                  Ni(() => this.preload())
                )
                .subscribe(() => {});
            }
            preload() {
              const t = this.injector.get(dn);
              return this.processRoutes(t, this.router.config);
            }
            ngOnDestroy() {
              this.subscription && this.subscription.unsubscribe();
            }
            processRoutes(t, i) {
              const r = [];
              for (const s of i)
                if (s.loadChildren && !s.canLoad && s._loadedConfig) {
                  const o = s._loadedConfig;
                  r.push(this.processRoutes(o.module, o.routes));
                } else
                  s.loadChildren && !s.canLoad
                    ? r.push(this.preloadConfig(t, s))
                    : s.children && r.push(this.processRoutes(t, s.children));
              return st(r).pipe(
                er(),
                ae((s) => {})
              );
            }
            preloadConfig(t, i) {
              return this.preloadingStrategy.preload(i, () =>
                (i._loadedConfig
                  ? G(i._loadedConfig)
                  : this.loader.load(t.injector, i)
                ).pipe(
                  Xe(
                    (s) => (
                      (i._loadedConfig = s),
                      this.processRoutes(s.module, s.routes)
                    )
                  )
                )
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(Gt), C($o), C(nt), C(jd));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        G0 = (() => {
          class n {
            constructor(t, i, r = {}) {
              (this.router = t),
                (this.viewportScroller = i),
                (this.options = r),
                (this.lastId = 0),
                (this.lastSource = "imperative"),
                (this.restoredId = 0),
                (this.store = {}),
                (r.scrollPositionRestoration =
                  r.scrollPositionRestoration || "disabled"),
                (r.anchorScrolling = r.anchorScrolling || "disabled");
            }
            init() {
              "disabled" !== this.options.scrollPositionRestoration &&
                this.viewportScroller.setHistoryScrollRestoration("manual"),
                (this.routerEventsSubscription = this.createScrollEvents()),
                (this.scrollEventsSubscription = this.consumeScrollEvents());
            }
            createScrollEvents() {
              return this.router.events.subscribe((t) => {
                t instanceof A0
                  ? ((this.store[this.lastId] =
                      this.viewportScroller.getScrollPosition()),
                    (this.lastSource = t.navigationTrigger),
                    (this.restoredId = t.restoredState
                      ? t.restoredState.navigationId
                      : 0))
                  : t instanceof Jr &&
                    ((this.lastId = t.id),
                    this.scheduleScrollEvent(
                      t,
                      this.router.parseUrl(t.urlAfterRedirects).fragment
                    ));
              });
            }
            consumeScrollEvents() {
              return this.router.events.subscribe((t) => {
                t instanceof Jh &&
                  (t.position
                    ? "top" === this.options.scrollPositionRestoration
                      ? this.viewportScroller.scrollToPosition([0, 0])
                      : "enabled" === this.options.scrollPositionRestoration &&
                        this.viewportScroller.scrollToPosition(t.position)
                    : t.anchor && "enabled" === this.options.anchorScrolling
                    ? this.viewportScroller.scrollToAnchor(t.anchor)
                    : "disabled" !== this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition([0, 0]));
              });
            }
            scheduleScrollEvent(t, i) {
              this.router.triggerEvent(
                new Jh(
                  t,
                  "popstate" === this.lastSource
                    ? this.store[this.restoredId]
                    : null,
                  i
                )
              );
            }
            ngOnDestroy() {
              this.routerEventsSubscription &&
                this.routerEventsSubscription.unsubscribe(),
                this.scrollEventsSubscription &&
                  this.scrollEventsSubscription.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (t) {
              xo();
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      const C2 = new L("ROUTER_CONFIGURATION"),
        Gd = new L("ROUTER_FORROOT_GUARD"),
        CT = [
          qo,
          { provide: ld, useClass: ud },
          {
            provide: Gt,
            useFactory: function ET(n, e, t, i, r, s, o = {}, a, c) {
              const l = new Gt(null, n, e, t, i, r, nd(s));
              return (
                a && (l.urlHandlingStrategy = a),
                c && (l.routeReuseStrategy = c),
                (function ST(n, e) {
                  n.errorHandler && (e.errorHandler = n.errorHandler),
                    n.malformedUriErrorHandler &&
                      (e.malformedUriErrorHandler = n.malformedUriErrorHandler),
                    n.onSameUrlNavigation &&
                      (e.onSameUrlNavigation = n.onSameUrlNavigation),
                    n.paramsInheritanceStrategy &&
                      (e.paramsInheritanceStrategy =
                        n.paramsInheritanceStrategy),
                    n.relativeLinkResolution &&
                      (e.relativeLinkResolution = n.relativeLinkResolution),
                    n.urlUpdateStrategy &&
                      (e.urlUpdateStrategy = n.urlUpdateStrategy),
                    n.canceledNavigationResolution &&
                      (e.canceledNavigationResolution =
                        n.canceledNavigationResolution);
                })(o, l),
                o.enableTracing &&
                  l.events.subscribe((u) => {
                    var f, h;
                    null === (f = console.group) ||
                      void 0 === f ||
                      f.call(console, `Router Event: ${u.constructor.name}`),
                      console.log(u.toString()),
                      console.log(u),
                      null === (h = console.groupEnd) ||
                        void 0 === h ||
                        h.call(console);
                  }),
                l
              );
            },
            deps: [
              ld,
              os,
              qo,
              nt,
              $o,
              U0,
              C2,
              [class uT {}, new I1()],
              [class aT {}, new I1()],
            ],
          },
          os,
          {
            provide: Hi,
            useFactory: function AT(n) {
              return n.routerState.root;
            },
            deps: [Gt],
          },
          $d,
          Ud,
          class yT {
            preload(e, t) {
              return t().pipe(K1(() => G(null)));
            }
          },
          { provide: C2, useValue: { enableTracing: !1 } },
        ];
      function MT() {
        return new P9("Router", Gt);
      }
      let W0 = (() => {
        class n {
          constructor(t, i) {}
          static forRoot(t, i) {
            return {
              ngModule: n,
              providers: [
                CT,
                Wd(t),
                {
                  provide: Gd,
                  useFactory: DT,
                  deps: [[Gt, new I1(), new Y2()]],
                },
                { provide: C2, useValue: i || {} },
                {
                  provide: xi,
                  useFactory: wT,
                  deps: [m2, [new vr(r0), new I1()], C2],
                },
                { provide: G0, useFactory: bT, deps: [Gt, zx, C2] },
                {
                  provide: jd,
                  useExisting:
                    i && i.preloadingStrategy ? i.preloadingStrategy : Ud,
                },
                { provide: P9, multi: !0, useFactory: MT },
                [
                  q0,
                  { provide: Uo, multi: !0, useFactory: xT, deps: [q0] },
                  { provide: qd, useFactory: zT, deps: [q0] },
                  { provide: T9, multi: !0, useExisting: qd },
                ],
              ],
            };
          }
          static forChild(t) {
            return { ngModule: n, providers: [Wd(t)] };
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(Gd, 8), C(Gt, 8));
          }),
          (n.ɵmod = Me({ type: n })),
          (n.ɵinj = ve({})),
          n
        );
      })();
      function bT(n, e, t) {
        return t.scrollOffset && e.setOffset(t.scrollOffset), new G0(n, e, t);
      }
      function wT(n, e, t = {}) {
        return t.useHash ? new mA(n, e) : new oh(n, e);
      }
      function DT(n) {
        return "guarded";
      }
      function Wd(n) {
        return [
          { provide: Ky, multi: !0, useValue: n },
          { provide: U0, multi: !0, useValue: n },
        ];
      }
      let q0 = (() => {
        class n {
          constructor(t) {
            (this.injector = t),
              (this.initNavigation = !1),
              (this.destroyed = !1),
              (this.resultOfPreactivationDone = new me());
          }
          appInitializer() {
            return this.injector.get(hA, Promise.resolve(null)).then(() => {
              if (this.destroyed) return Promise.resolve(!0);
              let i = null;
              const r = new Promise((a) => (i = a)),
                s = this.injector.get(Gt),
                o = this.injector.get(C2);
              return (
                "disabled" === o.initialNavigation
                  ? (s.setUpLocationChangeListener(), i(!0))
                  : "enabled" === o.initialNavigation ||
                    "enabledBlocking" === o.initialNavigation
                  ? ((s.hooks.afterPreactivation = () =>
                      this.initNavigation
                        ? G(null)
                        : ((this.initNavigation = !0),
                          i(!0),
                          this.resultOfPreactivationDone)),
                    s.initialNavigation())
                  : i(!0),
                r
              );
            });
          }
          bootstrapListener(t) {
            const i = this.injector.get(C2),
              r = this.injector.get($d),
              s = this.injector.get(G0),
              o = this.injector.get(Gt),
              a = this.injector.get(Si);
            t === a.components[0] &&
              (("enabledNonBlocking" === i.initialNavigation ||
                void 0 === i.initialNavigation) &&
                o.initialNavigation(),
              r.setUpPreloading(),
              s.init(),
              o.resetRootComponentType(a.componentTypes[0]),
              this.resultOfPreactivationDone.next(null),
              this.resultOfPreactivationDone.complete());
          }
          ngOnDestroy() {
            this.destroyed = !0;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(nt));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function xT(n) {
        return n.appInitializer.bind(n);
      }
      function zT(n) {
        return n.bootstrapListener.bind(n);
      }
      const qd = new L("Router Initializer"),
        TT = [];
      let NT = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = Me({ type: n })),
          (n.ɵinj = ve({ imports: [[W0.forRoot(TT)], W0] })),
          n
        );
      })();
      class Zd {}
      class Kd {}
      class Cn {
        constructor(e) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            e
              ? (this.lazyInit =
                  "string" == typeof e
                    ? () => {
                        (this.headers = new Map()),
                          e.split("\n").forEach((t) => {
                            const i = t.indexOf(":");
                            if (i > 0) {
                              const r = t.slice(0, i),
                                s = r.toLowerCase(),
                                o = t.slice(i + 1).trim();
                              this.maybeSetNormalizedName(r, s),
                                this.headers.has(s)
                                  ? this.headers.get(s).push(o)
                                  : this.headers.set(s, [o]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(e).forEach((t) => {
                            let i = e[t];
                            const r = t.toLowerCase();
                            "string" == typeof i && (i = [i]),
                              i.length > 0 &&
                                (this.headers.set(r, i),
                                this.maybeSetNormalizedName(t, r));
                          });
                      })
              : (this.headers = new Map());
        }
        has(e) {
          return this.init(), this.headers.has(e.toLowerCase());
        }
        get(e) {
          this.init();
          const t = this.headers.get(e.toLowerCase());
          return t && t.length > 0 ? t[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(e) {
          return this.init(), this.headers.get(e.toLowerCase()) || null;
        }
        append(e, t) {
          return this.clone({ name: e, value: t, op: "a" });
        }
        set(e, t) {
          return this.clone({ name: e, value: t, op: "s" });
        }
        delete(e, t) {
          return this.clone({ name: e, value: t, op: "d" });
        }
        maybeSetNormalizedName(e, t) {
          this.normalizedNames.has(t) || this.normalizedNames.set(t, e);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof Cn
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((e) => this.applyUpdate(e)),
              (this.lazyUpdate = null)));
        }
        copyFrom(e) {
          e.init(),
            Array.from(e.headers.keys()).forEach((t) => {
              this.headers.set(t, e.headers.get(t)),
                this.normalizedNames.set(t, e.normalizedNames.get(t));
            });
        }
        clone(e) {
          const t = new Cn();
          return (
            (t.lazyInit =
              this.lazyInit && this.lazyInit instanceof Cn
                ? this.lazyInit
                : this),
            (t.lazyUpdate = (this.lazyUpdate || []).concat([e])),
            t
          );
        }
        applyUpdate(e) {
          const t = e.name.toLowerCase();
          switch (e.op) {
            case "a":
            case "s":
              let i = e.value;
              if (("string" == typeof i && (i = [i]), 0 === i.length)) return;
              this.maybeSetNormalizedName(e.name, t);
              const r = ("a" === e.op ? this.headers.get(t) : void 0) || [];
              r.push(...i), this.headers.set(t, r);
              break;
            case "d":
              const s = e.value;
              if (s) {
                let o = this.headers.get(t);
                if (!o) return;
                (o = o.filter((a) => -1 === s.indexOf(a))),
                  0 === o.length
                    ? (this.headers.delete(t), this.normalizedNames.delete(t))
                    : this.headers.set(t, o);
              } else this.headers.delete(t), this.normalizedNames.delete(t);
          }
        }
        forEach(e) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((t) =>
              e(this.normalizedNames.get(t), this.headers.get(t))
            );
        }
      }
      class kT {
        encodeKey(e) {
          return Yd(e);
        }
        encodeValue(e) {
          return Yd(e);
        }
        decodeKey(e) {
          return decodeURIComponent(e);
        }
        decodeValue(e) {
          return decodeURIComponent(e);
        }
      }
      const HT = /%(\d[a-f0-9])/gi,
        OT = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "2B": "+",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function Yd(n) {
        return encodeURIComponent(n).replace(HT, (e, t) => {
          var i;
          return null !== (i = OT[t]) && void 0 !== i ? i : e;
        });
      }
      function Qd(n) {
        return `${n}`;
      }
      class Bn {
        constructor(e = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = e.encoder || new kT()),
            e.fromString)
          ) {
            if (e.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function IT(n, e) {
              const t = new Map();
              return (
                n.length > 0 &&
                  n
                    .replace(/^\?/, "")
                    .split("&")
                    .forEach((r) => {
                      const s = r.indexOf("="),
                        [o, a] =
                          -1 == s
                            ? [e.decodeKey(r), ""]
                            : [
                                e.decodeKey(r.slice(0, s)),
                                e.decodeValue(r.slice(s + 1)),
                              ],
                        c = t.get(o) || [];
                      c.push(a), t.set(o, c);
                    }),
                t
              );
            })(e.fromString, this.encoder);
          } else
            e.fromObject
              ? ((this.map = new Map()),
                Object.keys(e.fromObject).forEach((t) => {
                  const i = e.fromObject[t];
                  this.map.set(t, Array.isArray(i) ? i : [i]);
                }))
              : (this.map = null);
        }
        has(e) {
          return this.init(), this.map.has(e);
        }
        get(e) {
          this.init();
          const t = this.map.get(e);
          return t ? t[0] : null;
        }
        getAll(e) {
          return this.init(), this.map.get(e) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(e, t) {
          return this.clone({ param: e, value: t, op: "a" });
        }
        appendAll(e) {
          const t = [];
          return (
            Object.keys(e).forEach((i) => {
              const r = e[i];
              Array.isArray(r)
                ? r.forEach((s) => {
                    t.push({ param: i, value: s, op: "a" });
                  })
                : t.push({ param: i, value: r, op: "a" });
            }),
            this.clone(t)
          );
        }
        set(e, t) {
          return this.clone({ param: e, value: t, op: "s" });
        }
        delete(e, t) {
          return this.clone({ param: e, value: t, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((e) => {
                const t = this.encoder.encodeKey(e);
                return this.map
                  .get(e)
                  .map((i) => t + "=" + this.encoder.encodeValue(i))
                  .join("&");
              })
              .filter((e) => "" !== e)
              .join("&")
          );
        }
        clone(e) {
          const t = new Bn({ encoder: this.encoder });
          return (
            (t.cloneFrom = this.cloneFrom || this),
            (t.updates = (this.updates || []).concat(e)),
            t
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((e) => this.map.set(e, this.cloneFrom.map.get(e))),
              this.updates.forEach((e) => {
                switch (e.op) {
                  case "a":
                  case "s":
                    const t =
                      ("a" === e.op ? this.map.get(e.param) : void 0) || [];
                    t.push(Qd(e.value)), this.map.set(e.param, t);
                    break;
                  case "d":
                    if (void 0 === e.value) {
                      this.map.delete(e.param);
                      break;
                    }
                    {
                      let i = this.map.get(e.param) || [];
                      const r = i.indexOf(Qd(e.value));
                      -1 !== r && i.splice(r, 1),
                        i.length > 0
                          ? this.map.set(e.param, i)
                          : this.map.delete(e.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class PT {
        constructor() {
          this.map = new Map();
        }
        set(e, t) {
          return this.map.set(e, t), this;
        }
        get(e) {
          return (
            this.map.has(e) || this.map.set(e, e.defaultValue()),
            this.map.get(e)
          );
        }
        delete(e) {
          return this.map.delete(e), this;
        }
        has(e) {
          return this.map.has(e);
        }
        keys() {
          return this.map.keys();
        }
      }
      function Xd(n) {
        return "undefined" != typeof ArrayBuffer && n instanceof ArrayBuffer;
      }
      function Jd(n) {
        return "undefined" != typeof Blob && n instanceof Blob;
      }
      function ep(n) {
        return "undefined" != typeof FormData && n instanceof FormData;
      }
      class us {
        constructor(e, t, i, r) {
          let s;
          if (
            ((this.url = t),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = e.toUpperCase()),
            (function FT(n) {
              switch (n) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || r
              ? ((this.body = void 0 !== i ? i : null), (s = r))
              : (s = i),
            s &&
              ((this.reportProgress = !!s.reportProgress),
              (this.withCredentials = !!s.withCredentials),
              s.responseType && (this.responseType = s.responseType),
              s.headers && (this.headers = s.headers),
              s.context && (this.context = s.context),
              s.params && (this.params = s.params)),
            this.headers || (this.headers = new Cn()),
            this.context || (this.context = new PT()),
            this.params)
          ) {
            const o = this.params.toString();
            if (0 === o.length) this.urlWithParams = t;
            else {
              const a = t.indexOf("?");
              this.urlWithParams =
                t + (-1 === a ? "?" : a < t.length - 1 ? "&" : "") + o;
            }
          } else (this.params = new Bn()), (this.urlWithParams = t);
        }
        serializeBody() {
          return null === this.body
            ? null
            : Xd(this.body) ||
              Jd(this.body) ||
              ep(this.body) ||
              (function RT(n) {
                return (
                  "undefined" != typeof URLSearchParams &&
                  n instanceof URLSearchParams
                );
              })(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof Bn
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || ep(this.body)
            ? null
            : Jd(this.body)
            ? this.body.type || null
            : Xd(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof Bn
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(e = {}) {
          var t;
          const i = e.method || this.method,
            r = e.url || this.url,
            s = e.responseType || this.responseType,
            o = void 0 !== e.body ? e.body : this.body,
            a =
              void 0 !== e.withCredentials
                ? e.withCredentials
                : this.withCredentials,
            c =
              void 0 !== e.reportProgress
                ? e.reportProgress
                : this.reportProgress;
          let l = e.headers || this.headers,
            u = e.params || this.params;
          const f = null !== (t = e.context) && void 0 !== t ? t : this.context;
          return (
            void 0 !== e.setHeaders &&
              (l = Object.keys(e.setHeaders).reduce(
                (h, d) => h.set(d, e.setHeaders[d]),
                l
              )),
            e.setParams &&
              (u = Object.keys(e.setParams).reduce(
                (h, d) => h.set(d, e.setParams[d]),
                u
              )),
            new us(i, r, o, {
              params: u,
              headers: l,
              context: f,
              reportProgress: c,
              responseType: s,
              withCredentials: a,
            })
          );
        }
      }
      var Ge = (() => (
        ((Ge = Ge || {})[(Ge.Sent = 0)] = "Sent"),
        (Ge[(Ge.UploadProgress = 1)] = "UploadProgress"),
        (Ge[(Ge.ResponseHeader = 2)] = "ResponseHeader"),
        (Ge[(Ge.DownloadProgress = 3)] = "DownloadProgress"),
        (Ge[(Ge.Response = 4)] = "Response"),
        (Ge[(Ge.User = 5)] = "User"),
        Ge
      ))();
      class Z0 {
        constructor(e, t = 200, i = "OK") {
          (this.headers = e.headers || new Cn()),
            (this.status = void 0 !== e.status ? e.status : t),
            (this.statusText = e.statusText || i),
            (this.url = e.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class K0 extends Z0 {
        constructor(e = {}) {
          super(e), (this.type = Ge.ResponseHeader);
        }
        clone(e = {}) {
          return new K0({
            headers: e.headers || this.headers,
            status: void 0 !== e.status ? e.status : this.status,
            statusText: e.statusText || this.statusText,
            url: e.url || this.url || void 0,
          });
        }
      }
      class Sa extends Z0 {
        constructor(e = {}) {
          super(e),
            (this.type = Ge.Response),
            (this.body = void 0 !== e.body ? e.body : null);
        }
        clone(e = {}) {
          return new Sa({
            body: void 0 !== e.body ? e.body : this.body,
            headers: e.headers || this.headers,
            status: void 0 !== e.status ? e.status : this.status,
            statusText: e.statusText || this.statusText,
            url: e.url || this.url || void 0,
          });
        }
      }
      class tp extends Z0 {
        constructor(e) {
          super(e, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${e.url || "(unknown url)"}`
                : `Http failure response for ${e.url || "(unknown url)"}: ${
                    e.status
                  } ${e.statusText}`),
            (this.error = e.error || null);
        }
      }
      function Y0(n, e) {
        return {
          body: e,
          headers: n.headers,
          context: n.context,
          observe: n.observe,
          params: n.params,
          reportProgress: n.reportProgress,
          responseType: n.responseType,
          withCredentials: n.withCredentials,
        };
      }
      let np = (() => {
        class n {
          constructor(t) {
            this.handler = t;
          }
          request(t, i, r = {}) {
            let s;
            if (t instanceof us) s = t;
            else {
              let c, l;
              (c = r.headers instanceof Cn ? r.headers : new Cn(r.headers)),
                r.params &&
                  (l =
                    r.params instanceof Bn
                      ? r.params
                      : new Bn({ fromObject: r.params })),
                (s = new us(t, i, void 0 !== r.body ? r.body : null, {
                  headers: c,
                  context: r.context,
                  params: l,
                  reportProgress: r.reportProgress,
                  responseType: r.responseType || "json",
                  withCredentials: r.withCredentials,
                }));
            }
            const o = G(s).pipe(Ni((c) => this.handler.handle(c)));
            if (t instanceof us || "events" === r.observe) return o;
            const a = o.pipe(x1((c) => c instanceof Sa));
            switch (r.observe || "body") {
              case "body":
                switch (s.responseType) {
                  case "arraybuffer":
                    return a.pipe(
                      ae((c) => {
                        if (null !== c.body && !(c.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return c.body;
                      })
                    );
                  case "blob":
                    return a.pipe(
                      ae((c) => {
                        if (null !== c.body && !(c.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return c.body;
                      })
                    );
                  case "text":
                    return a.pipe(
                      ae((c) => {
                        if (null !== c.body && "string" != typeof c.body)
                          throw new Error("Response is not a string.");
                        return c.body;
                      })
                    );
                  default:
                    return a.pipe(ae((c) => c.body));
                }
              case "response":
                return a;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${r.observe}}`
                );
            }
          }
          delete(t, i = {}) {
            return this.request("DELETE", t, i);
          }
          get(t, i = {}) {
            return this.request("GET", t, i);
          }
          head(t, i = {}) {
            return this.request("HEAD", t, i);
          }
          jsonp(t, i) {
            return this.request("JSONP", t, {
              params: new Bn().append(i, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(t, i = {}) {
            return this.request("OPTIONS", t, i);
          }
          patch(t, i, r = {}) {
            return this.request("PATCH", t, Y0(r, i));
          }
          post(t, i, r = {}) {
            return this.request("POST", t, Y0(r, i));
          }
          put(t, i, r = {}) {
            return this.request("PUT", t, Y0(r, i));
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(Zd));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class ip {
        constructor(e, t) {
          (this.next = e), (this.interceptor = t);
        }
        handle(e) {
          return this.interceptor.intercept(e, this.next);
        }
      }
      const Q0 = new L("HTTP_INTERCEPTORS");
      let BT = (() => {
        class n {
          intercept(t, i) {
            return i.handle(t);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const jT = /^\)\]\}',?\n/;
      let rp = (() => {
        class n {
          constructor(t) {
            this.xhrFactory = t;
          }
          handle(t) {
            if ("JSONP" === t.method)
              throw new Error(
                "Attempted to construct Jsonp request without HttpClientJsonpModule installed."
              );
            return new pe((i) => {
              const r = this.xhrFactory.build();
              if (
                (r.open(t.method, t.urlWithParams),
                t.withCredentials && (r.withCredentials = !0),
                t.headers.forEach((d, p) => r.setRequestHeader(d, p.join(","))),
                t.headers.has("Accept") ||
                  r.setRequestHeader(
                    "Accept",
                    "application/json, text/plain, */*"
                  ),
                !t.headers.has("Content-Type"))
              ) {
                const d = t.detectContentTypeHeader();
                null !== d && r.setRequestHeader("Content-Type", d);
              }
              if (t.responseType) {
                const d = t.responseType.toLowerCase();
                r.responseType = "json" !== d ? d : "text";
              }
              const s = t.serializeBody();
              let o = null;
              const a = () => {
                  if (null !== o) return o;
                  const d = 1223 === r.status ? 204 : r.status,
                    p = r.statusText || "OK",
                    m = new Cn(r.getAllResponseHeaders()),
                    g =
                      (function UT(n) {
                        return "responseURL" in n && n.responseURL
                          ? n.responseURL
                          : /^X-Request-URL:/m.test(n.getAllResponseHeaders())
                          ? n.getResponseHeader("X-Request-URL")
                          : null;
                      })(r) || t.url;
                  return (
                    (o = new K0({
                      headers: m,
                      status: d,
                      statusText: p,
                      url: g,
                    })),
                    o
                  );
                },
                c = () => {
                  let { headers: d, status: p, statusText: m, url: g } = a(),
                    y = null;
                  204 !== p &&
                    (y = void 0 === r.response ? r.responseText : r.response),
                    0 === p && (p = y ? 200 : 0);
                  let v = p >= 200 && p < 300;
                  if ("json" === t.responseType && "string" == typeof y) {
                    const M = y;
                    y = y.replace(jT, "");
                    try {
                      y = "" !== y ? JSON.parse(y) : null;
                    } catch (E) {
                      (y = M), v && ((v = !1), (y = { error: E, text: y }));
                    }
                  }
                  v
                    ? (i.next(
                        new Sa({
                          body: y,
                          headers: d,
                          status: p,
                          statusText: m,
                          url: g || void 0,
                        })
                      ),
                      i.complete())
                    : i.error(
                        new tp({
                          error: y,
                          headers: d,
                          status: p,
                          statusText: m,
                          url: g || void 0,
                        })
                      );
                },
                l = (d) => {
                  const { url: p } = a(),
                    m = new tp({
                      error: d,
                      status: r.status || 0,
                      statusText: r.statusText || "Unknown Error",
                      url: p || void 0,
                    });
                  i.error(m);
                };
              let u = !1;
              const f = (d) => {
                  u || (i.next(a()), (u = !0));
                  let p = { type: Ge.DownloadProgress, loaded: d.loaded };
                  d.lengthComputable && (p.total = d.total),
                    "text" === t.responseType &&
                      !!r.responseText &&
                      (p.partialText = r.responseText),
                    i.next(p);
                },
                h = (d) => {
                  let p = { type: Ge.UploadProgress, loaded: d.loaded };
                  d.lengthComputable && (p.total = d.total), i.next(p);
                };
              return (
                r.addEventListener("load", c),
                r.addEventListener("error", l),
                r.addEventListener("timeout", l),
                r.addEventListener("abort", l),
                t.reportProgress &&
                  (r.addEventListener("progress", f),
                  null !== s &&
                    r.upload &&
                    r.upload.addEventListener("progress", h)),
                r.send(s),
                i.next({ type: Ge.Sent }),
                () => {
                  r.removeEventListener("error", l),
                    r.removeEventListener("abort", l),
                    r.removeEventListener("load", c),
                    r.removeEventListener("timeout", l),
                    t.reportProgress &&
                      (r.removeEventListener("progress", f),
                      null !== s &&
                        r.upload &&
                        r.upload.removeEventListener("progress", h)),
                    r.readyState !== r.DONE && r.abort();
                }
              );
            });
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(Ah));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const X0 = new L("XSRF_COOKIE_NAME"),
        J0 = new L("XSRF_HEADER_NAME");
      class sp {}
      let $T = (() => {
          class n {
            constructor(t, i, r) {
              (this.doc = t),
                (this.platform = i),
                (this.cookieName = r),
                (this.lastCookieString = ""),
                (this.lastToken = null),
                (this.parseCount = 0);
            }
            getToken() {
              if ("server" === this.platform) return null;
              const t = this.doc.cookie || "";
              return (
                t !== this.lastCookieString &&
                  (this.parseCount++,
                  (this.lastToken = gh(t, this.cookieName)),
                  (this.lastCookieString = t)),
                this.lastToken
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(he), C(Wr), C(X0));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        ec = (() => {
          class n {
            constructor(t, i) {
              (this.tokenService = t), (this.headerName = i);
            }
            intercept(t, i) {
              const r = t.url.toLowerCase();
              if (
                "GET" === t.method ||
                "HEAD" === t.method ||
                r.startsWith("http://") ||
                r.startsWith("https://")
              )
                return i.handle(t);
              const s = this.tokenService.getToken();
              return (
                null !== s &&
                  !t.headers.has(this.headerName) &&
                  (t = t.clone({ headers: t.headers.set(this.headerName, s) })),
                i.handle(t)
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(sp), C(J0));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        GT = (() => {
          class n {
            constructor(t, i) {
              (this.backend = t), (this.injector = i), (this.chain = null);
            }
            handle(t) {
              if (null === this.chain) {
                const i = this.injector.get(Q0, []);
                this.chain = i.reduceRight(
                  (r, s) => new ip(r, s),
                  this.backend
                );
              }
              return this.chain.handle(t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(Kd), C(nt));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        WT = (() => {
          class n {
            static disable() {
              return {
                ngModule: n,
                providers: [{ provide: ec, useClass: BT }],
              };
            }
            static withOptions(t = {}) {
              return {
                ngModule: n,
                providers: [
                  t.cookieName ? { provide: X0, useValue: t.cookieName } : [],
                  t.headerName ? { provide: J0, useValue: t.headerName } : [],
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({
              providers: [
                ec,
                { provide: Q0, useExisting: ec, multi: !0 },
                { provide: sp, useClass: $T },
                { provide: X0, useValue: "XSRF-TOKEN" },
                { provide: J0, useValue: "X-XSRF-TOKEN" },
              ],
            })),
            n
          );
        })(),
        qT = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({
              providers: [
                np,
                { provide: Zd, useClass: GT },
                rp,
                { provide: Kd, useExisting: rp },
              ],
              imports: [
                [
                  WT.withOptions({
                    cookieName: "XSRF-TOKEN",
                    headerName: "X-XSRF-TOKEN",
                  }),
                ],
              ],
            })),
            n
          );
        })(),
        Aa = (() => {
          class n {
            constructor(t) {
              (this.http = t),
                (this.loader = new c1(!1)),
                (this.userInput = new me()),
                (this.currentMessage = this.userInput.asObservable()),
                (this.selectedMode = new me()),
                (this.defaultMode = this.selectedMode.asObservable());
            }
            setMode(t) {
              this.selectedMode.next(t);
            }
            getMode() {
              return this.selectedMode.asObservable();
            }
            setMessage(t) {
              this.userInput.next(t);
            }
            getMessage() {
              return this.userInput.asObservable();
            }
            getPokemon(t, i) {
              return this.http
                .get(
                  `https://pokeapi.co/api/v2/pokemon/?limit=${t}&offset=${i}`
                )
                .pipe(K1(this.handleError));
            }
            getMoreData(t = []) {
              return this.http
                .get(`https://pokeapi.co/api/v2/pokemon/${t}`)
                .pipe(K1(this.handleError));
            }
            handleError(t) {
              return (function VT(n, e) {
                const t = oe(n) ? n : () => n,
                  i = (r) => r.error(t());
                return new pe(e ? (r) => e.schedule(i, 0, r) : i);
              })(t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(np));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      function Wt(n) {
        return null != n && "false" != `${n}`;
      }
      function Pi(n, e = 0) {
        return (function ZT(n) {
          return !isNaN(parseFloat(n)) && !isNaN(Number(n));
        })(n)
          ? Number(n)
          : e;
      }
      function op(n) {
        return Array.isArray(n) ? n : [n];
      }
      function Ye(n) {
        return null == n ? "" : "string" == typeof n ? n : `${n}px`;
      }
      function xa(n) {
        return n instanceof Le ? n.nativeElement : n;
      }
      class KT extends He {
        constructor(e, t) {
          super();
        }
        schedule(e, t = 0) {
          return this;
        }
      }
      const za = {
        setInterval(...n) {
          const { delegate: e } = za;
          return ((null == e ? void 0 : e.setInterval) || setInterval)(...n);
        },
        clearInterval(n) {
          const { delegate: e } = za;
          return ((null == e ? void 0 : e.clearInterval) || clearInterval)(n);
        },
        delegate: void 0,
      };
      class tc extends KT {
        constructor(e, t) {
          super(e, t),
            (this.scheduler = e),
            (this.work = t),
            (this.pending = !1);
        }
        schedule(e, t = 0) {
          if (this.closed) return this;
          this.state = e;
          const i = this.id,
            r = this.scheduler;
          return (
            null != i && (this.id = this.recycleAsyncId(r, i, t)),
            (this.pending = !0),
            (this.delay = t),
            (this.id = this.id || this.requestAsyncId(r, this.id, t)),
            this
          );
        }
        requestAsyncId(e, t, i = 0) {
          return za.setInterval(e.flush.bind(e, this), i);
        }
        recycleAsyncId(e, t, i = 0) {
          if (null != i && this.delay === i && !1 === this.pending) return t;
          za.clearInterval(t);
        }
        execute(e, t) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const i = this._execute(e, t);
          if (i) return i;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(e, t) {
          let r,
            i = !1;
          try {
            this.work(e);
          } catch (s) {
            (i = !0),
              (r = s || new Error("Scheduled action threw falsy error"));
          }
          if (i) return this.unsubscribe(), r;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: e, scheduler: t } = this,
              { actions: i } = t;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              N2(i, this),
              null != e && (this.id = this.recycleAsyncId(t, e, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
      const ap = { now: () => (ap.delegate || Date).now(), delegate: void 0 };
      class fs {
        constructor(e, t = fs.now) {
          (this.schedulerActionCtor = e), (this.now = t);
        }
        schedule(e, t = 0, i) {
          return new this.schedulerActionCtor(this, e).schedule(i, t);
        }
      }
      fs.now = ap.now;
      class nc extends fs {
        constructor(e, t = fs.now) {
          super(e, t),
            (this.actions = []),
            (this._active = !1),
            (this._scheduled = void 0);
        }
        flush(e) {
          const { actions: t } = this;
          if (this._active) return void t.push(e);
          let i;
          this._active = !0;
          do {
            if ((i = e.execute(e.state, e.delay))) break;
          } while ((e = t.shift()));
          if (((this._active = !1), i)) {
            for (; (e = t.shift()); ) e.unsubscribe();
            throw i;
          }
        }
      }
      const cp = new nc(tc),
        lp = cp;
      function up(n, e = cp) {
        return Oe((t, i) => {
          let r = null,
            s = null,
            o = null;
          const a = () => {
            if (r) {
              r.unsubscribe(), (r = null);
              const l = s;
              (s = null), i.next(l);
            }
          };
          function c() {
            const l = o + n,
              u = e.now();
            if (u < l) return (r = this.schedule(void 0, l - u)), void i.add(r);
            a();
          }
          t.subscribe(
            new Te(
              i,
              (l) => {
                (s = l), (o = e.now()), r || ((r = e.schedule(c, n)), i.add(r));
              },
              () => {
                a(), i.complete();
              },
              void 0,
              () => {
                s = r = null;
              }
            )
          );
        });
      }
      let fp = (() => {
          class n {
            create(t) {
              return "undefined" == typeof MutationObserver
                ? null
                : new MutationObserver(t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        YT = (() => {
          class n {
            constructor(t) {
              (this._mutationObserverFactory = t),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((t, i) =>
                this._cleanupObserver(i)
              );
            }
            observe(t) {
              const i = xa(t);
              return new pe((r) => {
                const o = this._observeElement(i).subscribe(r);
                return () => {
                  o.unsubscribe(), this._unobserveElement(i);
                };
              });
            }
            _observeElement(t) {
              if (this._observedElements.has(t))
                this._observedElements.get(t).count++;
              else {
                const i = new me(),
                  r = this._mutationObserverFactory.create((s) => i.next(s));
                r &&
                  r.observe(t, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(t, {
                    observer: r,
                    stream: i,
                    count: 1,
                  });
              }
              return this._observedElements.get(t).stream;
            }
            _unobserveElement(t) {
              this._observedElements.has(t) &&
                (this._observedElements.get(t).count--,
                this._observedElements.get(t).count ||
                  this._cleanupObserver(t));
            }
            _cleanupObserver(t) {
              if (this._observedElements.has(t)) {
                const { observer: i, stream: r } =
                  this._observedElements.get(t);
                i && i.disconnect(),
                  r.complete(),
                  this._observedElements.delete(t);
              }
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(fp));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        QT = (() => {
          class n {
            constructor(t, i, r) {
              (this._contentObserver = t),
                (this._elementRef = i),
                (this._ngZone = r),
                (this.event = new $()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(t) {
              (this._disabled = Wt(t)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(t) {
              (this._debounce = Pi(t)), this._subscribe();
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const t = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (
                  this.debounce ? t.pipe(up(this.debounce)) : t
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              var t;
              null === (t = this._currentSubscription) ||
                void 0 === t ||
                t.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(YT), _(Le), _(fe));
            }),
            (n.ɵdir = V({
              type: n,
              selectors: [["", "cdkObserveContent", ""]],
              inputs: {
                disabled: ["cdkObserveContentDisabled", "disabled"],
                debounce: "debounce",
              },
              outputs: { event: "cdkObserveContent" },
              exportAs: ["cdkObserveContent"],
            })),
            n
          );
        })(),
        XT = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({ providers: [fp] })),
            n
          );
        })();
      const JT = new L("cdk-dir-doc", {
          providedIn: "root",
          factory: function eN() {
            return m5(he);
          },
        }),
        tN =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let ic,
        La = (() => {
          class n {
            constructor(t) {
              if (((this.value = "ltr"), (this.change = new $()), t)) {
                const r = t.documentElement ? t.documentElement.dir : null;
                this.value = (function nN(n) {
                  const e = (null == n ? void 0 : n.toLowerCase()) || "";
                  return "auto" === e &&
                    "undefined" != typeof navigator &&
                    (null == navigator ? void 0 : navigator.language)
                    ? tN.test(navigator.language)
                      ? "rtl"
                      : "ltr"
                    : "rtl" === e
                    ? "rtl"
                    : "ltr";
                })((t.body ? t.body.dir : null) || r || "ltr");
              }
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(JT, 8));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        hs = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({})),
            n
          );
        })();
      try {
        ic = "undefined" != typeof Intl && Intl.v8BreakIterator;
      } catch (n) {
        ic = !1;
      }
      let ds,
        M2,
        sc,
        X1 = (() => {
          class n {
            constructor(t) {
              (this._platformId = t),
                (this.isBrowser = this._platformId
                  ? (function xx(n) {
                      return n === Eh;
                    })(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !ic) &&
                  "undefined" != typeof CSS &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(Wr));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        dp = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({})),
            n
          );
        })();
      function rc(n) {
        return (function iN() {
          if (null == ds && "undefined" != typeof window)
            try {
              window.addEventListener(
                "test",
                null,
                Object.defineProperty({}, "passive", { get: () => (ds = !0) })
              );
            } finally {
              ds = ds || !1;
            }
          return ds;
        })()
          ? n
          : !!n.capture;
      }
      function rN() {
        if (null == M2) {
          if (
            "object" != typeof document ||
            !document ||
            "function" != typeof Element ||
            !Element
          )
            return (M2 = !1), M2;
          if ("scrollBehavior" in document.documentElement.style) M2 = !0;
          else {
            const n = Element.prototype.scrollTo;
            M2 = !!n && !/\{\s*\[native code\]\s*\}/.test(n.toString());
          }
        }
        return M2;
      }
      function mp(n) {
        return n.composedPath ? n.composedPath()[0] : n.target;
      }
      function oc() {
        return (
          ("undefined" != typeof __karma__ && !!__karma__) ||
          ("undefined" != typeof jasmine && !!jasmine) ||
          ("undefined" != typeof jest && !!jest) ||
          ("undefined" != typeof Mocha && !!Mocha)
        );
      }
      function ps(n, ...e) {
        return e.length
          ? e.some((t) => n[t])
          : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey;
      }
      class bN extends class MN {
        constructor(e) {
          (this._items = e),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new me()),
            (this._typeaheadSubscription = He.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._skipPredicateFn = (t) => t.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new me()),
            (this.change = new me()),
            e instanceof Ur &&
              e.changes.subscribe((t) => {
                if (this._activeItem) {
                  const r = t.toArray().indexOf(this._activeItem);
                  r > -1 &&
                    r !== this._activeItemIndex &&
                    (this._activeItemIndex = r);
                }
              });
        }
        skipPredicate(e) {
          return (this._skipPredicateFn = e), this;
        }
        withWrap(e = !0) {
          return (this._wrap = e), this;
        }
        withVerticalOrientation(e = !0) {
          return (this._vertical = e), this;
        }
        withHorizontalOrientation(e) {
          return (this._horizontal = e), this;
        }
        withAllowedModifierKeys(e) {
          return (this._allowedModifierKeys = e), this;
        }
        withTypeAhead(e = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                St((t) => this._pressedLetters.push(t)),
                up(e),
                x1(() => this._pressedLetters.length > 0),
                ae(() => this._pressedLetters.join(""))
              )
              .subscribe((t) => {
                const i = this._getItemsArray();
                for (let r = 1; r < i.length + 1; r++) {
                  const s = (this._activeItemIndex + r) % i.length,
                    o = i[s];
                  if (
                    !this._skipPredicateFn(o) &&
                    0 === o.getLabel().toUpperCase().trim().indexOf(t)
                  ) {
                    this.setActiveItem(s);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        withHomeAndEnd(e = !0) {
          return (this._homeAndEnd = e), this;
        }
        setActiveItem(e) {
          const t = this._activeItem;
          this.updateActiveItem(e),
            this._activeItem !== t && this.change.next(this._activeItemIndex);
        }
        onKeydown(e) {
          const t = e.keyCode,
            r = ["altKey", "ctrlKey", "metaKey", "shiftKey"].every(
              (s) => !e[s] || this._allowedModifierKeys.indexOf(s) > -1
            );
          switch (t) {
            case 9:
              return void this.tabOut.next();
            case 40:
              if (this._vertical && r) {
                this.setNextItemActive();
                break;
              }
              return;
            case 38:
              if (this._vertical && r) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case 39:
              if (this._horizontal && r) {
                "rtl" === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case 37:
              if (this._horizontal && r) {
                "rtl" === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case 36:
              if (this._homeAndEnd && r) {
                this.setFirstItemActive();
                break;
              }
              return;
            case 35:
              if (this._homeAndEnd && r) {
                this.setLastItemActive();
                break;
              }
              return;
            default:
              return void (
                (r || ps(e, "shiftKey")) &&
                (e.key && 1 === e.key.length
                  ? this._letterKeyStream.next(e.key.toLocaleUpperCase())
                  : ((t >= 65 && t <= 90) || (t >= 48 && t <= 57)) &&
                    this._letterKeyStream.next(String.fromCharCode(t)))
              );
          }
          (this._pressedLetters = []), e.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(e) {
          const t = this._getItemsArray(),
            i = "number" == typeof e ? e : t.indexOf(e),
            r = t[i];
          (this._activeItem = null == r ? null : r),
            (this._activeItemIndex = i);
        }
        _setActiveItemByDelta(e) {
          this._wrap
            ? this._setActiveInWrapMode(e)
            : this._setActiveInDefaultMode(e);
        }
        _setActiveInWrapMode(e) {
          const t = this._getItemsArray();
          for (let i = 1; i <= t.length; i++) {
            const r = (this._activeItemIndex + e * i + t.length) % t.length;
            if (!this._skipPredicateFn(t[r])) return void this.setActiveItem(r);
          }
        }
        _setActiveInDefaultMode(e) {
          this._setActiveItemByIndex(this._activeItemIndex + e, e);
        }
        _setActiveItemByIndex(e, t) {
          const i = this._getItemsArray();
          if (i[e]) {
            for (; this._skipPredicateFn(i[e]); ) if (!i[(e += t)]) return;
            this.setActiveItem(e);
          }
        }
        _getItemsArray() {
          return this._items instanceof Ur
            ? this._items.toArray()
            : this._items;
        }
      } {
        setActiveItem(e) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(e),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      const LN = new L("liveAnnouncerElement", {
          providedIn: "root",
          factory: function TN() {
            return null;
          },
        }),
        NN = new L("LIVE_ANNOUNCER_DEFAULT_OPTIONS");
      let VN = (() => {
        class n {
          constructor(t, i, r, s) {
            (this._ngZone = i),
              (this._defaultOptions = s),
              (this._document = r),
              (this._liveElement = t || this._createLiveElement());
          }
          announce(t, ...i) {
            const r = this._defaultOptions;
            let s, o;
            return (
              1 === i.length && "number" == typeof i[0]
                ? (o = i[0])
                : ([s, o] = i),
              this.clear(),
              clearTimeout(this._previousTimeout),
              s || (s = r && r.politeness ? r.politeness : "polite"),
              null == o && r && (o = r.duration),
              this._liveElement.setAttribute("aria-live", s),
              this._ngZone.runOutsideAngular(
                () =>
                  new Promise((a) => {
                    clearTimeout(this._previousTimeout),
                      (this._previousTimeout = setTimeout(() => {
                        (this._liveElement.textContent = t),
                          a(),
                          "number" == typeof o &&
                            (this._previousTimeout = setTimeout(
                              () => this.clear(),
                              o
                            ));
                      }, 100));
                  })
              )
            );
          }
          clear() {
            this._liveElement && (this._liveElement.textContent = "");
          }
          ngOnDestroy() {
            var t;
            clearTimeout(this._previousTimeout),
              null === (t = this._liveElement) || void 0 === t || t.remove(),
              (this._liveElement = null);
          }
          _createLiveElement() {
            const t = "cdk-live-announcer-element",
              i = this._document.getElementsByClassName(t),
              r = this._document.createElement("div");
            for (let s = 0; s < i.length; s++) i[s].remove();
            return (
              r.classList.add(t),
              r.classList.add("cdk-visually-hidden"),
              r.setAttribute("aria-atomic", "true"),
              r.setAttribute("aria-live", "polite"),
              this._document.body.appendChild(r),
              r
            );
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(LN, 8), C(fe), C(he), C(NN, 8));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const bp = "cdk-high-contrast-black-on-white",
        wp = "cdk-high-contrast-white-on-black",
        fc = "cdk-high-contrast-active";
      let kN = (() => {
        class n {
          constructor(t, i) {
            (this._platform = t), (this._document = i);
          }
          getHighContrastMode() {
            if (!this._platform.isBrowser) return 0;
            const t = this._document.createElement("div");
            (t.style.backgroundColor = "rgb(1,2,3)"),
              (t.style.position = "absolute"),
              this._document.body.appendChild(t);
            const i = this._document.defaultView || window,
              r = i && i.getComputedStyle ? i.getComputedStyle(t) : null,
              s = ((r && r.backgroundColor) || "").replace(/ /g, "");
            switch ((t.remove(), s)) {
              case "rgb(0,0,0)":
                return 2;
              case "rgb(255,255,255)":
                return 1;
            }
            return 0;
          }
          _applyBodyHighContrastModeCssClasses() {
            if (
              !this._hasCheckedHighContrastMode &&
              this._platform.isBrowser &&
              this._document.body
            ) {
              const t = this._document.body.classList;
              t.remove(fc),
                t.remove(bp),
                t.remove(wp),
                (this._hasCheckedHighContrastMode = !0);
              const i = this.getHighContrastMode();
              1 === i
                ? (t.add(fc), t.add(bp))
                : 2 === i && (t.add(fc), t.add(wp));
            }
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(X1), C(he));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      class Dp {}
      const Mn = "*";
      function hc(n, e) {
        return { type: 7, name: n, definitions: e, options: {} };
      }
      function dc(n, e = null) {
        return { type: 4, styles: e, timings: n };
      }
      function Ep(n, e = null) {
        return { type: 2, steps: n, options: e };
      }
      function jn(n) {
        return { type: 6, styles: n, offset: null };
      }
      function Na(n, e, t) {
        return { type: 0, name: n, styles: e, options: t };
      }
      function Va(n, e, t = null) {
        return { type: 1, expr: n, animation: e, options: t };
      }
      function HN(n = null) {
        return { type: 9, options: n };
      }
      function ON(n, e, t = null) {
        return { type: 11, selector: n, animation: e, options: t };
      }
      function Sp(n) {
        Promise.resolve(null).then(n);
      }
      class Ri {
        constructor(e = 0, t = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = e + t);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((e) => e()),
            (this._onDoneFns = []));
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          Sp(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((e) => e()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((e) => e()),
            (this._onDestroyFns = []));
        }
        reset() {
          this._started = !1;
        }
        setPosition(e) {
          this._position = this.totalTime ? e * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((i) => i()), (t.length = 0);
        }
      }
      class Ap {
        constructor(e) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = e);
          let t = 0,
            i = 0,
            r = 0;
          const s = this.players.length;
          0 == s
            ? Sp(() => this._onFinish())
            : this.players.forEach((o) => {
                o.onDone(() => {
                  ++t == s && this._onFinish();
                }),
                  o.onDestroy(() => {
                    ++i == s && this._onDestroy();
                  }),
                  o.onStart(() => {
                    ++r == s && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (o, a) => Math.max(o, a.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((e) => e()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((e) => e.init());
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((e) => e()),
            (this._onStartFns = []));
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((e) => e.play());
        }
        pause() {
          this.players.forEach((e) => e.pause());
        }
        restart() {
          this.players.forEach((e) => e.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((e) => e.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((e) => e.destroy()),
            this._onDestroyFns.forEach((e) => e()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((e) => e.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(e) {
          const t = e * this.totalTime;
          this.players.forEach((i) => {
            const r = i.totalTime ? Math.min(1, t / i.totalTime) : 1;
            i.setPosition(r);
          });
        }
        getPosition() {
          const e = this.players.reduce(
            (t, i) => (null === t || i.totalTime > t.totalTime ? i : t),
            null
          );
          return null != e ? e.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((e) => {
            e.beforeDestroy && e.beforeDestroy();
          });
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((i) => i()), (t.length = 0);
        }
      }
      function xp() {
        return "undefined" != typeof window && void 0 !== window.document;
      }
      function mc() {
        return (
          "undefined" != typeof process &&
          "[object process]" === {}.toString.call(process)
        );
      }
      function Un(n) {
        switch (n.length) {
          case 0:
            return new Ri();
          case 1:
            return n[0];
          default:
            return new Ap(n);
        }
      }
      function zp(n, e, t, i, r = {}, s = {}) {
        const o = [],
          a = [];
        let c = -1,
          l = null;
        if (
          (i.forEach((u) => {
            const f = u.offset,
              h = f == c,
              d = (h && l) || {};
            Object.keys(u).forEach((p) => {
              let m = p,
                g = u[p];
              if ("offset" !== p)
                switch (((m = e.normalizePropertyName(m, o)), g)) {
                  case "!":
                    g = r[p];
                    break;
                  case Mn:
                    g = s[p];
                    break;
                  default:
                    g = e.normalizeStyleValue(p, m, g, o);
                }
              d[m] = g;
            }),
              h || a.push(d),
              (l = d),
              (c = f);
          }),
          o.length)
        ) {
          const u = "\n - ";
          throw new Error(
            `Unable to animate due to the following errors:${u}${o.join(u)}`
          );
        }
        return a;
      }
      function gc(n, e, t, i) {
        switch (e) {
          case "start":
            n.onStart(() => i(t && vc(t, "start", n)));
            break;
          case "done":
            n.onDone(() => i(t && vc(t, "done", n)));
            break;
          case "destroy":
            n.onDestroy(() => i(t && vc(t, "destroy", n)));
        }
      }
      function vc(n, e, t) {
        const i = t.totalTime,
          s = _c(
            n.element,
            n.triggerName,
            n.fromState,
            n.toState,
            e || n.phaseName,
            null == i ? n.totalTime : i,
            !!t.disabled
          ),
          o = n._data;
        return null != o && (s._data = o), s;
      }
      function _c(n, e, t, i, r = "", s = 0, o) {
        return {
          element: n,
          triggerName: e,
          fromState: t,
          toState: i,
          phaseName: r,
          totalTime: s,
          disabled: !!o,
        };
      }
      function qt(n, e, t) {
        let i;
        return (
          n instanceof Map
            ? ((i = n.get(e)), i || n.set(e, (i = t)))
            : ((i = n[e]), i || (i = n[e] = t)),
          i
        );
      }
      function Lp(n) {
        const e = n.indexOf(":");
        return [n.substring(1, e), n.substr(e + 1)];
      }
      let yc = (n, e) => !1,
        Tp = (n, e, t) => [];
      (mc() || "undefined" != typeof Element) &&
        ((yc = xp()
          ? (n, e) => {
              for (; e && e !== document.documentElement; ) {
                if (e === n) return !0;
                e = e.parentNode || e.host;
              }
              return !1;
            }
          : (n, e) => n.contains(e)),
        (Tp = (n, e, t) => {
          if (t) return Array.from(n.querySelectorAll(e));
          const i = n.querySelector(e);
          return i ? [i] : [];
        }));
      let b2 = null,
        Np = !1;
      function Cc(n) {
        b2 ||
          ((b2 =
            (function FN() {
              return "undefined" != typeof document ? document.body : null;
            })() || {}),
          (Np = !!b2.style && "WebkitAppearance" in b2.style));
        let e = !0;
        return (
          b2.style &&
            !(function PN(n) {
              return "ebkit" == n.substring(1, 6);
            })(n) &&
            ((e = n in b2.style),
            !e &&
              Np &&
              (e =
                "Webkit" + n.charAt(0).toUpperCase() + n.substr(1) in
                b2.style)),
          e
        );
      }
      const Mc = yc,
        bc = Tp;
      function Vp(n) {
        const e = {};
        return (
          Object.keys(n).forEach((t) => {
            const i = t.replace(/([a-z])([A-Z])/g, "$1-$2");
            e[i] = n[t];
          }),
          e
        );
      }
      let kp = (() => {
          class n {
            validateStyleProperty(t) {
              return Cc(t);
            }
            matchesElement(t, i) {
              return !1;
            }
            containsElement(t, i) {
              return Mc(t, i);
            }
            query(t, i, r) {
              return bc(t, i, r);
            }
            computeStyle(t, i, r) {
              return r || "";
            }
            animate(t, i, r, s, o, a = [], c) {
              return new Ri(r, s);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        wc = (() => {
          class n {}
          return (n.NOOP = new kp()), n;
        })();
      const Dc = "ng-enter",
        ka = "ng-leave",
        Ia = "ng-trigger",
        Ha = ".ng-trigger",
        Hp = "ng-animating",
        Ec = ".ng-animating";
      function w2(n) {
        if ("number" == typeof n) return n;
        const e = n.match(/^(-?[\.\d]+)(m?s)/);
        return !e || e.length < 2 ? 0 : Sc(parseFloat(e[1]), e[2]);
      }
      function Sc(n, e) {
        return "s" === e ? 1e3 * n : n;
      }
      function Oa(n, e, t) {
        return n.hasOwnProperty("duration")
          ? n
          : (function jN(n, e, t) {
              let r,
                s = 0,
                o = "";
              if ("string" == typeof n) {
                const a = n.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === a)
                  return (
                    e.push(`The provided timing value "${n}" is invalid.`),
                    { duration: 0, delay: 0, easing: "" }
                  );
                r = Sc(parseFloat(a[1]), a[2]);
                const c = a[3];
                null != c && (s = Sc(parseFloat(c), a[4]));
                const l = a[5];
                l && (o = l);
              } else r = n;
              if (!t) {
                let a = !1,
                  c = e.length;
                r < 0 &&
                  (e.push(
                    "Duration values below 0 are not allowed for this animation step."
                  ),
                  (a = !0)),
                  s < 0 &&
                    (e.push(
                      "Delay values below 0 are not allowed for this animation step."
                    ),
                    (a = !0)),
                  a &&
                    e.splice(
                      c,
                      0,
                      `The provided timing value "${n}" is invalid.`
                    );
              }
              return { duration: r, delay: s, easing: o };
            })(n, e, t);
      }
      function Bi(n, e = {}) {
        return (
          Object.keys(n).forEach((t) => {
            e[t] = n[t];
          }),
          e
        );
      }
      function $n(n, e, t = {}) {
        if (e) for (let i in n) t[i] = n[i];
        else Bi(n, t);
        return t;
      }
      function Pp(n, e, t) {
        return t ? e + ":" + t + ";" : "";
      }
      function Fp(n) {
        let e = "";
        for (let t = 0; t < n.style.length; t++) {
          const i = n.style.item(t);
          e += Pp(0, i, n.style.getPropertyValue(i));
        }
        for (const t in n.style)
          n.style.hasOwnProperty(t) &&
            !t.startsWith("_") &&
            (e += Pp(0, GN(t), n.style[t]));
        n.setAttribute("style", e);
      }
      function J1(n, e, t) {
        n.style &&
          (Object.keys(e).forEach((i) => {
            const r = xc(i);
            t && !t.hasOwnProperty(i) && (t[i] = n.style[r]),
              (n.style[r] = e[i]);
          }),
          mc() && Fp(n));
      }
      function D2(n, e) {
        n.style &&
          (Object.keys(e).forEach((t) => {
            const i = xc(t);
            n.style[i] = "";
          }),
          mc() && Fp(n));
      }
      function ms(n) {
        return Array.isArray(n) ? (1 == n.length ? n[0] : Ep(n)) : n;
      }
      const Ac = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function Rp(n) {
        let e = [];
        if ("string" == typeof n) {
          let t;
          for (; (t = Ac.exec(n)); ) e.push(t[1]);
          Ac.lastIndex = 0;
        }
        return e;
      }
      function Pa(n, e, t) {
        const i = n.toString(),
          r = i.replace(Ac, (s, o) => {
            let a = e[o];
            return (
              e.hasOwnProperty(o) ||
                (t.push(`Please provide a value for the animation param ${o}`),
                (a = "")),
              a.toString()
            );
          });
        return r == i ? n : r;
      }
      function Fa(n) {
        const e = [];
        let t = n.next();
        for (; !t.done; ) e.push(t.value), (t = n.next());
        return e;
      }
      const $N = /-+([a-z0-9])/g;
      function xc(n) {
        return n.replace($N, (...e) => e[1].toUpperCase());
      }
      function GN(n) {
        return n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
      }
      function Bp(n, e) {
        return 0 === n || 0 === e;
      }
      function jp(n, e, t) {
        const i = Object.keys(t);
        if (i.length && e.length) {
          let s = e[0],
            o = [];
          if (
            (i.forEach((a) => {
              s.hasOwnProperty(a) || o.push(a), (s[a] = t[a]);
            }),
            o.length)
          )
            for (var r = 1; r < e.length; r++) {
              let a = e[r];
              o.forEach(function (c) {
                a[c] = zc(n, c);
              });
            }
        }
        return e;
      }
      function Zt(n, e, t) {
        switch (e.type) {
          case 7:
            return n.visitTrigger(e, t);
          case 0:
            return n.visitState(e, t);
          case 1:
            return n.visitTransition(e, t);
          case 2:
            return n.visitSequence(e, t);
          case 3:
            return n.visitGroup(e, t);
          case 4:
            return n.visitAnimate(e, t);
          case 5:
            return n.visitKeyframes(e, t);
          case 6:
            return n.visitStyle(e, t);
          case 8:
            return n.visitReference(e, t);
          case 9:
            return n.visitAnimateChild(e, t);
          case 10:
            return n.visitAnimateRef(e, t);
          case 11:
            return n.visitQuery(e, t);
          case 12:
            return n.visitStagger(e, t);
          default:
            throw new Error(
              `Unable to resolve animation metadata node #${e.type}`
            );
        }
      }
      function zc(n, e) {
        return window.getComputedStyle(n)[e];
      }
      function WN(n, e) {
        const t = [];
        return (
          "string" == typeof n
            ? n.split(/\s*,\s*/).forEach((i) =>
                (function qN(n, e, t) {
                  if (":" == n[0]) {
                    const c = (function ZN(n, e) {
                      switch (n) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (t, i) => parseFloat(i) > parseFloat(t);
                        case ":decrement":
                          return (t, i) => parseFloat(i) < parseFloat(t);
                        default:
                          return (
                            e.push(
                              `The transition alias value "${n}" is not supported`
                            ),
                            "* => *"
                          );
                      }
                    })(n, t);
                    if ("function" == typeof c) return void e.push(c);
                    n = c;
                  }
                  const i = n.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return (
                      t.push(
                        `The provided transition expression "${n}" is not supported`
                      ),
                      e
                    );
                  const r = i[1],
                    s = i[2],
                    o = i[3];
                  e.push(Up(r, o));
                  "<" == s[0] && !("*" == r && "*" == o) && e.push(Up(o, r));
                })(i, t, e)
              )
            : t.push(n),
          t
        );
      }
      const Ba = new Set(["true", "1"]),
        ja = new Set(["false", "0"]);
      function Up(n, e) {
        const t = Ba.has(n) || ja.has(n),
          i = Ba.has(e) || ja.has(e);
        return (r, s) => {
          let o = "*" == n || n == r,
            a = "*" == e || e == s;
          return (
            !o && t && "boolean" == typeof r && (o = r ? Ba.has(n) : ja.has(n)),
            !a && i && "boolean" == typeof s && (a = s ? Ba.has(e) : ja.has(e)),
            o && a
          );
        };
      }
      const KN = new RegExp("s*:selfs*,?", "g");
      function Lc(n, e, t) {
        return new YN(n).build(e, t);
      }
      class YN {
        constructor(e) {
          this._driver = e;
        }
        build(e, t) {
          const i = new JN(t);
          return this._resetContextStyleTimingState(i), Zt(this, ms(e), i);
        }
        _resetContextStyleTimingState(e) {
          (e.currentQuerySelector = ""),
            (e.collectedStyles = {}),
            (e.collectedStyles[""] = {}),
            (e.currentTime = 0);
        }
        visitTrigger(e, t) {
          let i = (t.queryCount = 0),
            r = (t.depCount = 0);
          const s = [],
            o = [];
          return (
            "@" == e.name.charAt(0) &&
              t.errors.push(
                "animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"
              ),
            e.definitions.forEach((a) => {
              if ((this._resetContextStyleTimingState(t), 0 == a.type)) {
                const c = a,
                  l = c.name;
                l
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((u) => {
                    (c.name = u), s.push(this.visitState(c, t));
                  }),
                  (c.name = l);
              } else if (1 == a.type) {
                const c = this.visitTransition(a, t);
                (i += c.queryCount), (r += c.depCount), o.push(c);
              } else
                t.errors.push(
                  "only state() and transition() definitions can sit inside of a trigger()"
                );
            }),
            {
              type: 7,
              name: e.name,
              states: s,
              transitions: o,
              queryCount: i,
              depCount: r,
              options: null,
            }
          );
        }
        visitState(e, t) {
          const i = this.visitStyle(e.styles, t),
            r = (e.options && e.options.params) || null;
          if (i.containsDynamicStyles) {
            const s = new Set(),
              o = r || {};
            if (
              (i.styles.forEach((a) => {
                if (Ua(a)) {
                  const c = a;
                  Object.keys(c).forEach((l) => {
                    Rp(c[l]).forEach((u) => {
                      o.hasOwnProperty(u) || s.add(u);
                    });
                  });
                }
              }),
              s.size)
            ) {
              const a = Fa(s.values());
              t.errors.push(
                `state("${
                  e.name
                }", ...) must define default values for all the following style substitutions: ${a.join(
                  ", "
                )}`
              );
            }
          }
          return {
            type: 0,
            name: e.name,
            style: i,
            options: r ? { params: r } : null,
          };
        }
        visitTransition(e, t) {
          (t.queryCount = 0), (t.depCount = 0);
          const i = Zt(this, ms(e.animation), t);
          return {
            type: 1,
            matchers: WN(e.expr, t.errors),
            animation: i,
            queryCount: t.queryCount,
            depCount: t.depCount,
            options: E2(e.options),
          };
        }
        visitSequence(e, t) {
          return {
            type: 2,
            steps: e.steps.map((i) => Zt(this, i, t)),
            options: E2(e.options),
          };
        }
        visitGroup(e, t) {
          const i = t.currentTime;
          let r = 0;
          const s = e.steps.map((o) => {
            t.currentTime = i;
            const a = Zt(this, o, t);
            return (r = Math.max(r, t.currentTime)), a;
          });
          return (
            (t.currentTime = r), { type: 3, steps: s, options: E2(e.options) }
          );
        }
        visitAnimate(e, t) {
          const i = (function tV(n, e) {
            let t = null;
            if (n.hasOwnProperty("duration")) t = n;
            else if ("number" == typeof n) return Tc(Oa(n, e).duration, 0, "");
            const i = n;
            if (
              i
                .split(/\s+/)
                .some((s) => "{" == s.charAt(0) && "{" == s.charAt(1))
            ) {
              const s = Tc(0, 0, "");
              return (s.dynamic = !0), (s.strValue = i), s;
            }
            return (t = t || Oa(i, e)), Tc(t.duration, t.delay, t.easing);
          })(e.timings, t.errors);
          t.currentAnimateTimings = i;
          let r,
            s = e.styles ? e.styles : jn({});
          if (5 == s.type) r = this.visitKeyframes(s, t);
          else {
            let o = e.styles,
              a = !1;
            if (!o) {
              a = !0;
              const l = {};
              i.easing && (l.easing = i.easing), (o = jn(l));
            }
            t.currentTime += i.duration + i.delay;
            const c = this.visitStyle(o, t);
            (c.isEmptyStep = a), (r = c);
          }
          return (
            (t.currentAnimateTimings = null),
            { type: 4, timings: i, style: r, options: null }
          );
        }
        visitStyle(e, t) {
          const i = this._makeStyleAst(e, t);
          return this._validateStyleAst(i, t), i;
        }
        _makeStyleAst(e, t) {
          const i = [];
          Array.isArray(e.styles)
            ? e.styles.forEach((o) => {
                "string" == typeof o
                  ? o == Mn
                    ? i.push(o)
                    : t.errors.push(
                        `The provided style string value ${o} is not allowed.`
                      )
                  : i.push(o);
              })
            : i.push(e.styles);
          let r = !1,
            s = null;
          return (
            i.forEach((o) => {
              if (Ua(o)) {
                const a = o,
                  c = a.easing;
                if ((c && ((s = c), delete a.easing), !r))
                  for (let l in a)
                    if (a[l].toString().indexOf("{{") >= 0) {
                      r = !0;
                      break;
                    }
              }
            }),
            {
              type: 6,
              styles: i,
              easing: s,
              offset: e.offset,
              containsDynamicStyles: r,
              options: null,
            }
          );
        }
        _validateStyleAst(e, t) {
          const i = t.currentAnimateTimings;
          let r = t.currentTime,
            s = t.currentTime;
          i && s > 0 && (s -= i.duration + i.delay),
            e.styles.forEach((o) => {
              "string" != typeof o &&
                Object.keys(o).forEach((a) => {
                  if (!this._driver.validateStyleProperty(a))
                    return void t.errors.push(
                      `The provided animation property "${a}" is not a supported CSS property for animations`
                    );
                  const c = t.collectedStyles[t.currentQuerySelector],
                    l = c[a];
                  let u = !0;
                  l &&
                    (s != r &&
                      s >= l.startTime &&
                      r <= l.endTime &&
                      (t.errors.push(
                        `The CSS property "${a}" that exists between the times of "${l.startTime}ms" and "${l.endTime}ms" is also being animated in a parallel animation between the times of "${s}ms" and "${r}ms"`
                      ),
                      (u = !1)),
                    (s = l.startTime)),
                    u && (c[a] = { startTime: s, endTime: r }),
                    t.options &&
                      (function UN(n, e, t) {
                        const i = e.params || {},
                          r = Rp(n);
                        r.length &&
                          r.forEach((s) => {
                            i.hasOwnProperty(s) ||
                              t.push(
                                `Unable to resolve the local animation param ${s} in the given list of values`
                              );
                          });
                      })(o[a], t.options, t.errors);
                });
            });
        }
        visitKeyframes(e, t) {
          const i = { type: 5, styles: [], options: null };
          if (!t.currentAnimateTimings)
            return (
              t.errors.push(
                "keyframes() must be placed inside of a call to animate()"
              ),
              i
            );
          let s = 0;
          const o = [];
          let a = !1,
            c = !1,
            l = 0;
          const u = e.steps.map((y) => {
            const v = this._makeStyleAst(y, t);
            let M =
                null != v.offset
                  ? v.offset
                  : (function eV(n) {
                      if ("string" == typeof n) return null;
                      let e = null;
                      if (Array.isArray(n))
                        n.forEach((t) => {
                          if (Ua(t) && t.hasOwnProperty("offset")) {
                            const i = t;
                            (e = parseFloat(i.offset)), delete i.offset;
                          }
                        });
                      else if (Ua(n) && n.hasOwnProperty("offset")) {
                        const t = n;
                        (e = parseFloat(t.offset)), delete t.offset;
                      }
                      return e;
                    })(v.styles),
              E = 0;
            return (
              null != M && (s++, (E = v.offset = M)),
              (c = c || E < 0 || E > 1),
              (a = a || E < l),
              (l = E),
              o.push(E),
              v
            );
          });
          c &&
            t.errors.push(
              "Please ensure that all keyframe offsets are between 0 and 1"
            ),
            a &&
              t.errors.push(
                "Please ensure that all keyframe offsets are in order"
              );
          const f = e.steps.length;
          let h = 0;
          s > 0 && s < f
            ? t.errors.push(
                "Not all style() steps within the declared keyframes() contain offsets"
              )
            : 0 == s && (h = 1 / (f - 1));
          const d = f - 1,
            p = t.currentTime,
            m = t.currentAnimateTimings,
            g = m.duration;
          return (
            u.forEach((y, v) => {
              const M = h > 0 ? (v == d ? 1 : h * v) : o[v],
                E = M * g;
              (t.currentTime = p + m.delay + E),
                (m.duration = E),
                this._validateStyleAst(y, t),
                (y.offset = M),
                i.styles.push(y);
            }),
            i
          );
        }
        visitReference(e, t) {
          return {
            type: 8,
            animation: Zt(this, ms(e.animation), t),
            options: E2(e.options),
          };
        }
        visitAnimateChild(e, t) {
          return t.depCount++, { type: 9, options: E2(e.options) };
        }
        visitAnimateRef(e, t) {
          return {
            type: 10,
            animation: this.visitReference(e.animation, t),
            options: E2(e.options),
          };
        }
        visitQuery(e, t) {
          const i = t.currentQuerySelector,
            r = e.options || {};
          t.queryCount++, (t.currentQuery = e);
          const [s, o] = (function QN(n) {
            const e = !!n.split(/\s*,\s*/).find((t) => ":self" == t);
            return (
              e && (n = n.replace(KN, "")),
              (n = n
                .replace(/@\*/g, Ha)
                .replace(/@\w+/g, (t) => Ha + "-" + t.substr(1))
                .replace(/:animating/g, Ec)),
              [n, e]
            );
          })(e.selector);
          (t.currentQuerySelector = i.length ? i + " " + s : s),
            qt(t.collectedStyles, t.currentQuerySelector, {});
          const a = Zt(this, ms(e.animation), t);
          return (
            (t.currentQuery = null),
            (t.currentQuerySelector = i),
            {
              type: 11,
              selector: s,
              limit: r.limit || 0,
              optional: !!r.optional,
              includeSelf: o,
              animation: a,
              originalSelector: e.selector,
              options: E2(e.options),
            }
          );
        }
        visitStagger(e, t) {
          t.currentQuery ||
            t.errors.push("stagger() can only be used inside of query()");
          const i =
            "full" === e.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : Oa(e.timings, t.errors, !0);
          return {
            type: 12,
            animation: Zt(this, ms(e.animation), t),
            timings: i,
            options: null,
          };
        }
      }
      class JN {
        constructor(e) {
          (this.errors = e),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = {}),
            (this.options = null);
        }
      }
      function Ua(n) {
        return !Array.isArray(n) && "object" == typeof n;
      }
      function E2(n) {
        return (
          n
            ? (n = Bi(n)).params &&
              (n.params = (function XN(n) {
                return n ? Bi(n) : null;
              })(n.params))
            : (n = {}),
          n
        );
      }
      function Tc(n, e, t) {
        return { duration: n, delay: e, easing: t };
      }
      function Nc(n, e, t, i, r, s, o = null, a = !1) {
        return {
          type: 1,
          element: n,
          keyframes: e,
          preStyleProps: t,
          postStyleProps: i,
          duration: r,
          delay: s,
          totalTime: r + s,
          easing: o,
          subTimeline: a,
        };
      }
      class $a {
        constructor() {
          this._map = new Map();
        }
        get(e) {
          return this._map.get(e) || [];
        }
        append(e, t) {
          let i = this._map.get(e);
          i || this._map.set(e, (i = [])), i.push(...t);
        }
        has(e) {
          return this._map.has(e);
        }
        clear() {
          this._map.clear();
        }
      }
      const rV = new RegExp(":enter", "g"),
        oV = new RegExp(":leave", "g");
      function Vc(n, e, t, i, r, s = {}, o = {}, a, c, l = []) {
        return new aV().buildKeyframes(n, e, t, i, r, s, o, a, c, l);
      }
      class aV {
        buildKeyframes(e, t, i, r, s, o, a, c, l, u = []) {
          l = l || new $a();
          const f = new kc(e, t, l, r, s, u, []);
          (f.options = c),
            f.currentTimeline.setStyles([o], null, f.errors, c),
            Zt(this, i, f);
          const h = f.timelines.filter((d) => d.containsAnimation());
          if (Object.keys(a).length) {
            let d;
            for (let p = h.length - 1; p >= 0; p--) {
              const m = h[p];
              if (m.element === t) {
                d = m;
                break;
              }
            }
            d &&
              !d.allowOnlyTimelineStyles() &&
              d.setStyles([a], null, f.errors, c);
          }
          return h.length
            ? h.map((d) => d.buildKeyframes())
            : [Nc(t, [], [], [], 0, 0, "", !1)];
        }
        visitTrigger(e, t) {}
        visitState(e, t) {}
        visitTransition(e, t) {}
        visitAnimateChild(e, t) {
          const i = t.subInstructions.get(t.element);
          if (i) {
            const r = t.createSubContext(e.options),
              s = t.currentTimeline.currentTime,
              o = this._visitSubInstructions(i, r, r.options);
            s != o && t.transformIntoNewTimeline(o);
          }
          t.previousNode = e;
        }
        visitAnimateRef(e, t) {
          const i = t.createSubContext(e.options);
          i.transformIntoNewTimeline(),
            this.visitReference(e.animation, i),
            t.transformIntoNewTimeline(i.currentTimeline.currentTime),
            (t.previousNode = e);
        }
        _visitSubInstructions(e, t, i) {
          let s = t.currentTimeline.currentTime;
          const o = null != i.duration ? w2(i.duration) : null,
            a = null != i.delay ? w2(i.delay) : null;
          return (
            0 !== o &&
              e.forEach((c) => {
                const l = t.appendInstructionToTimeline(c, o, a);
                s = Math.max(s, l.duration + l.delay);
              }),
            s
          );
        }
        visitReference(e, t) {
          t.updateOptions(e.options, !0),
            Zt(this, e.animation, t),
            (t.previousNode = e);
        }
        visitSequence(e, t) {
          const i = t.subContextCount;
          let r = t;
          const s = e.options;
          if (
            s &&
            (s.params || s.delay) &&
            ((r = t.createSubContext(s)),
            r.transformIntoNewTimeline(),
            null != s.delay)
          ) {
            6 == r.previousNode.type &&
              (r.currentTimeline.snapshotCurrentStyles(),
              (r.previousNode = Ga));
            const o = w2(s.delay);
            r.delayNextStep(o);
          }
          e.steps.length &&
            (e.steps.forEach((o) => Zt(this, o, r)),
            r.currentTimeline.applyStylesToKeyframe(),
            r.subContextCount > i && r.transformIntoNewTimeline()),
            (t.previousNode = e);
        }
        visitGroup(e, t) {
          const i = [];
          let r = t.currentTimeline.currentTime;
          const s = e.options && e.options.delay ? w2(e.options.delay) : 0;
          e.steps.forEach((o) => {
            const a = t.createSubContext(e.options);
            s && a.delayNextStep(s),
              Zt(this, o, a),
              (r = Math.max(r, a.currentTimeline.currentTime)),
              i.push(a.currentTimeline);
          }),
            i.forEach((o) => t.currentTimeline.mergeTimelineCollectedStyles(o)),
            t.transformIntoNewTimeline(r),
            (t.previousNode = e);
        }
        _visitTiming(e, t) {
          if (e.dynamic) {
            const i = e.strValue;
            return Oa(t.params ? Pa(i, t.params, t.errors) : i, t.errors);
          }
          return { duration: e.duration, delay: e.delay, easing: e.easing };
        }
        visitAnimate(e, t) {
          const i = (t.currentAnimateTimings = this._visitTiming(e.timings, t)),
            r = t.currentTimeline;
          i.delay && (t.incrementTime(i.delay), r.snapshotCurrentStyles());
          const s = e.style;
          5 == s.type
            ? this.visitKeyframes(s, t)
            : (t.incrementTime(i.duration),
              this.visitStyle(s, t),
              r.applyStylesToKeyframe()),
            (t.currentAnimateTimings = null),
            (t.previousNode = e);
        }
        visitStyle(e, t) {
          const i = t.currentTimeline,
            r = t.currentAnimateTimings;
          !r && i.getCurrentStyleProperties().length && i.forwardFrame();
          const s = (r && r.easing) || e.easing;
          e.isEmptyStep
            ? i.applyEmptyStep(s)
            : i.setStyles(e.styles, s, t.errors, t.options),
            (t.previousNode = e);
        }
        visitKeyframes(e, t) {
          const i = t.currentAnimateTimings,
            r = t.currentTimeline.duration,
            s = i.duration,
            a = t.createSubContext().currentTimeline;
          (a.easing = i.easing),
            e.styles.forEach((c) => {
              a.forwardTime((c.offset || 0) * s),
                a.setStyles(c.styles, c.easing, t.errors, t.options),
                a.applyStylesToKeyframe();
            }),
            t.currentTimeline.mergeTimelineCollectedStyles(a),
            t.transformIntoNewTimeline(r + s),
            (t.previousNode = e);
        }
        visitQuery(e, t) {
          const i = t.currentTimeline.currentTime,
            r = e.options || {},
            s = r.delay ? w2(r.delay) : 0;
          s &&
            (6 === t.previousNode.type ||
              (0 == i &&
                t.currentTimeline.getCurrentStyleProperties().length)) &&
            (t.currentTimeline.snapshotCurrentStyles(), (t.previousNode = Ga));
          let o = i;
          const a = t.invokeQuery(
            e.selector,
            e.originalSelector,
            e.limit,
            e.includeSelf,
            !!r.optional,
            t.errors
          );
          t.currentQueryTotal = a.length;
          let c = null;
          a.forEach((l, u) => {
            t.currentQueryIndex = u;
            const f = t.createSubContext(e.options, l);
            s && f.delayNextStep(s),
              l === t.element && (c = f.currentTimeline),
              Zt(this, e.animation, f),
              f.currentTimeline.applyStylesToKeyframe(),
              (o = Math.max(o, f.currentTimeline.currentTime));
          }),
            (t.currentQueryIndex = 0),
            (t.currentQueryTotal = 0),
            t.transformIntoNewTimeline(o),
            c &&
              (t.currentTimeline.mergeTimelineCollectedStyles(c),
              t.currentTimeline.snapshotCurrentStyles()),
            (t.previousNode = e);
        }
        visitStagger(e, t) {
          const i = t.parentContext,
            r = t.currentTimeline,
            s = e.timings,
            o = Math.abs(s.duration),
            a = o * (t.currentQueryTotal - 1);
          let c = o * t.currentQueryIndex;
          switch (s.duration < 0 ? "reverse" : s.easing) {
            case "reverse":
              c = a - c;
              break;
            case "full":
              c = i.currentStaggerTime;
          }
          const u = t.currentTimeline;
          c && u.delayNextStep(c);
          const f = u.currentTime;
          Zt(this, e.animation, t),
            (t.previousNode = e),
            (i.currentStaggerTime =
              r.currentTime - f + (r.startTime - i.currentTimeline.startTime));
        }
      }
      const Ga = {};
      class kc {
        constructor(e, t, i, r, s, o, a, c) {
          (this._driver = e),
            (this.element = t),
            (this.subInstructions = i),
            (this._enterClassName = r),
            (this._leaveClassName = s),
            (this.errors = o),
            (this.timelines = a),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = Ga),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = c || new Wa(this._driver, t, 0)),
            a.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(e, t) {
          if (!e) return;
          const i = e;
          let r = this.options;
          null != i.duration && (r.duration = w2(i.duration)),
            null != i.delay && (r.delay = w2(i.delay));
          const s = i.params;
          if (s) {
            let o = r.params;
            o || (o = this.options.params = {}),
              Object.keys(s).forEach((a) => {
                (!t || !o.hasOwnProperty(a)) &&
                  (o[a] = Pa(s[a], o, this.errors));
              });
          }
        }
        _copyOptions() {
          const e = {};
          if (this.options) {
            const t = this.options.params;
            if (t) {
              const i = (e.params = {});
              Object.keys(t).forEach((r) => {
                i[r] = t[r];
              });
            }
          }
          return e;
        }
        createSubContext(e = null, t, i) {
          const r = t || this.element,
            s = new kc(
              this._driver,
              r,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(r, i || 0)
            );
          return (
            (s.previousNode = this.previousNode),
            (s.currentAnimateTimings = this.currentAnimateTimings),
            (s.options = this._copyOptions()),
            s.updateOptions(e),
            (s.currentQueryIndex = this.currentQueryIndex),
            (s.currentQueryTotal = this.currentQueryTotal),
            (s.parentContext = this),
            this.subContextCount++,
            s
          );
        }
        transformIntoNewTimeline(e) {
          return (
            (this.previousNode = Ga),
            (this.currentTimeline = this.currentTimeline.fork(this.element, e)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(e, t, i) {
          const r = {
              duration: null != t ? t : e.duration,
              delay:
                this.currentTimeline.currentTime +
                (null != i ? i : 0) +
                e.delay,
              easing: "",
            },
            s = new cV(
              this._driver,
              e.element,
              e.keyframes,
              e.preStyleProps,
              e.postStyleProps,
              r,
              e.stretchStartingKeyframe
            );
          return this.timelines.push(s), r;
        }
        incrementTime(e) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + e);
        }
        delayNextStep(e) {
          e > 0 && this.currentTimeline.delayNextStep(e);
        }
        invokeQuery(e, t, i, r, s, o) {
          let a = [];
          if ((r && a.push(this.element), e.length > 0)) {
            e = (e = e.replace(rV, "." + this._enterClassName)).replace(
              oV,
              "." + this._leaveClassName
            );
            let l = this._driver.query(this.element, e, 1 != i);
            0 !== i &&
              (l = i < 0 ? l.slice(l.length + i, l.length) : l.slice(0, i)),
              a.push(...l);
          }
          return (
            !s &&
              0 == a.length &&
              o.push(
                `\`query("${t}")\` returned zero elements. (Use \`query("${t}", { optional: true })\` if you wish to allow this.)`
              ),
            a
          );
        }
      }
      class Wa {
        constructor(e, t, i, r) {
          (this._driver = e),
            (this.element = t),
            (this.startTime = i),
            (this._elementTimelineStylesLookup = r),
            (this.duration = 0),
            (this._previousKeyframe = {}),
            (this._currentKeyframe = {}),
            (this._keyframes = new Map()),
            (this._styleSummary = {}),
            (this._pendingStyles = {}),
            (this._backFill = {}),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._localTimelineStyles = Object.create(this._backFill, {})),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(t)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                t,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.getCurrentStyleProperties().length > 0;
            default:
              return !0;
          }
        }
        getCurrentStyleProperties() {
          return Object.keys(this._currentKeyframe);
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(e) {
          const t =
            1 == this._keyframes.size &&
            Object.keys(this._pendingStyles).length;
          this.duration || t
            ? (this.forwardTime(this.currentTime + e),
              t && this.snapshotCurrentStyles())
            : (this.startTime += e);
        }
        fork(e, t) {
          return (
            this.applyStylesToKeyframe(),
            new Wa(
              this._driver,
              e,
              t || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = Object.create(this._backFill, {})),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(e) {
          this.applyStylesToKeyframe(),
            (this.duration = e),
            this._loadKeyframe();
        }
        _updateStyle(e, t) {
          (this._localTimelineStyles[e] = t),
            (this._globalTimelineStyles[e] = t),
            (this._styleSummary[e] = { time: this.currentTime, value: t });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(e) {
          e && (this._previousKeyframe.easing = e),
            Object.keys(this._globalTimelineStyles).forEach((t) => {
              (this._backFill[t] = this._globalTimelineStyles[t] || Mn),
                (this._currentKeyframe[t] = Mn);
            }),
            (this._currentEmptyStepKeyframe = this._currentKeyframe);
        }
        setStyles(e, t, i, r) {
          t && (this._previousKeyframe.easing = t);
          const s = (r && r.params) || {},
            o = (function lV(n, e) {
              const t = {};
              let i;
              return (
                n.forEach((r) => {
                  "*" === r
                    ? ((i = i || Object.keys(e)),
                      i.forEach((s) => {
                        t[s] = Mn;
                      }))
                    : $n(r, !1, t);
                }),
                t
              );
            })(e, this._globalTimelineStyles);
          Object.keys(o).forEach((a) => {
            const c = Pa(o[a], s, i);
            (this._pendingStyles[a] = c),
              this._localTimelineStyles.hasOwnProperty(a) ||
                (this._backFill[a] = this._globalTimelineStyles.hasOwnProperty(
                  a
                )
                  ? this._globalTimelineStyles[a]
                  : Mn),
              this._updateStyle(a, c);
          });
        }
        applyStylesToKeyframe() {
          const e = this._pendingStyles,
            t = Object.keys(e);
          0 != t.length &&
            ((this._pendingStyles = {}),
            t.forEach((i) => {
              this._currentKeyframe[i] = e[i];
            }),
            Object.keys(this._localTimelineStyles).forEach((i) => {
              this._currentKeyframe.hasOwnProperty(i) ||
                (this._currentKeyframe[i] = this._localTimelineStyles[i]);
            }));
        }
        snapshotCurrentStyles() {
          Object.keys(this._localTimelineStyles).forEach((e) => {
            const t = this._localTimelineStyles[e];
            (this._pendingStyles[e] = t), this._updateStyle(e, t);
          });
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const e = [];
          for (let t in this._currentKeyframe) e.push(t);
          return e;
        }
        mergeTimelineCollectedStyles(e) {
          Object.keys(e._styleSummary).forEach((t) => {
            const i = this._styleSummary[t],
              r = e._styleSummary[t];
            (!i || r.time > i.time) && this._updateStyle(t, r.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const e = new Set(),
            t = new Set(),
            i = 1 === this._keyframes.size && 0 === this.duration;
          let r = [];
          this._keyframes.forEach((a, c) => {
            const l = $n(a, !0);
            Object.keys(l).forEach((u) => {
              const f = l[u];
              "!" == f ? e.add(u) : f == Mn && t.add(u);
            }),
              i || (l.offset = c / this.duration),
              r.push(l);
          });
          const s = e.size ? Fa(e.values()) : [],
            o = t.size ? Fa(t.values()) : [];
          if (i) {
            const a = r[0],
              c = Bi(a);
            (a.offset = 0), (c.offset = 1), (r = [a, c]);
          }
          return Nc(
            this.element,
            r,
            s,
            o,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class cV extends Wa {
        constructor(e, t, i, r, s, o, a = !1) {
          super(e, t, o.delay),
            (this.keyframes = i),
            (this.preStyleProps = r),
            (this.postStyleProps = s),
            (this._stretchStartingKeyframe = a),
            (this.timings = {
              duration: o.duration,
              delay: o.delay,
              easing: o.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let e = this.keyframes,
            { delay: t, duration: i, easing: r } = this.timings;
          if (this._stretchStartingKeyframe && t) {
            const s = [],
              o = i + t,
              a = t / o,
              c = $n(e[0], !1);
            (c.offset = 0), s.push(c);
            const l = $n(e[0], !1);
            (l.offset = Wp(a)), s.push(l);
            const u = e.length - 1;
            for (let f = 1; f <= u; f++) {
              let h = $n(e[f], !1);
              (h.offset = Wp((t + h.offset * i) / o)), s.push(h);
            }
            (i = o), (t = 0), (r = ""), (e = s);
          }
          return Nc(
            this.element,
            e,
            this.preStyleProps,
            this.postStyleProps,
            i,
            t,
            r,
            !0
          );
        }
      }
      function Wp(n, e = 3) {
        const t = Math.pow(10, e - 1);
        return Math.round(n * t) / t;
      }
      class Ic {}
      class uV extends Ic {
        normalizePropertyName(e, t) {
          return xc(e);
        }
        normalizeStyleValue(e, t, i, r) {
          let s = "";
          const o = i.toString().trim();
          if (fV[t] && 0 !== i && "0" !== i)
            if ("number" == typeof i) s = "px";
            else {
              const a = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
              a &&
                0 == a[1].length &&
                r.push(`Please provide a CSS unit value for ${e}:${i}`);
            }
          return o + s;
        }
      }
      const fV = (() =>
        (function hV(n) {
          const e = {};
          return n.forEach((t) => (e[t] = !0)), e;
        })(
          "width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective".split(
            ","
          )
        ))();
      function qp(n, e, t, i, r, s, o, a, c, l, u, f, h) {
        return {
          type: 0,
          element: n,
          triggerName: e,
          isRemovalTransition: r,
          fromState: t,
          fromStyles: s,
          toState: i,
          toStyles: o,
          timelines: a,
          queriedElements: c,
          preStyleProps: l,
          postStyleProps: u,
          totalTime: f,
          errors: h,
        };
      }
      const Hc = {};
      class Zp {
        constructor(e, t, i) {
          (this._triggerName = e), (this.ast = t), (this._stateStyles = i);
        }
        match(e, t, i, r) {
          return (function dV(n, e, t, i, r) {
            return n.some((s) => s(e, t, i, r));
          })(this.ast.matchers, e, t, i, r);
        }
        buildStyles(e, t, i) {
          const r = this._stateStyles["*"],
            s = this._stateStyles[e],
            o = r ? r.buildStyles(t, i) : {};
          return s ? s.buildStyles(t, i) : o;
        }
        build(e, t, i, r, s, o, a, c, l, u) {
          const f = [],
            h = (this.ast.options && this.ast.options.params) || Hc,
            p = this.buildStyles(i, (a && a.params) || Hc, f),
            m = (c && c.params) || Hc,
            g = this.buildStyles(r, m, f),
            y = new Set(),
            v = new Map(),
            M = new Map(),
            E = "void" === r,
            F = { params: Object.assign(Object.assign({}, h), m) },
            le = u ? [] : Vc(e, t, this.ast.animation, s, o, p, g, F, l, f);
          let xe = 0;
          if (
            (le.forEach((Lt) => {
              xe = Math.max(Lt.duration + Lt.delay, xe);
            }),
            f.length)
          )
            return qp(t, this._triggerName, i, r, E, p, g, [], [], v, M, xe, f);
          le.forEach((Lt) => {
            const ct = Lt.element,
              Ki = qt(v, ct, {});
            Lt.preStyleProps.forEach((T1) => (Ki[T1] = !0));
            const xn = qt(M, ct, {});
            Lt.postStyleProps.forEach((T1) => (xn[T1] = !0)),
              ct !== t && y.add(ct);
          });
          const zt = Fa(y.values());
          return qp(t, this._triggerName, i, r, E, p, g, le, zt, v, M, xe);
        }
      }
      class pV {
        constructor(e, t, i) {
          (this.styles = e), (this.defaultParams = t), (this.normalizer = i);
        }
        buildStyles(e, t) {
          const i = {},
            r = Bi(this.defaultParams);
          return (
            Object.keys(e).forEach((s) => {
              const o = e[s];
              null != o && (r[s] = o);
            }),
            this.styles.styles.forEach((s) => {
              if ("string" != typeof s) {
                const o = s;
                Object.keys(o).forEach((a) => {
                  let c = o[a];
                  c.length > 1 && (c = Pa(c, r, t));
                  const l = this.normalizer.normalizePropertyName(a, t);
                  (c = this.normalizer.normalizeStyleValue(a, l, c, t)),
                    (i[l] = c);
                });
              }
            }),
            i
          );
        }
      }
      class gV {
        constructor(e, t, i) {
          (this.name = e),
            (this.ast = t),
            (this._normalizer = i),
            (this.transitionFactories = []),
            (this.states = {}),
            t.states.forEach((r) => {
              this.states[r.name] = new pV(
                r.style,
                (r.options && r.options.params) || {},
                i
              );
            }),
            Kp(this.states, "true", "1"),
            Kp(this.states, "false", "0"),
            t.transitions.forEach((r) => {
              this.transitionFactories.push(new Zp(e, r, this.states));
            }),
            (this.fallbackTransition = (function vV(n, e, t) {
              return new Zp(
                n,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(o, a) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                e
              );
            })(e, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(e, t, i, r) {
          return (
            this.transitionFactories.find((o) => o.match(e, t, i, r)) || null
          );
        }
        matchStyles(e, t, i) {
          return this.fallbackTransition.buildStyles(e, t, i);
        }
      }
      function Kp(n, e, t) {
        n.hasOwnProperty(e)
          ? n.hasOwnProperty(t) || (n[t] = n[e])
          : n.hasOwnProperty(t) && (n[e] = n[t]);
      }
      const _V = new $a();
      class yV {
        constructor(e, t, i) {
          (this.bodyNode = e),
            (this._driver = t),
            (this._normalizer = i),
            (this._animations = {}),
            (this._playersById = {}),
            (this.players = []);
        }
        register(e, t) {
          const i = [],
            r = Lc(this._driver, t, i);
          if (i.length)
            throw new Error(
              `Unable to build the animation due to the following errors: ${i.join(
                "\n"
              )}`
            );
          this._animations[e] = r;
        }
        _buildPlayer(e, t, i) {
          const r = e.element,
            s = zp(0, this._normalizer, 0, e.keyframes, t, i);
          return this._driver.animate(
            r,
            s,
            e.duration,
            e.delay,
            e.easing,
            [],
            !0
          );
        }
        create(e, t, i = {}) {
          const r = [],
            s = this._animations[e];
          let o;
          const a = new Map();
          if (
            (s
              ? ((o = Vc(this._driver, t, s, Dc, ka, {}, {}, i, _V, r)),
                o.forEach((u) => {
                  const f = qt(a, u.element, {});
                  u.postStyleProps.forEach((h) => (f[h] = null));
                }))
              : (r.push(
                  "The requested animation doesn't exist or has already been destroyed"
                ),
                (o = [])),
            r.length)
          )
            throw new Error(
              `Unable to create the animation due to the following errors: ${r.join(
                "\n"
              )}`
            );
          a.forEach((u, f) => {
            Object.keys(u).forEach((h) => {
              u[h] = this._driver.computeStyle(f, h, Mn);
            });
          });
          const l = Un(
            o.map((u) => {
              const f = a.get(u.element);
              return this._buildPlayer(u, {}, f);
            })
          );
          return (
            (this._playersById[e] = l),
            l.onDestroy(() => this.destroy(e)),
            this.players.push(l),
            l
          );
        }
        destroy(e) {
          const t = this._getPlayer(e);
          t.destroy(), delete this._playersById[e];
          const i = this.players.indexOf(t);
          i >= 0 && this.players.splice(i, 1);
        }
        _getPlayer(e) {
          const t = this._playersById[e];
          if (!t)
            throw new Error(
              `Unable to find the timeline player referenced by ${e}`
            );
          return t;
        }
        listen(e, t, i, r) {
          const s = _c(t, "", "", "");
          return gc(this._getPlayer(e), i, s, r), () => {};
        }
        command(e, t, i, r) {
          if ("register" == i) return void this.register(e, r[0]);
          if ("create" == i) return void this.create(e, t, r[0] || {});
          const s = this._getPlayer(e);
          switch (i) {
            case "play":
              s.play();
              break;
            case "pause":
              s.pause();
              break;
            case "reset":
              s.reset();
              break;
            case "restart":
              s.restart();
              break;
            case "finish":
              s.finish();
              break;
            case "init":
              s.init();
              break;
            case "setPosition":
              s.setPosition(parseFloat(r[0]));
              break;
            case "destroy":
              this.destroy(e);
          }
        }
      }
      const Yp = "ng-animate-queued",
        Oc = "ng-animate-disabled",
        DV = [],
        Qp = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        EV = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        u1 = "__ng_removed";
      class Pc {
        constructor(e, t = "") {
          this.namespaceId = t;
          const i = e && e.hasOwnProperty("value");
          if (
            ((this.value = (function zV(n) {
              return null != n ? n : null;
            })(i ? e.value : e)),
            i)
          ) {
            const s = Bi(e);
            delete s.value, (this.options = s);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(e) {
          const t = e.params;
          if (t) {
            const i = this.options.params;
            Object.keys(t).forEach((r) => {
              null == i[r] && (i[r] = t[r]);
            });
          }
        }
      }
      const gs = "void",
        Fc = new Pc(gs);
      class SV {
        constructor(e, t, i) {
          (this.id = e),
            (this.hostElement = t),
            (this._engine = i),
            (this.players = []),
            (this._triggers = {}),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + e),
            f1(t, this._hostClassName);
        }
        listen(e, t, i, r) {
          if (!this._triggers.hasOwnProperty(t))
            throw new Error(
              `Unable to listen on the animation trigger event "${i}" because the animation trigger "${t}" doesn't exist!`
            );
          if (null == i || 0 == i.length)
            throw new Error(
              `Unable to listen on the animation trigger "${t}" because the provided event is undefined!`
            );
          if (
            !(function LV(n) {
              return "start" == n || "done" == n;
            })(i)
          )
            throw new Error(
              `The provided animation trigger event "${i}" for the animation trigger "${t}" is not supported!`
            );
          const s = qt(this._elementListeners, e, []),
            o = { name: t, phase: i, callback: r };
          s.push(o);
          const a = qt(this._engine.statesByElement, e, {});
          return (
            a.hasOwnProperty(t) ||
              (f1(e, Ia), f1(e, Ia + "-" + t), (a[t] = Fc)),
            () => {
              this._engine.afterFlush(() => {
                const c = s.indexOf(o);
                c >= 0 && s.splice(c, 1), this._triggers[t] || delete a[t];
              });
            }
          );
        }
        register(e, t) {
          return !this._triggers[e] && ((this._triggers[e] = t), !0);
        }
        _getTrigger(e) {
          const t = this._triggers[e];
          if (!t)
            throw new Error(
              `The provided animation trigger "${e}" has not been registered!`
            );
          return t;
        }
        trigger(e, t, i, r = !0) {
          const s = this._getTrigger(t),
            o = new Rc(this.id, t, e);
          let a = this._engine.statesByElement.get(e);
          a ||
            (f1(e, Ia),
            f1(e, Ia + "-" + t),
            this._engine.statesByElement.set(e, (a = {})));
          let c = a[t];
          const l = new Pc(i, this.id);
          if (
            (!(i && i.hasOwnProperty("value")) &&
              c &&
              l.absorbOptions(c.options),
            (a[t] = l),
            c || (c = Fc),
            l.value !== gs && c.value === l.value)
          ) {
            if (
              !(function VV(n, e) {
                const t = Object.keys(n),
                  i = Object.keys(e);
                if (t.length != i.length) return !1;
                for (let r = 0; r < t.length; r++) {
                  const s = t[r];
                  if (!e.hasOwnProperty(s) || n[s] !== e[s]) return !1;
                }
                return !0;
              })(c.params, l.params)
            ) {
              const m = [],
                g = s.matchStyles(c.value, c.params, m),
                y = s.matchStyles(l.value, l.params, m);
              m.length
                ? this._engine.reportError(m)
                : this._engine.afterFlush(() => {
                    D2(e, g), J1(e, y);
                  });
            }
            return;
          }
          const h = qt(this._engine.playersByElement, e, []);
          h.forEach((m) => {
            m.namespaceId == this.id &&
              m.triggerName == t &&
              m.queued &&
              m.destroy();
          });
          let d = s.matchTransition(c.value, l.value, e, l.params),
            p = !1;
          if (!d) {
            if (!r) return;
            (d = s.fallbackTransition), (p = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: e,
              triggerName: t,
              transition: d,
              fromState: c,
              toState: l,
              player: o,
              isFallbackTransition: p,
            }),
            p ||
              (f1(e, Yp),
              o.onStart(() => {
                ji(e, Yp);
              })),
            o.onDone(() => {
              let m = this.players.indexOf(o);
              m >= 0 && this.players.splice(m, 1);
              const g = this._engine.playersByElement.get(e);
              if (g) {
                let y = g.indexOf(o);
                y >= 0 && g.splice(y, 1);
              }
            }),
            this.players.push(o),
            h.push(o),
            o
          );
        }
        deregister(e) {
          delete this._triggers[e],
            this._engine.statesByElement.forEach((t, i) => {
              delete t[e];
            }),
            this._elementListeners.forEach((t, i) => {
              this._elementListeners.set(
                i,
                t.filter((r) => r.name != e)
              );
            });
        }
        clearElementCache(e) {
          this._engine.statesByElement.delete(e),
            this._elementListeners.delete(e);
          const t = this._engine.playersByElement.get(e);
          t &&
            (t.forEach((i) => i.destroy()),
            this._engine.playersByElement.delete(e));
        }
        _signalRemovalForInnerTriggers(e, t) {
          const i = this._engine.driver.query(e, Ha, !0);
          i.forEach((r) => {
            if (r[u1]) return;
            const s = this._engine.fetchNamespacesByElement(r);
            s.size
              ? s.forEach((o) => o.triggerLeaveAnimation(r, t, !1, !0))
              : this.clearElementCache(r);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              i.forEach((r) => this.clearElementCache(r))
            );
        }
        triggerLeaveAnimation(e, t, i, r) {
          const s = this._engine.statesByElement.get(e),
            o = new Map();
          if (s) {
            const a = [];
            if (
              (Object.keys(s).forEach((c) => {
                if ((o.set(c, s[c].value), this._triggers[c])) {
                  const l = this.trigger(e, c, gs, r);
                  l && a.push(l);
                }
              }),
              a.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, e, !0, t, o),
                i && Un(a).onDone(() => this._engine.processLeaveNode(e)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(e) {
          const t = this._elementListeners.get(e),
            i = this._engine.statesByElement.get(e);
          if (t && i) {
            const r = new Set();
            t.forEach((s) => {
              const o = s.name;
              if (r.has(o)) return;
              r.add(o);
              const c = this._triggers[o].fallbackTransition,
                l = i[o] || Fc,
                u = new Pc(gs),
                f = new Rc(this.id, o, e);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: e,
                  triggerName: o,
                  transition: c,
                  fromState: l,
                  toState: u,
                  player: f,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(e, t) {
          const i = this._engine;
          if (
            (e.childElementCount && this._signalRemovalForInnerTriggers(e, t),
            this.triggerLeaveAnimation(e, t, !0))
          )
            return;
          let r = !1;
          if (i.totalAnimations) {
            const s = i.players.length ? i.playersByQueriedElement.get(e) : [];
            if (s && s.length) r = !0;
            else {
              let o = e;
              for (; (o = o.parentNode); )
                if (i.statesByElement.get(o)) {
                  r = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(e), r))
            i.markElementAsRemoved(this.id, e, !1, t);
          else {
            const s = e[u1];
            (!s || s === Qp) &&
              (i.afterFlush(() => this.clearElementCache(e)),
              i.destroyInnerAnimations(e),
              i._onRemovalComplete(e, t));
          }
        }
        insertNode(e, t) {
          f1(e, this._hostClassName);
        }
        drainQueuedTransitions(e) {
          const t = [];
          return (
            this._queue.forEach((i) => {
              const r = i.player;
              if (r.destroyed) return;
              const s = i.element,
                o = this._elementListeners.get(s);
              o &&
                o.forEach((a) => {
                  if (a.name == i.triggerName) {
                    const c = _c(
                      s,
                      i.triggerName,
                      i.fromState.value,
                      i.toState.value
                    );
                    (c._data = e), gc(i.player, a.phase, c, a.callback);
                  }
                }),
                r.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      r.destroy();
                    })
                  : t.push(i);
            }),
            (this._queue = []),
            t.sort((i, r) => {
              const s = i.transition.ast.depCount,
                o = r.transition.ast.depCount;
              return 0 == s || 0 == o
                ? s - o
                : this._engine.driver.containsElement(i.element, r.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(e) {
          this.players.forEach((t) => t.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, e);
        }
        elementContainsData(e) {
          let t = !1;
          return (
            this._elementListeners.has(e) && (t = !0),
            (t = !!this._queue.find((i) => i.element === e) || t),
            t
          );
        }
      }
      class AV {
        constructor(e, t, i) {
          (this.bodyNode = e),
            (this.driver = t),
            (this._normalizer = i),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (r, s) => {});
        }
        _onRemovalComplete(e, t) {
          this.onRemovalComplete(e, t);
        }
        get queuedPlayers() {
          const e = [];
          return (
            this._namespaceList.forEach((t) => {
              t.players.forEach((i) => {
                i.queued && e.push(i);
              });
            }),
            e
          );
        }
        createNamespace(e, t) {
          const i = new SV(e, t, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, t)
              ? this._balanceNamespaceList(i, t)
              : (this.newHostElements.set(t, i), this.collectEnterElement(t)),
            (this._namespaceLookup[e] = i)
          );
        }
        _balanceNamespaceList(e, t) {
          const i = this._namespaceList.length - 1;
          if (i >= 0) {
            let r = !1;
            for (let s = i; s >= 0; s--)
              if (
                this.driver.containsElement(
                  this._namespaceList[s].hostElement,
                  t
                )
              ) {
                this._namespaceList.splice(s + 1, 0, e), (r = !0);
                break;
              }
            r || this._namespaceList.splice(0, 0, e);
          } else this._namespaceList.push(e);
          return this.namespacesByHostElement.set(t, e), e;
        }
        register(e, t) {
          let i = this._namespaceLookup[e];
          return i || (i = this.createNamespace(e, t)), i;
        }
        registerTrigger(e, t, i) {
          let r = this._namespaceLookup[e];
          r && r.register(t, i) && this.totalAnimations++;
        }
        destroy(e, t) {
          if (!e) return;
          const i = this._fetchNamespace(e);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(i.hostElement),
              delete this._namespaceLookup[e];
            const r = this._namespaceList.indexOf(i);
            r >= 0 && this._namespaceList.splice(r, 1);
          }),
            this.afterFlushAnimationsDone(() => i.destroy(t));
        }
        _fetchNamespace(e) {
          return this._namespaceLookup[e];
        }
        fetchNamespacesByElement(e) {
          const t = new Set(),
            i = this.statesByElement.get(e);
          if (i) {
            const r = Object.keys(i);
            for (let s = 0; s < r.length; s++) {
              const o = i[r[s]].namespaceId;
              if (o) {
                const a = this._fetchNamespace(o);
                a && t.add(a);
              }
            }
          }
          return t;
        }
        trigger(e, t, i, r) {
          if (qa(t)) {
            const s = this._fetchNamespace(e);
            if (s) return s.trigger(t, i, r), !0;
          }
          return !1;
        }
        insertNode(e, t, i, r) {
          if (!qa(t)) return;
          const s = t[u1];
          if (s && s.setForRemoval) {
            (s.setForRemoval = !1), (s.setForMove = !0);
            const o = this.collectedLeaveElements.indexOf(t);
            o >= 0 && this.collectedLeaveElements.splice(o, 1);
          }
          if (e) {
            const o = this._fetchNamespace(e);
            o && o.insertNode(t, i);
          }
          r && this.collectEnterElement(t);
        }
        collectEnterElement(e) {
          this.collectedEnterElements.push(e);
        }
        markElementAsDisabled(e, t) {
          t
            ? this.disabledNodes.has(e) ||
              (this.disabledNodes.add(e), f1(e, Oc))
            : this.disabledNodes.has(e) &&
              (this.disabledNodes.delete(e), ji(e, Oc));
        }
        removeNode(e, t, i, r) {
          if (qa(t)) {
            const s = e ? this._fetchNamespace(e) : null;
            if (
              (s ? s.removeNode(t, r) : this.markElementAsRemoved(e, t, !1, r),
              i)
            ) {
              const o = this.namespacesByHostElement.get(t);
              o && o.id !== e && o.removeNode(t, r);
            }
          } else this._onRemovalComplete(t, r);
        }
        markElementAsRemoved(e, t, i, r, s) {
          this.collectedLeaveElements.push(t),
            (t[u1] = {
              namespaceId: e,
              setForRemoval: r,
              hasAnimation: i,
              removedBeforeQueried: !1,
              previousTriggersValues: s,
            });
        }
        listen(e, t, i, r, s) {
          return qa(t) ? this._fetchNamespace(e).listen(t, i, r, s) : () => {};
        }
        _buildInstruction(e, t, i, r, s) {
          return e.transition.build(
            this.driver,
            e.element,
            e.fromState.value,
            e.toState.value,
            i,
            r,
            e.fromState.options,
            e.toState.options,
            t,
            s
          );
        }
        destroyInnerAnimations(e) {
          let t = this.driver.query(e, Ha, !0);
          t.forEach((i) => this.destroyActiveAnimationsForElement(i)),
            0 != this.playersByQueriedElement.size &&
              ((t = this.driver.query(e, Ec, !0)),
              t.forEach((i) => this.finishActiveQueriedAnimationOnElement(i)));
        }
        destroyActiveAnimationsForElement(e) {
          const t = this.playersByElement.get(e);
          t &&
            t.forEach((i) => {
              i.queued ? (i.markedForDestroy = !0) : i.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(e) {
          const t = this.playersByQueriedElement.get(e);
          t && t.forEach((i) => i.finish());
        }
        whenRenderingDone() {
          return new Promise((e) => {
            if (this.players.length) return Un(this.players).onDone(() => e());
            e();
          });
        }
        processLeaveNode(e) {
          var t;
          const i = e[u1];
          if (i && i.setForRemoval) {
            if (((e[u1] = Qp), i.namespaceId)) {
              this.destroyInnerAnimations(e);
              const r = this._fetchNamespace(i.namespaceId);
              r && r.clearElementCache(e);
            }
            this._onRemovalComplete(e, i.setForRemoval);
          }
          (null === (t = e.classList) || void 0 === t
            ? void 0
            : t.contains(Oc)) && this.markElementAsDisabled(e, !1),
            this.driver.query(e, ".ng-animate-disabled", !0).forEach((r) => {
              this.markElementAsDisabled(r, !1);
            });
        }
        flush(e = -1) {
          let t = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((i, r) =>
                this._balanceNamespaceList(i, r)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let i = 0; i < this.collectedEnterElements.length; i++)
              f1(this.collectedEnterElements[i], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const i = [];
            try {
              t = this._flushAnimations(i, e);
            } finally {
              for (let r = 0; r < i.length; r++) i[r]();
            }
          } else
            for (let i = 0; i < this.collectedLeaveElements.length; i++)
              this.processLeaveNode(this.collectedLeaveElements[i]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((i) => i()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const i = this._whenQuietFns;
            (this._whenQuietFns = []),
              t.length
                ? Un(t).onDone(() => {
                    i.forEach((r) => r());
                  })
                : i.forEach((r) => r());
          }
        }
        reportError(e) {
          throw new Error(
            `Unable to process animations due to the following failed trigger transitions\n ${e.join(
              "\n"
            )}`
          );
        }
        _flushAnimations(e, t) {
          const i = new $a(),
            r = [],
            s = new Map(),
            o = [],
            a = new Map(),
            c = new Map(),
            l = new Map(),
            u = new Set();
          this.disabledNodes.forEach((T) => {
            u.add(T);
            const k = this.driver.query(T, ".ng-animate-queued", !0);
            for (let H = 0; H < k.length; H++) u.add(k[H]);
          });
          const f = this.bodyNode,
            h = Array.from(this.statesByElement.keys()),
            d = em(h, this.collectedEnterElements),
            p = new Map();
          let m = 0;
          d.forEach((T, k) => {
            const H = Dc + m++;
            p.set(k, H), T.forEach((ue) => f1(ue, H));
          });
          const g = [],
            y = new Set(),
            v = new Set();
          for (let T = 0; T < this.collectedLeaveElements.length; T++) {
            const k = this.collectedLeaveElements[T],
              H = k[u1];
            H &&
              H.setForRemoval &&
              (g.push(k),
              y.add(k),
              H.hasAnimation
                ? this.driver
                    .query(k, ".ng-star-inserted", !0)
                    .forEach((ue) => y.add(ue))
                : v.add(k));
          }
          const M = new Map(),
            E = em(h, Array.from(y));
          E.forEach((T, k) => {
            const H = ka + m++;
            M.set(k, H), T.forEach((ue) => f1(ue, H));
          }),
            e.push(() => {
              d.forEach((T, k) => {
                const H = p.get(k);
                T.forEach((ue) => ji(ue, H));
              }),
                E.forEach((T, k) => {
                  const H = M.get(k);
                  T.forEach((ue) => ji(ue, H));
                }),
                g.forEach((T) => {
                  this.processLeaveNode(T);
                });
            });
          const F = [],
            le = [];
          for (let T = this._namespaceList.length - 1; T >= 0; T--)
            this._namespaceList[T].drainQueuedTransitions(t).forEach((H) => {
              const ue = H.player,
                lt = H.element;
              if ((F.push(ue), this.collectedEnterElements.length)) {
                const Tt = lt[u1];
                if (Tt && Tt.setForMove) {
                  if (
                    Tt.previousTriggersValues &&
                    Tt.previousTriggersValues.has(H.triggerName)
                  ) {
                    const L2 = Tt.previousTriggersValues.get(H.triggerName),
                      Kn = this.statesByElement.get(H.element);
                    Kn && Kn[H.triggerName] && (Kn[H.triggerName].value = L2);
                  }
                  return void ue.destroy();
                }
              }
              const nn = !f || !this.driver.containsElement(f, lt),
                Yt = M.get(lt),
                Zn = p.get(lt),
                Ie = this._buildInstruction(H, i, Zn, Yt, nn);
              if (Ie.errors && Ie.errors.length) return void le.push(Ie);
              if (nn)
                return (
                  ue.onStart(() => D2(lt, Ie.fromStyles)),
                  ue.onDestroy(() => J1(lt, Ie.toStyles)),
                  void r.push(ue)
                );
              if (H.isFallbackTransition)
                return (
                  ue.onStart(() => D2(lt, Ie.fromStyles)),
                  ue.onDestroy(() => J1(lt, Ie.toStyles)),
                  void r.push(ue)
                );
              const f_ = [];
              Ie.timelines.forEach((Tt) => {
                (Tt.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(Tt.element) || f_.push(Tt);
              }),
                (Ie.timelines = f_),
                i.append(lt, Ie.timelines),
                o.push({ instruction: Ie, player: ue, element: lt }),
                Ie.queriedElements.forEach((Tt) => qt(a, Tt, []).push(ue)),
                Ie.preStyleProps.forEach((Tt, L2) => {
                  const Kn = Object.keys(Tt);
                  if (Kn.length) {
                    let T2 = c.get(L2);
                    T2 || c.set(L2, (T2 = new Set())),
                      Kn.forEach((G8) => T2.add(G8));
                  }
                }),
                Ie.postStyleProps.forEach((Tt, L2) => {
                  const Kn = Object.keys(Tt);
                  let T2 = l.get(L2);
                  T2 || l.set(L2, (T2 = new Set())),
                    Kn.forEach((G8) => T2.add(G8));
                });
            });
          if (le.length) {
            const T = [];
            le.forEach((k) => {
              T.push(`@${k.triggerName} has failed due to:\n`),
                k.errors.forEach((H) => T.push(`- ${H}\n`));
            }),
              F.forEach((k) => k.destroy()),
              this.reportError(T);
          }
          const xe = new Map(),
            zt = new Map();
          o.forEach((T) => {
            const k = T.element;
            i.has(k) &&
              (zt.set(k, k),
              this._beforeAnimationBuild(
                T.player.namespaceId,
                T.instruction,
                xe
              ));
          }),
            r.forEach((T) => {
              const k = T.element;
              this._getPreviousPlayers(
                k,
                !1,
                T.namespaceId,
                T.triggerName,
                null
              ).forEach((ue) => {
                qt(xe, k, []).push(ue), ue.destroy();
              });
            });
          const Lt = g.filter((T) => nm(T, c, l)),
            ct = new Map();
          Jp(ct, this.driver, v, l, Mn).forEach((T) => {
            nm(T, c, l) && Lt.push(T);
          });
          const xn = new Map();
          d.forEach((T, k) => {
            Jp(xn, this.driver, new Set(T), c, "!");
          }),
            Lt.forEach((T) => {
              const k = ct.get(T),
                H = xn.get(T);
              ct.set(T, Object.assign(Object.assign({}, k), H));
            });
          const T1 = [],
            Yi = [],
            Qi = {};
          o.forEach((T) => {
            const { element: k, player: H, instruction: ue } = T;
            if (i.has(k)) {
              if (u.has(k))
                return (
                  H.onDestroy(() => J1(k, ue.toStyles)),
                  (H.disabled = !0),
                  H.overrideTotalTime(ue.totalTime),
                  void r.push(H)
                );
              let lt = Qi;
              if (zt.size > 1) {
                let Yt = k;
                const Zn = [];
                for (; (Yt = Yt.parentNode); ) {
                  const Ie = zt.get(Yt);
                  if (Ie) {
                    lt = Ie;
                    break;
                  }
                  Zn.push(Yt);
                }
                Zn.forEach((Ie) => zt.set(Ie, lt));
              }
              const nn = this._buildAnimation(H.namespaceId, ue, xe, s, xn, ct);
              if ((H.setRealPlayer(nn), lt === Qi)) T1.push(H);
              else {
                const Yt = this.playersByElement.get(lt);
                Yt && Yt.length && (H.parentPlayer = Un(Yt)), r.push(H);
              }
            } else
              D2(k, ue.fromStyles),
                H.onDestroy(() => J1(k, ue.toStyles)),
                Yi.push(H),
                u.has(k) && r.push(H);
          }),
            Yi.forEach((T) => {
              const k = s.get(T.element);
              if (k && k.length) {
                const H = Un(k);
                T.setRealPlayer(H);
              }
            }),
            r.forEach((T) => {
              T.parentPlayer ? T.syncPlayerEvents(T.parentPlayer) : T.destroy();
            });
          for (let T = 0; T < g.length; T++) {
            const k = g[T],
              H = k[u1];
            if ((ji(k, ka), H && H.hasAnimation)) continue;
            let ue = [];
            if (a.size) {
              let nn = a.get(k);
              nn && nn.length && ue.push(...nn);
              let Yt = this.driver.query(k, Ec, !0);
              for (let Zn = 0; Zn < Yt.length; Zn++) {
                let Ie = a.get(Yt[Zn]);
                Ie && Ie.length && ue.push(...Ie);
              }
            }
            const lt = ue.filter((nn) => !nn.destroyed);
            lt.length ? TV(this, k, lt) : this.processLeaveNode(k);
          }
          return (
            (g.length = 0),
            T1.forEach((T) => {
              this.players.push(T),
                T.onDone(() => {
                  T.destroy();
                  const k = this.players.indexOf(T);
                  this.players.splice(k, 1);
                }),
                T.play();
            }),
            T1
          );
        }
        elementContainsData(e, t) {
          let i = !1;
          const r = t[u1];
          return (
            r && r.setForRemoval && (i = !0),
            this.playersByElement.has(t) && (i = !0),
            this.playersByQueriedElement.has(t) && (i = !0),
            this.statesByElement.has(t) && (i = !0),
            this._fetchNamespace(e).elementContainsData(t) || i
          );
        }
        afterFlush(e) {
          this._flushFns.push(e);
        }
        afterFlushAnimationsDone(e) {
          this._whenQuietFns.push(e);
        }
        _getPreviousPlayers(e, t, i, r, s) {
          let o = [];
          if (t) {
            const a = this.playersByQueriedElement.get(e);
            a && (o = a);
          } else {
            const a = this.playersByElement.get(e);
            if (a) {
              const c = !s || s == gs;
              a.forEach((l) => {
                l.queued || (!c && l.triggerName != r) || o.push(l);
              });
            }
          }
          return (
            (i || r) &&
              (o = o.filter(
                (a) => !((i && i != a.namespaceId) || (r && r != a.triggerName))
              )),
            o
          );
        }
        _beforeAnimationBuild(e, t, i) {
          const s = t.element,
            o = t.isRemovalTransition ? void 0 : e,
            a = t.isRemovalTransition ? void 0 : t.triggerName;
          for (const c of t.timelines) {
            const l = c.element,
              u = l !== s,
              f = qt(i, l, []);
            this._getPreviousPlayers(l, u, o, a, t.toState).forEach((d) => {
              const p = d.getRealPlayer();
              p.beforeDestroy && p.beforeDestroy(), d.destroy(), f.push(d);
            });
          }
          D2(s, t.fromStyles);
        }
        _buildAnimation(e, t, i, r, s, o) {
          const a = t.triggerName,
            c = t.element,
            l = [],
            u = new Set(),
            f = new Set(),
            h = t.timelines.map((p) => {
              const m = p.element;
              u.add(m);
              const g = m[u1];
              if (g && g.removedBeforeQueried)
                return new Ri(p.duration, p.delay);
              const y = m !== c,
                v = (function NV(n) {
                  const e = [];
                  return tm(n, e), e;
                })((i.get(m) || DV).map((xe) => xe.getRealPlayer())).filter(
                  (xe) => !!xe.element && xe.element === m
                ),
                M = s.get(m),
                E = o.get(m),
                F = zp(0, this._normalizer, 0, p.keyframes, M, E),
                le = this._buildPlayer(p, F, v);
              if ((p.subTimeline && r && f.add(m), y)) {
                const xe = new Rc(e, a, m);
                xe.setRealPlayer(le), l.push(xe);
              }
              return le;
            });
          l.forEach((p) => {
            qt(this.playersByQueriedElement, p.element, []).push(p),
              p.onDone(() =>
                (function xV(n, e, t) {
                  let i;
                  if (n instanceof Map) {
                    if (((i = n.get(e)), i)) {
                      if (i.length) {
                        const r = i.indexOf(t);
                        i.splice(r, 1);
                      }
                      0 == i.length && n.delete(e);
                    }
                  } else if (((i = n[e]), i)) {
                    if (i.length) {
                      const r = i.indexOf(t);
                      i.splice(r, 1);
                    }
                    0 == i.length && delete n[e];
                  }
                  return i;
                })(this.playersByQueriedElement, p.element, p)
              );
          }),
            u.forEach((p) => f1(p, Hp));
          const d = Un(h);
          return (
            d.onDestroy(() => {
              u.forEach((p) => ji(p, Hp)), J1(c, t.toStyles);
            }),
            f.forEach((p) => {
              qt(r, p, []).push(d);
            }),
            d
          );
        }
        _buildPlayer(e, t, i) {
          return t.length > 0
            ? this.driver.animate(
                e.element,
                t,
                e.duration,
                e.delay,
                e.easing,
                i
              )
            : new Ri(e.duration, e.delay);
        }
      }
      class Rc {
        constructor(e, t, i) {
          (this.namespaceId = e),
            (this.triggerName = t),
            (this.element = i),
            (this._player = new Ri()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = {}),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(e) {
          this._containsRealPlayer ||
            ((this._player = e),
            Object.keys(this._queuedCallbacks).forEach((t) => {
              this._queuedCallbacks[t].forEach((i) => gc(e, t, void 0, i));
            }),
            (this._queuedCallbacks = {}),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(e.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(e) {
          this.totalTime = e;
        }
        syncPlayerEvents(e) {
          const t = this._player;
          t.triggerCallback && e.onStart(() => t.triggerCallback("start")),
            e.onDone(() => this.finish()),
            e.onDestroy(() => this.destroy());
        }
        _queueEvent(e, t) {
          qt(this._queuedCallbacks, e, []).push(t);
        }
        onDone(e) {
          this.queued && this._queueEvent("done", e), this._player.onDone(e);
        }
        onStart(e) {
          this.queued && this._queueEvent("start", e), this._player.onStart(e);
        }
        onDestroy(e) {
          this.queued && this._queueEvent("destroy", e),
            this._player.onDestroy(e);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(e) {
          this.queued || this._player.setPosition(e);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(e) {
          const t = this._player;
          t.triggerCallback && t.triggerCallback(e);
        }
      }
      function qa(n) {
        return n && 1 === n.nodeType;
      }
      function Xp(n, e) {
        const t = n.style.display;
        return (n.style.display = null != e ? e : "none"), t;
      }
      function Jp(n, e, t, i, r) {
        const s = [];
        t.forEach((c) => s.push(Xp(c)));
        const o = [];
        i.forEach((c, l) => {
          const u = {};
          c.forEach((f) => {
            const h = (u[f] = e.computeStyle(l, f, r));
            (!h || 0 == h.length) && ((l[u1] = EV), o.push(l));
          }),
            n.set(l, u);
        });
        let a = 0;
        return t.forEach((c) => Xp(c, s[a++])), o;
      }
      function em(n, e) {
        const t = new Map();
        if ((n.forEach((a) => t.set(a, [])), 0 == e.length)) return t;
        const r = new Set(e),
          s = new Map();
        function o(a) {
          if (!a) return 1;
          let c = s.get(a);
          if (c) return c;
          const l = a.parentNode;
          return (c = t.has(l) ? l : r.has(l) ? 1 : o(l)), s.set(a, c), c;
        }
        return (
          e.forEach((a) => {
            const c = o(a);
            1 !== c && t.get(c).push(a);
          }),
          t
        );
      }
      function f1(n, e) {
        var t;
        null === (t = n.classList) || void 0 === t || t.add(e);
      }
      function ji(n, e) {
        var t;
        null === (t = n.classList) || void 0 === t || t.remove(e);
      }
      function TV(n, e, t) {
        Un(t).onDone(() => n.processLeaveNode(e));
      }
      function tm(n, e) {
        for (let t = 0; t < n.length; t++) {
          const i = n[t];
          i instanceof Ap ? tm(i.players, e) : e.push(i);
        }
      }
      function nm(n, e, t) {
        const i = t.get(n);
        if (!i) return !1;
        let r = e.get(n);
        return r ? i.forEach((s) => r.add(s)) : e.set(n, i), t.delete(n), !0;
      }
      class Za {
        constructor(e, t, i) {
          (this.bodyNode = e),
            (this._driver = t),
            (this._normalizer = i),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (r, s) => {}),
            (this._transitionEngine = new AV(e, t, i)),
            (this._timelineEngine = new yV(e, t, i)),
            (this._transitionEngine.onRemovalComplete = (r, s) =>
              this.onRemovalComplete(r, s));
        }
        registerTrigger(e, t, i, r, s) {
          const o = e + "-" + r;
          let a = this._triggerCache[o];
          if (!a) {
            const c = [],
              l = Lc(this._driver, s, c);
            if (c.length)
              throw new Error(
                `The animation trigger "${r}" has failed to build due to the following errors:\n - ${c.join(
                  "\n - "
                )}`
              );
            (a = (function mV(n, e, t) {
              return new gV(n, e, t);
            })(r, l, this._normalizer)),
              (this._triggerCache[o] = a);
          }
          this._transitionEngine.registerTrigger(t, r, a);
        }
        register(e, t) {
          this._transitionEngine.register(e, t);
        }
        destroy(e, t) {
          this._transitionEngine.destroy(e, t);
        }
        onInsert(e, t, i, r) {
          this._transitionEngine.insertNode(e, t, i, r);
        }
        onRemove(e, t, i, r) {
          this._transitionEngine.removeNode(e, t, r || !1, i);
        }
        disableAnimations(e, t) {
          this._transitionEngine.markElementAsDisabled(e, t);
        }
        process(e, t, i, r) {
          if ("@" == i.charAt(0)) {
            const [s, o] = Lp(i);
            this._timelineEngine.command(s, t, o, r);
          } else this._transitionEngine.trigger(e, t, i, r);
        }
        listen(e, t, i, r, s) {
          if ("@" == i.charAt(0)) {
            const [o, a] = Lp(i);
            return this._timelineEngine.listen(o, t, a, s);
          }
          return this._transitionEngine.listen(e, t, i, r, s);
        }
        flush(e = -1) {
          this._transitionEngine.flush(e);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      function im(n, e) {
        let t = null,
          i = null;
        return (
          Array.isArray(e) && e.length
            ? ((t = Bc(e[0])), e.length > 1 && (i = Bc(e[e.length - 1])))
            : e && (t = Bc(e)),
          t || i ? new kV(n, t, i) : null
        );
      }
      let kV = (() => {
        class n {
          constructor(t, i, r) {
            (this._element = t),
              (this._startStyles = i),
              (this._endStyles = r),
              (this._state = 0);
            let s = n.initialStylesByElement.get(t);
            s || n.initialStylesByElement.set(t, (s = {})),
              (this._initialStyles = s);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                J1(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (J1(this._element, this._initialStyles),
                this._endStyles &&
                  (J1(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (n.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (D2(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (D2(this._element, this._endStyles),
                  (this._endStyles = null)),
                J1(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (n.initialStylesByElement = new WeakMap()), n;
      })();
      function Bc(n) {
        let e = null;
        const t = Object.keys(n);
        for (let i = 0; i < t.length; i++) {
          const r = t[i];
          IV(r) && ((e = e || {}), (e[r] = n[r]));
        }
        return e;
      }
      function IV(n) {
        return "display" === n || "position" === n;
      }
      const rm = "animation",
        sm = "animationend";
      class PV {
        constructor(e, t, i, r, s, o, a) {
          (this._element = e),
            (this._name = t),
            (this._duration = i),
            (this._delay = r),
            (this._easing = s),
            (this._fillMode = o),
            (this._onDoneFn = a),
            (this._finished = !1),
            (this._destroyed = !1),
            (this._startTime = 0),
            (this._position = 0),
            (this._eventFn = (c) => this._handleCallback(c));
        }
        apply() {
          (function FV(n, e) {
            const t = Uc(n, "").trim();
            let i = 0;
            t.length &&
              ((i =
                (function BV(n, e) {
                  let t = 0;
                  for (let i = 0; i < n.length; i++) n.charAt(i) === e && t++;
                  return t;
                })(t, ",") + 1),
              (e = `${t}, ${e}`)),
              Ka(n, "", e);
          })(
            this._element,
            `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`
          ),
            cm(this._element, this._eventFn, !1),
            (this._startTime = Date.now());
        }
        pause() {
          om(this._element, this._name, "paused");
        }
        resume() {
          om(this._element, this._name, "running");
        }
        setPosition(e) {
          const t = am(this._element, this._name);
          (this._position = e * this._duration),
            Ka(this._element, "Delay", `-${this._position}ms`, t);
        }
        getPosition() {
          return this._position;
        }
        _handleCallback(e) {
          const t = e._ngTestManualTimestamp || Date.now(),
            i = 1e3 * parseFloat(e.elapsedTime.toFixed(3));
          e.animationName == this._name &&
            Math.max(t - this._startTime, 0) >= this._delay &&
            i >= this._duration &&
            this.finish();
        }
        finish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFn(),
            cm(this._element, this._eventFn, !0));
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.finish(),
            (function RV(n, e) {
              const i = Uc(n, "").split(","),
                r = jc(i, e);
              r >= 0 && (i.splice(r, 1), Ka(n, "", i.join(",")));
            })(this._element, this._name));
        }
      }
      function om(n, e, t) {
        Ka(n, "PlayState", t, am(n, e));
      }
      function am(n, e) {
        const t = Uc(n, "");
        return t.indexOf(",") > 0 ? jc(t.split(","), e) : jc([t], e);
      }
      function jc(n, e) {
        for (let t = 0; t < n.length; t++) if (n[t].indexOf(e) >= 0) return t;
        return -1;
      }
      function cm(n, e, t) {
        t ? n.removeEventListener(sm, e) : n.addEventListener(sm, e);
      }
      function Ka(n, e, t, i) {
        const r = rm + e;
        if (null != i) {
          const s = n.style[r];
          if (s.length) {
            const o = s.split(",");
            (o[i] = t), (t = o.join(","));
          }
        }
        n.style[r] = t;
      }
      function Uc(n, e) {
        return n.style[rm + e] || "";
      }
      class lm {
        constructor(e, t, i, r, s, o, a, c) {
          (this.element = e),
            (this.keyframes = t),
            (this.animationName = i),
            (this._duration = r),
            (this._delay = s),
            (this._finalStyles = a),
            (this._specialStyles = c),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this.currentSnapshot = {}),
            (this._state = 0),
            (this.easing = o || "linear"),
            (this.totalTime = r + s),
            this._buildStyler();
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        destroy() {
          this.init(),
            !(this._state >= 4) &&
              ((this._state = 4),
              this._styler.destroy(),
              this._flushStartFns(),
              this._flushDoneFns(),
              this._specialStyles && this._specialStyles.destroy(),
              this._onDestroyFns.forEach((e) => e()),
              (this._onDestroyFns = []));
        }
        _flushDoneFns() {
          this._onDoneFns.forEach((e) => e()), (this._onDoneFns = []);
        }
        _flushStartFns() {
          this._onStartFns.forEach((e) => e()), (this._onStartFns = []);
        }
        finish() {
          this.init(),
            !(this._state >= 3) &&
              ((this._state = 3),
              this._styler.finish(),
              this._flushStartFns(),
              this._specialStyles && this._specialStyles.finish(),
              this._flushDoneFns());
        }
        setPosition(e) {
          this._styler.setPosition(e);
        }
        getPosition() {
          return this._styler.getPosition();
        }
        hasStarted() {
          return this._state >= 2;
        }
        init() {
          this._state >= 1 ||
            ((this._state = 1),
            this._styler.apply(),
            this._delay && this._styler.pause());
        }
        play() {
          this.init(),
            this.hasStarted() ||
              (this._flushStartFns(),
              (this._state = 2),
              this._specialStyles && this._specialStyles.start()),
            this._styler.resume();
        }
        pause() {
          this.init(), this._styler.pause();
        }
        restart() {
          this.reset(), this.play();
        }
        reset() {
          (this._state = 0),
            this._styler.destroy(),
            this._buildStyler(),
            this._styler.apply();
        }
        _buildStyler() {
          this._styler = new PV(
            this.element,
            this.animationName,
            this._duration,
            this._delay,
            this.easing,
            "forwards",
            () => this.finish()
          );
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((i) => i()), (t.length = 0);
        }
        beforeDestroy() {
          this.init();
          const e = {};
          if (this.hasStarted()) {
            const t = this._state >= 3;
            Object.keys(this._finalStyles).forEach((i) => {
              "offset" != i &&
                (e[i] = t ? this._finalStyles[i] : zc(this.element, i));
            });
          }
          this.currentSnapshot = e;
        }
      }
      class $V extends Ri {
        constructor(e, t) {
          super(),
            (this.element = e),
            (this._startingStyles = {}),
            (this.__initialized = !1),
            (this._styles = Vp(t));
        }
        init() {
          this.__initialized ||
            !this._startingStyles ||
            ((this.__initialized = !0),
            Object.keys(this._styles).forEach((e) => {
              this._startingStyles[e] = this.element.style[e];
            }),
            super.init());
        }
        play() {
          !this._startingStyles ||
            (this.init(),
            Object.keys(this._styles).forEach((e) =>
              this.element.style.setProperty(e, this._styles[e])
            ),
            super.play());
        }
        destroy() {
          !this._startingStyles ||
            (Object.keys(this._startingStyles).forEach((e) => {
              const t = this._startingStyles[e];
              t
                ? this.element.style.setProperty(e, t)
                : this.element.style.removeProperty(e);
            }),
            (this._startingStyles = null),
            super.destroy());
        }
      }
      class fm {
        constructor() {
          this._count = 0;
        }
        validateStyleProperty(e) {
          return Cc(e);
        }
        matchesElement(e, t) {
          return !1;
        }
        containsElement(e, t) {
          return Mc(e, t);
        }
        query(e, t, i) {
          return bc(e, t, i);
        }
        computeStyle(e, t, i) {
          return window.getComputedStyle(e)[t];
        }
        buildKeyframeElement(e, t, i) {
          i = i.map((a) => Vp(a));
          let r = `@keyframes ${t} {\n`,
            s = "";
          i.forEach((a) => {
            s = " ";
            const c = parseFloat(a.offset);
            (r += `${s}${100 * c}% {\n`),
              (s += " "),
              Object.keys(a).forEach((l) => {
                const u = a[l];
                switch (l) {
                  case "offset":
                    return;
                  case "easing":
                    return void (
                      u && (r += `${s}animation-timing-function: ${u};\n`)
                    );
                  default:
                    return void (r += `${s}${l}: ${u};\n`);
                }
              }),
              (r += `${s}}\n`);
          }),
            (r += "}\n");
          const o = document.createElement("style");
          return (o.textContent = r), o;
        }
        animate(e, t, i, r, s, o = [], a) {
          const c = o.filter((g) => g instanceof lm),
            l = {};
          Bp(i, r) &&
            c.forEach((g) => {
              let y = g.currentSnapshot;
              Object.keys(y).forEach((v) => (l[v] = y[v]));
            });
          const u = (function qV(n) {
            let e = {};
            return (
              n &&
                (Array.isArray(n) ? n : [n]).forEach((i) => {
                  Object.keys(i).forEach((r) => {
                    "offset" == r || "easing" == r || (e[r] = i[r]);
                  });
                }),
              e
            );
          })((t = jp(e, t, l)));
          if (0 == i) return new $V(e, u);
          const f = "gen_css_kf_" + this._count++,
            h = this.buildKeyframeElement(e, f, t);
          (function WV(n) {
            var e;
            const t =
              null === (e = n.getRootNode) || void 0 === e ? void 0 : e.call(n);
            return "undefined" != typeof ShadowRoot && t instanceof ShadowRoot
              ? t
              : document.head;
          })(e).appendChild(h);
          const p = im(e, t),
            m = new lm(e, t, f, i, r, s, u, p);
          return (
            m.onDestroy(() =>
              (function ZV(n) {
                n.parentNode.removeChild(n);
              })(h)
            ),
            m
          );
        }
      }
      class dm {
        constructor(e, t, i, r) {
          (this.element = e),
            (this.keyframes = t),
            (this.options = i),
            (this._specialStyles = r),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = {}),
            (this._duration = i.duration),
            (this._delay = i.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((e) => e()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const e = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            e,
            this.options
          )),
            (this._finalKeyframe = e.length ? e[e.length - 1] : {}),
            this.domPlayer.addEventListener("finish", () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _triggerWebAnimation(e, t, i) {
          return e.animate(t, i);
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((e) => e()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((e) => e()),
            (this._onDestroyFns = []));
        }
        setPosition(e) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = e * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const e = {};
          if (this.hasStarted()) {
            const t = this._finalKeyframe;
            Object.keys(t).forEach((i) => {
              "offset" != i &&
                (e[i] = this._finished ? t[i] : zc(this.element, i));
            });
          }
          this.currentSnapshot = e;
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((i) => i()), (t.length = 0);
        }
      }
      class KV {
        constructor() {
          (this._isNativeImpl = /\{\s*\[native\s+code\]\s*\}/.test(
            pm().toString()
          )),
            (this._cssKeyframesDriver = new fm());
        }
        validateStyleProperty(e) {
          return Cc(e);
        }
        matchesElement(e, t) {
          return !1;
        }
        containsElement(e, t) {
          return Mc(e, t);
        }
        query(e, t, i) {
          return bc(e, t, i);
        }
        computeStyle(e, t, i) {
          return window.getComputedStyle(e)[t];
        }
        overrideWebAnimationsSupport(e) {
          this._isNativeImpl = e;
        }
        animate(e, t, i, r, s, o = [], a) {
          if (!a && !this._isNativeImpl)
            return this._cssKeyframesDriver.animate(e, t, i, r, s, o);
          const u = {
            duration: i,
            delay: r,
            fill: 0 == r ? "both" : "forwards",
          };
          s && (u.easing = s);
          const f = {},
            h = o.filter((p) => p instanceof dm);
          Bp(i, r) &&
            h.forEach((p) => {
              let m = p.currentSnapshot;
              Object.keys(m).forEach((g) => (f[g] = m[g]));
            });
          const d = im(e, (t = jp(e, (t = t.map((p) => $n(p, !1))), f)));
          return new dm(e, t, u, d);
        }
      }
      function pm() {
        return (xp() && Element.prototype.animate) || {};
      }
      let QV = (() => {
        class n extends Dp {
          constructor(t, i) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = t.createRenderer(i.body, {
                id: "0",
                encapsulation: m1.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(t) {
            const i = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const r = Array.isArray(t) ? Ep(t) : t;
            return (
              mm(this._renderer, null, i, "register", [r]),
              new XV(i, this._renderer)
            );
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(Fr), C(he));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class XV extends class IN {} {
        constructor(e, t) {
          super(), (this._id = e), (this._renderer = t);
        }
        create(e, t) {
          return new JV(this._id, e, t || {}, this._renderer);
        }
      }
      class JV {
        constructor(e, t, i, r) {
          (this.id = e),
            (this.element = t),
            (this._renderer = r),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", i);
        }
        _listen(e, t) {
          return this._renderer.listen(this.element, `@@${this.id}:${e}`, t);
        }
        _command(e, ...t) {
          return mm(this._renderer, this.element, this.id, e, t);
        }
        onDone(e) {
          this._listen("done", e);
        }
        onStart(e) {
          this._listen("start", e);
        }
        onDestroy(e) {
          this._listen("destroy", e);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(e) {
          this._command("setPosition", e);
        }
        getPosition() {
          var e, t;
          return null !==
            (t =
              null === (e = this._renderer.engine.players[+this.id]) ||
              void 0 === e
                ? void 0
                : e.getPosition()) && void 0 !== t
            ? t
            : 0;
        }
      }
      function mm(n, e, t, i, r) {
        return n.setProperty(e, `@@${t}:${i}`, r);
      }
      const gm = "@.disabled";
      let ek = (() => {
        class n {
          constructor(t, i, r) {
            (this.delegate = t),
              (this.engine = i),
              (this._zone = r),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (i.onRemovalComplete = (s, o) => {
                const a = null == o ? void 0 : o.parentNode(s);
                a && o.removeChild(a, s);
              });
          }
          createRenderer(t, i) {
            const s = this.delegate.createRenderer(t, i);
            if (!(t && i && i.data && i.data.animation)) {
              let u = this._rendererCache.get(s);
              return (
                u ||
                  ((u = new vm("", s, this.engine)),
                  this._rendererCache.set(s, u)),
                u
              );
            }
            const o = i.id,
              a = i.id + "-" + this._currentId;
            this._currentId++, this.engine.register(a, t);
            const c = (u) => {
              Array.isArray(u)
                ? u.forEach(c)
                : this.engine.registerTrigger(o, a, t, u.name, u);
            };
            return i.data.animation.forEach(c), new tk(this, a, s, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(t, i, r) {
            t >= 0 && t < this._microtaskId
              ? this._zone.run(() => i(r))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((s) => {
                        const [o, a] = s;
                        o(a);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([i, r]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(Fr), C(Za), C(fe));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class vm {
        constructor(e, t, i) {
          (this.namespaceId = e),
            (this.delegate = t),
            (this.engine = i),
            (this.destroyNode = this.delegate.destroyNode
              ? (r) => t.destroyNode(r)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy();
        }
        createElement(e, t) {
          return this.delegate.createElement(e, t);
        }
        createComment(e) {
          return this.delegate.createComment(e);
        }
        createText(e) {
          return this.delegate.createText(e);
        }
        appendChild(e, t) {
          this.delegate.appendChild(e, t),
            this.engine.onInsert(this.namespaceId, t, e, !1);
        }
        insertBefore(e, t, i, r = !0) {
          this.delegate.insertBefore(e, t, i),
            this.engine.onInsert(this.namespaceId, t, e, r);
        }
        removeChild(e, t, i) {
          this.engine.onRemove(this.namespaceId, t, this.delegate, i);
        }
        selectRootElement(e, t) {
          return this.delegate.selectRootElement(e, t);
        }
        parentNode(e) {
          return this.delegate.parentNode(e);
        }
        nextSibling(e) {
          return this.delegate.nextSibling(e);
        }
        setAttribute(e, t, i, r) {
          this.delegate.setAttribute(e, t, i, r);
        }
        removeAttribute(e, t, i) {
          this.delegate.removeAttribute(e, t, i);
        }
        addClass(e, t) {
          this.delegate.addClass(e, t);
        }
        removeClass(e, t) {
          this.delegate.removeClass(e, t);
        }
        setStyle(e, t, i, r) {
          this.delegate.setStyle(e, t, i, r);
        }
        removeStyle(e, t, i) {
          this.delegate.removeStyle(e, t, i);
        }
        setProperty(e, t, i) {
          "@" == t.charAt(0) && t == gm
            ? this.disableAnimations(e, !!i)
            : this.delegate.setProperty(e, t, i);
        }
        setValue(e, t) {
          this.delegate.setValue(e, t);
        }
        listen(e, t, i) {
          return this.delegate.listen(e, t, i);
        }
        disableAnimations(e, t) {
          this.engine.disableAnimations(e, t);
        }
      }
      class tk extends vm {
        constructor(e, t, i, r) {
          super(t, i, r), (this.factory = e), (this.namespaceId = t);
        }
        setProperty(e, t, i) {
          "@" == t.charAt(0)
            ? "." == t.charAt(1) && t == gm
              ? this.disableAnimations(e, (i = void 0 === i || !!i))
              : this.engine.process(this.namespaceId, e, t.substr(1), i)
            : this.delegate.setProperty(e, t, i);
        }
        listen(e, t, i) {
          if ("@" == t.charAt(0)) {
            const r = (function nk(n) {
              switch (n) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return n;
              }
            })(e);
            let s = t.substr(1),
              o = "";
            return (
              "@" != s.charAt(0) &&
                ([s, o] = (function ik(n) {
                  const e = n.indexOf(".");
                  return [n.substring(0, e), n.substr(e + 1)];
                })(s)),
              this.engine.listen(this.namespaceId, r, s, o, (a) => {
                this.factory.scheduleListenerCallback(a._data || -1, i, a);
              })
            );
          }
          return this.delegate.listen(e, t, i);
        }
      }
      let rk = (() => {
        class n extends Za {
          constructor(t, i, r) {
            super(t.body, i, r);
          }
          ngOnDestroy() {
            this.flush();
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(he), C(wc), C(Ic));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const S2 = new L("AnimationModuleType"),
        _m = [
          { provide: Dp, useClass: QV },
          {
            provide: Ic,
            useFactory: function ok() {
              return new uV();
            },
          },
          { provide: Za, useClass: rk },
          {
            provide: Fr,
            useFactory: function ak(n, e, t) {
              return new ek(n, e, t);
            },
            deps: [ca, Za, fe],
          },
        ],
        ym = [
          {
            provide: wc,
            useFactory: function sk() {
              return (function YV() {
                return "function" == typeof pm();
              })()
                ? new KV()
                : new fm();
            },
          },
          { provide: S2, useValue: "BrowserAnimations" },
          ..._m,
        ],
        ck = [
          { provide: wc, useClass: kp },
          { provide: S2, useValue: "NoopAnimations" },
          ..._m,
        ];
      let lk = (() => {
        class n {
          static withConfig(t) {
            return { ngModule: n, providers: t.disableAnimations ? ck : ym };
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = Me({ type: n })),
          (n.ɵinj = ve({ providers: ym, imports: [Ph] })),
          n
        );
      })();
      function uk(n, e) {
        if ((1 & n && se(0, "mat-pseudo-checkbox", 4), 2 & n)) {
          const t = P();
          N("state", t.selected ? "checked" : "unchecked")(
            "disabled",
            t.disabled
          );
        }
      }
      function fk(n, e) {
        if ((1 & n && (w(0, "span", 5), q(1), D()), 2 & n)) {
          const t = P();
          S(1), $1("(", t.group.label, ")");
        }
      }
      const hk = ["*"],
        pk = new L("mat-sanity-checks", {
          providedIn: "root",
          factory: function dk() {
            return !0;
          },
        });
      let en = (() => {
        class n {
          constructor(t, i, r) {
            (this._sanityChecks = i),
              (this._document = r),
              (this._hasDoneGlobalChecks = !1),
              t._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(t) {
            return (
              !oc() &&
              ("boolean" == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[t])
            );
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(kN), C(pk, 8), C(he));
          }),
          (n.ɵmod = Me({ type: n })),
          (n.ɵinj = ve({ imports: [[hs], hs] })),
          n
        );
      })();
      function mk(n) {
        return class extends n {
          constructor(...e) {
            super(...e), (this._disabled = !1);
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(e) {
            this._disabled = Wt(e);
          }
        };
      }
      function Mm(n, e) {
        return class extends n {
          constructor(...t) {
            super(...t), (this.defaultColor = e), (this.color = e);
          }
          get color() {
            return this._color;
          }
          set color(t) {
            const i = t || this.defaultColor;
            i !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`
                ),
              i && this._elementRef.nativeElement.classList.add(`mat-${i}`),
              (this._color = i));
          }
        };
      }
      function gk(n) {
        return class extends n {
          constructor(...e) {
            super(...e), (this._disableRipple = !1);
          }
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(e) {
            this._disableRipple = Wt(e);
          }
        };
      }
      function vk(n, e = 0) {
        return class extends n {
          constructor(...t) {
            super(...t), (this._tabIndex = e), (this.defaultTabIndex = e);
          }
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(t) {
            this._tabIndex = null != t ? Pi(t) : this.defaultTabIndex;
          }
        };
      }
      function _k(n) {
        return class extends n {
          constructor(...e) {
            super(...e), (this.stateChanges = new me()), (this.errorState = !1);
          }
          updateErrorState() {
            const e = this.errorState,
              s = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm
              );
            s !== e && ((this.errorState = s), this.stateChanges.next());
          }
        };
      }
      let Ck = (() => {
        class n {
          isErrorState(t, i) {
            return !!(t && t.invalid && (t.touched || (i && i.submitted)));
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      class Mk {
        constructor(e, t, i) {
          (this._renderer = e),
            (this.element = t),
            (this.config = i),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const bm = { enterDuration: 225, exitDuration: 150 },
        $c = rc({ passive: !0 }),
        wm = ["mousedown", "touchstart"],
        Dm = ["mouseup", "mouseleave", "touchend", "touchcancel"];
      class wk {
        constructor(e, t, i, r) {
          (this._target = e),
            (this._ngZone = t),
            (this._isPointerDown = !1),
            (this._activeRipples = new Set()),
            (this._pointerUpEventsRegistered = !1),
            r.isBrowser && (this._containerElement = xa(i));
        }
        fadeInRipple(e, t, i = {}) {
          const r = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            s = Object.assign(Object.assign({}, bm), i.animation);
          i.centered &&
            ((e = r.left + r.width / 2), (t = r.top + r.height / 2));
          const o =
              i.radius ||
              (function Ek(n, e, t) {
                const i = Math.max(Math.abs(n - t.left), Math.abs(n - t.right)),
                  r = Math.max(Math.abs(e - t.top), Math.abs(e - t.bottom));
                return Math.sqrt(i * i + r * r);
              })(e, t, r),
            a = e - r.left,
            c = t - r.top,
            l = s.enterDuration,
            u = document.createElement("div");
          u.classList.add("mat-ripple-element"),
            (u.style.left = a - o + "px"),
            (u.style.top = c - o + "px"),
            (u.style.height = 2 * o + "px"),
            (u.style.width = 2 * o + "px"),
            null != i.color && (u.style.backgroundColor = i.color),
            (u.style.transitionDuration = `${l}ms`),
            this._containerElement.appendChild(u),
            (function Dk(n) {
              window.getComputedStyle(n).getPropertyValue("opacity");
            })(u),
            (u.style.transform = "scale(1)");
          const f = new Mk(this, u, i);
          return (
            (f.state = 0),
            this._activeRipples.add(f),
            i.persistent || (this._mostRecentTransientRipple = f),
            this._runTimeoutOutsideZone(() => {
              const h = f === this._mostRecentTransientRipple;
              (f.state = 1),
                !i.persistent && (!h || !this._isPointerDown) && f.fadeOut();
            }, l),
            f
          );
        }
        fadeOutRipple(e) {
          const t = this._activeRipples.delete(e);
          if (
            (e === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            this._activeRipples.size || (this._containerRect = null),
            !t)
          )
            return;
          const i = e.element,
            r = Object.assign(Object.assign({}, bm), e.config.animation);
          (i.style.transitionDuration = `${r.exitDuration}ms`),
            (i.style.opacity = "0"),
            (e.state = 2),
            this._runTimeoutOutsideZone(() => {
              (e.state = 3), i.remove();
            }, r.exitDuration);
        }
        fadeOutAll() {
          this._activeRipples.forEach((e) => e.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._activeRipples.forEach((e) => {
            e.config.persistent || e.fadeOut();
          });
        }
        setupTriggerEvents(e) {
          const t = xa(e);
          !t ||
            t === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = t),
            this._registerEvents(wm));
        }
        handleEvent(e) {
          "mousedown" === e.type
            ? this._onMousedown(e)
            : "touchstart" === e.type
            ? this._onTouchStart(e)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._registerEvents(Dm),
              (this._pointerUpEventsRegistered = !0));
        }
        _onMousedown(e) {
          const t = (function xN(n) {
              return 0 === n.buttons || (0 === n.offsetX && 0 === n.offsetY);
            })(e),
            i =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !t &&
            !i &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(e.clientX, e.clientY, this._target.rippleConfig));
        }
        _onTouchStart(e) {
          if (
            !this._target.rippleDisabled &&
            !(function zN(n) {
              const e =
                (n.touches && n.touches[0]) ||
                (n.changedTouches && n.changedTouches[0]);
              return !(
                !e ||
                -1 !== e.identifier ||
                (null != e.radiusX && 1 !== e.radiusX) ||
                (null != e.radiusY && 1 !== e.radiusY)
              );
            })(e)
          ) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const t = e.changedTouches;
            for (let i = 0; i < t.length; i++)
              this.fadeInRipple(
                t[i].clientX,
                t[i].clientY,
                this._target.rippleConfig
              );
          }
        }
        _onPointerUp() {
          !this._isPointerDown ||
            ((this._isPointerDown = !1),
            this._activeRipples.forEach((e) => {
              !e.config.persistent &&
                (1 === e.state ||
                  (e.config.terminateOnPointerUp && 0 === e.state)) &&
                e.fadeOut();
            }));
        }
        _runTimeoutOutsideZone(e, t = 0) {
          this._ngZone.runOutsideAngular(() => setTimeout(e, t));
        }
        _registerEvents(e) {
          this._ngZone.runOutsideAngular(() => {
            e.forEach((t) => {
              this._triggerElement.addEventListener(t, this, $c);
            });
          });
        }
        _removeTriggerEvents() {
          this._triggerElement &&
            (wm.forEach((e) => {
              this._triggerElement.removeEventListener(e, this, $c);
            }),
            this._pointerUpEventsRegistered &&
              Dm.forEach((e) => {
                this._triggerElement.removeEventListener(e, this, $c);
              }));
        }
      }
      const Sk = new L("mat-ripple-global-options");
      let Ak = (() => {
          class n {
            constructor(t, i, r, s, o) {
              (this._elementRef = t),
                (this._animationMode = o),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = s || {}),
                (this._rippleRenderer = new wk(this, i, t, r));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(t) {
              t && this.fadeOutAllNonPersistent(),
                (this._disabled = t),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(t) {
              (this._trigger = t), this._setupTriggerEventsIfEnabled();
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: Object.assign(
                  Object.assign(
                    Object.assign({}, this._globalOptions.animation),
                    "NoopAnimations" === this._animationMode
                      ? { enterDuration: 0, exitDuration: 0 }
                      : {}
                  ),
                  this.animation
                ),
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(t, i = 0, r) {
              return "number" == typeof t
                ? this._rippleRenderer.fadeInRipple(
                    t,
                    i,
                    Object.assign(Object.assign({}, this.rippleConfig), r)
                  )
                : this._rippleRenderer.fadeInRipple(
                    0,
                    0,
                    Object.assign(Object.assign({}, this.rippleConfig), t)
                  );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(Le), _(fe), _(X1), _(Sk, 8), _(S2, 8));
            }),
            (n.ɵdir = V({
              type: n,
              selectors: [
                ["", "mat-ripple", ""],
                ["", "matRipple", ""],
              ],
              hostAttrs: [1, "mat-ripple"],
              hostVars: 2,
              hostBindings: function (t, i) {
                2 & t && ut("mat-ripple-unbounded", i.unbounded);
              },
              inputs: {
                color: ["matRippleColor", "color"],
                unbounded: ["matRippleUnbounded", "unbounded"],
                centered: ["matRippleCentered", "centered"],
                radius: ["matRippleRadius", "radius"],
                animation: ["matRippleAnimation", "animation"],
                disabled: ["matRippleDisabled", "disabled"],
                trigger: ["matRippleTrigger", "trigger"],
              },
              exportAs: ["matRipple"],
            })),
            n
          );
        })(),
        xk = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({ imports: [[en, dp], en] })),
            n
          );
        })(),
        zk = (() => {
          class n {
            constructor(t) {
              (this._animationMode = t),
                (this.state = "unchecked"),
                (this.disabled = !1);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(S2, 8));
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["mat-pseudo-checkbox"]],
              hostAttrs: [1, "mat-pseudo-checkbox"],
              hostVars: 8,
              hostBindings: function (t, i) {
                2 & t &&
                  ut(
                    "mat-pseudo-checkbox-indeterminate",
                    "indeterminate" === i.state
                  )("mat-pseudo-checkbox-checked", "checked" === i.state)(
                    "mat-pseudo-checkbox-disabled",
                    i.disabled
                  )(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  );
              },
              inputs: { state: "state", disabled: "disabled" },
              decls: 0,
              vars: 0,
              template: function (t, i) {},
              styles: [
                '.mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        Lk = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({ imports: [[en]] })),
            n
          );
        })();
      const Em = new L("MAT_OPTION_PARENT_COMPONENT"),
        Sm = new L("MatOptgroup");
      let Tk = 0;
      class Nk {
        constructor(e, t = !1) {
          (this.source = e), (this.isUserInput = t);
        }
      }
      let Vk = (() => {
          class n {
            constructor(t, i, r, s) {
              (this._element = t),
                (this._changeDetectorRef = i),
                (this._parent = r),
                (this.group = s),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ""),
                (this.id = "mat-option-" + Tk++),
                (this.onSelectionChange = new $()),
                (this._stateChanges = new me());
            }
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(t) {
              this._disabled = Wt(t);
            }
            get disableRipple() {
              return !(!this._parent || !this._parent.disableRipple);
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._getHostElement().textContent || "").trim();
            }
            select() {
              this._selected ||
                ((this._selected = !0),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            focus(t, i) {
              const r = this._getHostElement();
              "function" == typeof r.focus && r.focus(i);
            }
            setActiveStyles() {
              this._active ||
                ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active &&
                ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(t) {
              (13 === t.keyCode || 32 === t.keyCode) &&
                !ps(t) &&
                (this._selectViaInteraction(), t.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getAriaSelected() {
              return this.selected || (!this.multiple && null);
            }
            _getTabIndex() {
              return this.disabled ? "-1" : "0";
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const t = this.viewValue;
                t !== this._mostRecentViewValue &&
                  ((this._mostRecentViewValue = t), this._stateChanges.next());
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(t = !1) {
              this.onSelectionChange.emit(new Nk(this, t));
            }
          }
          return (
            (n.ɵfac = function (t) {
              xo();
            }),
            (n.ɵdir = V({
              type: n,
              inputs: { value: "value", id: "id", disabled: "disabled" },
              outputs: { onSelectionChange: "onSelectionChange" },
            })),
            n
          );
        })(),
        Am = (() => {
          class n extends Vk {
            constructor(t, i, r, s) {
              super(t, i, r, s);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(Le), _(q1), _(Em, 8), _(Sm, 8));
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["mat-option"]],
              hostAttrs: [
                "role",
                "option",
                1,
                "mat-option",
                "mat-focus-indicator",
              ],
              hostVars: 12,
              hostBindings: function (t, i) {
                1 & t &&
                  de("click", function () {
                    return i._selectViaInteraction();
                  })("keydown", function (s) {
                    return i._handleKeydown(s);
                  }),
                  2 & t &&
                    (Lo("id", i.id),
                    be("tabindex", i._getTabIndex())(
                      "aria-selected",
                      i._getAriaSelected()
                    )("aria-disabled", i.disabled.toString()),
                    ut("mat-selected", i.selected)(
                      "mat-option-multiple",
                      i.multiple
                    )("mat-active", i.active)(
                      "mat-option-disabled",
                      i.disabled
                    ));
              },
              exportAs: ["matOption"],
              features: [ce],
              ngContentSelectors: hk,
              decls: 5,
              vars: 4,
              consts: [
                [
                  "class",
                  "mat-option-pseudo-checkbox",
                  3,
                  "state",
                  "disabled",
                  4,
                  "ngIf",
                ],
                [1, "mat-option-text"],
                ["class", "cdk-visually-hidden", 4, "ngIf"],
                [
                  "mat-ripple",
                  "",
                  1,
                  "mat-option-ripple",
                  3,
                  "matRippleTrigger",
                  "matRippleDisabled",
                ],
                [1, "mat-option-pseudo-checkbox", 3, "state", "disabled"],
                [1, "cdk-visually-hidden"],
              ],
              template: function (t, i) {
                1 & t &&
                  (Vr(),
                  Q(0, uk, 1, 2, "mat-pseudo-checkbox", 0),
                  w(1, "span", 1),
                  $t(2),
                  D(),
                  Q(3, fk, 2, 1, "span", 2),
                  se(4, "div", 3)),
                  2 & t &&
                    (N("ngIf", i.multiple),
                    S(3),
                    N("ngIf", i.group && i.group._inert),
                    S(1),
                    N("matRippleTrigger", i._getHostElement())(
                      "matRippleDisabled",
                      i.disabled || i.disableRipple
                    ));
              },
              directives: [zk, zi, Ak],
              styles: [
                ".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })();
      function xm(n, e, t) {
        if (t.length) {
          let i = e.toArray(),
            r = t.toArray(),
            s = 0;
          for (let o = 0; o < n + 1; o++)
            i[o].group && i[o].group === r[s] && s++;
          return s;
        }
        return 0;
      }
      let zm = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = Me({ type: n })),
          (n.ɵinj = ve({ imports: [[xk, Li, en, Lk]] })),
          n
        );
      })();
      const Ik = ["addListener", "removeListener"],
        Hk = ["addEventListener", "removeEventListener"],
        Ok = ["on", "off"];
      function Qa(n, e, t, i) {
        if ((oe(t) && ((i = t), (t = void 0)), i))
          return Qa(n, e, t).pipe(w0(i));
        const [r, s] = (function Rk(n) {
          return oe(n.addEventListener) && oe(n.removeEventListener);
        })(n)
          ? Hk.map((o) => (a) => n[o](e, a, t))
          : (function Pk(n) {
              return oe(n.addListener) && oe(n.removeListener);
            })(n)
          ? Ik.map(Lm(n, e))
          : (function Fk(n) {
              return oe(n.on) && oe(n.off);
            })(n)
          ? Ok.map(Lm(n, e))
          : [];
        if (!r && L4(n)) return Xe((o) => Qa(o, e, t))(It(n));
        if (!r) throw new TypeError("Invalid event target");
        return new pe((o) => {
          const a = (...c) => o.next(1 < c.length ? c : c[0]);
          return r(a), () => s(a);
        });
      }
      function Lm(n, e) {
        return (t) => (i) => n[t](e, i);
      }
      function h1(n) {
        return Oe((e, t) => {
          It(n).subscribe(new Te(t, () => t.complete(), Ji)),
            !t.closed && e.subscribe(t);
        });
      }
      const Bk = ["connectionContainer"],
        jk = ["inputContainer"],
        Uk = ["label"];
      function $k(n, e) {
        1 & n &&
          (Lr(0),
          w(1, "div", 14),
          se(2, "div", 15),
          se(3, "div", 16),
          se(4, "div", 17),
          D(),
          w(5, "div", 18),
          se(6, "div", 15),
          se(7, "div", 16),
          se(8, "div", 17),
          D(),
          Tr());
      }
      function Gk(n, e) {
        if (1 & n) {
          const t = Pn();
          w(0, "div", 19),
            de("cdkObserveContent", function () {
              return Vt(t), P().updateOutlineGap();
            }),
            $t(1, 1),
            D();
        }
        2 & n && N("cdkObserveContentDisabled", "outline" != P().appearance);
      }
      function Wk(n, e) {
        if (
          (1 & n && (Lr(0), $t(1, 2), w(2, "span"), q(3), D(), Tr()), 2 & n)
        ) {
          const t = P(2);
          S(3), Ve(t._control.placeholder);
        }
      }
      function qk(n, e) {
        1 & n && $t(0, 3, ["*ngSwitchCase", "true"]);
      }
      function Zk(n, e) {
        1 & n && (w(0, "span", 23), q(1, " *"), D());
      }
      function Kk(n, e) {
        if (1 & n) {
          const t = Pn();
          w(0, "label", 20, 21),
            de("cdkObserveContent", function () {
              return Vt(t), P().updateOutlineGap();
            }),
            Q(2, Wk, 4, 1, "ng-container", 12),
            Q(3, qk, 1, 0, "ng-content", 12),
            Q(4, Zk, 2, 0, "span", 22),
            D();
        }
        if (2 & n) {
          const t = P();
          ut("mat-empty", t._control.empty && !t._shouldAlwaysFloat())(
            "mat-form-field-empty",
            t._control.empty && !t._shouldAlwaysFloat()
          )("mat-accent", "accent" == t.color)("mat-warn", "warn" == t.color),
            N("cdkObserveContentDisabled", "outline" != t.appearance)(
              "id",
              t._labelId
            )("ngSwitch", t._hasLabel()),
            be("for", t._control.id)("aria-owns", t._control.id),
            S(2),
            N("ngSwitchCase", !1),
            S(1),
            N("ngSwitchCase", !0),
            S(1),
            N(
              "ngIf",
              !t.hideRequiredMarker &&
                t._control.required &&
                !t._control.disabled
            );
        }
      }
      function Yk(n, e) {
        1 & n && (w(0, "div", 24), $t(1, 4), D());
      }
      function Qk(n, e) {
        if ((1 & n && (w(0, "div", 25), se(1, "span", 26), D()), 2 & n)) {
          const t = P();
          S(1),
            ut("mat-accent", "accent" == t.color)(
              "mat-warn",
              "warn" == t.color
            );
        }
      }
      function Xk(n, e) {
        1 & n && (w(0, "div"), $t(1, 5), D()),
          2 & n && N("@transitionMessages", P()._subscriptAnimationState);
      }
      function Jk(n, e) {
        if ((1 & n && (w(0, "div", 30), q(1), D()), 2 & n)) {
          const t = P(2);
          N("id", t._hintLabelId), S(1), Ve(t.hintLabel);
        }
      }
      function eI(n, e) {
        if (
          (1 & n &&
            (w(0, "div", 27),
            Q(1, Jk, 2, 2, "div", 28),
            $t(2, 6),
            se(3, "div", 29),
            $t(4, 7),
            D()),
          2 & n)
        ) {
          const t = P();
          N("@transitionMessages", t._subscriptAnimationState),
            S(1),
            N("ngIf", t.hintLabel);
        }
      }
      const tI = [
          "*",
          [["", "matPrefix", ""]],
          [["mat-placeholder"]],
          [["mat-label"]],
          [["", "matSuffix", ""]],
          [["mat-error"]],
          [["mat-hint", 3, "align", "end"]],
          [["mat-hint", "align", "end"]],
        ],
        nI = [
          "*",
          "[matPrefix]",
          "mat-placeholder",
          "mat-label",
          "[matSuffix]",
          "mat-error",
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ],
        iI = new L("MatError"),
        rI = {
          transitionMessages: hc("transitionMessages", [
            Na("enter", jn({ opacity: 1, transform: "translateY(0%)" })),
            Va("void => enter", [
              jn({ opacity: 0, transform: "translateY(-5px)" }),
              dc("300ms cubic-bezier(0.55, 0, 0.55, 0.2)"),
            ]),
          ]),
        };
      let Gc = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵdir = V({ type: n })),
          n
        );
      })();
      const sI = new L("MatHint");
      let Wc = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵdir = V({ type: n, selectors: [["mat-label"]] })),
            n
          );
        })(),
        oI = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵdir = V({ type: n, selectors: [["mat-placeholder"]] })),
            n
          );
        })();
      const aI = new L("MatPrefix"),
        cI = new L("MatSuffix");
      let Tm = 0;
      const uI = Mm(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          },
          "primary"
        ),
        fI = new L("MAT_FORM_FIELD_DEFAULT_OPTIONS"),
        Vm = new L("MatFormField");
      let hI = (() => {
          class n extends uI {
            constructor(t, i, r, s, o, a, c) {
              super(t),
                (this._changeDetectorRef = i),
                (this._dir = r),
                (this._defaults = s),
                (this._platform = o),
                (this._ngZone = a),
                (this._outlineGapCalculationNeededImmediately = !1),
                (this._outlineGapCalculationNeededOnStable = !1),
                (this._destroyed = new me()),
                (this._showAlwaysAnimate = !1),
                (this._subscriptAnimationState = ""),
                (this._hintLabel = ""),
                (this._hintLabelId = "mat-hint-" + Tm++),
                (this._labelId = "mat-form-field-label-" + Tm++),
                (this.floatLabel = this._getDefaultFloatLabelState()),
                (this._animationsEnabled = "NoopAnimations" !== c),
                (this.appearance = s && s.appearance ? s.appearance : "legacy"),
                (this._hideRequiredMarker =
                  !(!s || null == s.hideRequiredMarker) &&
                  s.hideRequiredMarker);
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(t) {
              const i = this._appearance;
              (this._appearance =
                t || (this._defaults && this._defaults.appearance) || "legacy"),
                "outline" === this._appearance &&
                  i !== t &&
                  (this._outlineGapCalculationNeededOnStable = !0);
            }
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(t) {
              this._hideRequiredMarker = Wt(t);
            }
            _shouldAlwaysFloat() {
              return "always" === this.floatLabel && !this._showAlwaysAnimate;
            }
            _canLabelFloat() {
              return "never" !== this.floatLabel;
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(t) {
              (this._hintLabel = t), this._processHints();
            }
            get floatLabel() {
              return "legacy" !== this.appearance &&
                "never" === this._floatLabel
                ? "auto"
                : this._floatLabel;
            }
            set floatLabel(t) {
              t !== this._floatLabel &&
                ((this._floatLabel = t || this._getDefaultFloatLabelState()),
                this._changeDetectorRef.markForCheck());
            }
            get _control() {
              return (
                this._explicitFormFieldControl ||
                this._controlNonStatic ||
                this._controlStatic
              );
            }
            set _control(t) {
              this._explicitFormFieldControl = t;
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._connectionContainerRef || this._elementRef;
            }
            ngAfterContentInit() {
              this._validateControlChild();
              const t = this._control;
              t.controlType &&
                this._elementRef.nativeElement.classList.add(
                  `mat-form-field-type-${t.controlType}`
                ),
                t.stateChanges.pipe(Ti(null)).subscribe(() => {
                  this._validatePlaceholders(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                t.ngControl &&
                  t.ngControl.valueChanges &&
                  t.ngControl.valueChanges
                    .pipe(h1(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck()),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .pipe(h1(this._destroyed))
                    .subscribe(() => {
                      this._outlineGapCalculationNeededOnStable &&
                        this.updateOutlineGap();
                    });
                }),
                V2(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes
                ).subscribe(() => {
                  (this._outlineGapCalculationNeededOnStable = !0),
                    this._changeDetectorRef.markForCheck();
                }),
                this._hintChildren.changes.pipe(Ti(null)).subscribe(() => {
                  this._processHints(), this._changeDetectorRef.markForCheck();
                }),
                this._errorChildren.changes.pipe(Ti(null)).subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._dir &&
                  this._dir.change.pipe(h1(this._destroyed)).subscribe(() => {
                    "function" == typeof requestAnimationFrame
                      ? this._ngZone.runOutsideAngular(() => {
                          requestAnimationFrame(() => this.updateOutlineGap());
                        })
                      : this.updateOutlineGap();
                  });
            }
            ngAfterContentChecked() {
              this._validateControlChild(),
                this._outlineGapCalculationNeededImmediately &&
                  this.updateOutlineGap();
            }
            ngAfterViewInit() {
              (this._subscriptAnimationState = "enter"),
                this._changeDetectorRef.detectChanges();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _shouldForward(t) {
              const i = this._control ? this._control.ngControl : null;
              return i && i[t];
            }
            _hasPlaceholder() {
              return !!(
                (this._control && this._control.placeholder) ||
                this._placeholderChild
              );
            }
            _hasLabel() {
              return !(!this._labelChildNonStatic && !this._labelChildStatic);
            }
            _shouldLabelFloat() {
              return (
                this._canLabelFloat() &&
                ((this._control && this._control.shouldLabelFloat) ||
                  this._shouldAlwaysFloat())
              );
            }
            _hideControlPlaceholder() {
              return (
                ("legacy" === this.appearance && !this._hasLabel()) ||
                (this._hasLabel() && !this._shouldLabelFloat())
              );
            }
            _hasFloatingLabel() {
              return (
                this._hasLabel() ||
                ("legacy" === this.appearance && this._hasPlaceholder())
              );
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? "error"
                : "hint";
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() &&
                this._canLabelFloat() &&
                (this._animationsEnabled &&
                  this._label &&
                  ((this._showAlwaysAnimate = !0),
                  Qa(this._label.nativeElement, "transitionend")
                    .pipe(on(1))
                    .subscribe(() => {
                      this._showAlwaysAnimate = !1;
                    })),
                (this.floatLabel = "always"),
                this._changeDetectorRef.markForCheck());
            }
            _validatePlaceholders() {}
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _getDefaultFloatLabelState() {
              return (this._defaults && this._defaults.floatLabel) || "auto";
            }
            _syncDescribedByIds() {
              if (this._control) {
                let t = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    "string" == typeof this._control.userAriaDescribedBy &&
                    t.push(...this._control.userAriaDescribedBy.split(" ")),
                  "hint" === this._getDisplayedMessages())
                ) {
                  const i = this._hintChildren
                      ? this._hintChildren.find((s) => "start" === s.align)
                      : null,
                    r = this._hintChildren
                      ? this._hintChildren.find((s) => "end" === s.align)
                      : null;
                  i
                    ? t.push(i.id)
                    : this._hintLabel && t.push(this._hintLabelId),
                    r && t.push(r.id);
                } else
                  this._errorChildren &&
                    t.push(...this._errorChildren.map((i) => i.id));
                this._control.setDescribedByIds(t);
              }
            }
            _validateControlChild() {}
            updateOutlineGap() {
              const t = this._label ? this._label.nativeElement : null,
                i = this._connectionContainerRef.nativeElement,
                r = ".mat-form-field-outline-start",
                s = ".mat-form-field-outline-gap";
              if ("outline" !== this.appearance || !this._platform.isBrowser)
                return;
              if (!t || !t.children.length || !t.textContent.trim()) {
                const u = i.querySelectorAll(`${r}, ${s}`);
                for (let f = 0; f < u.length; f++) u[f].style.width = "0";
                return;
              }
              if (!this._isAttachedToDOM())
                return void (this._outlineGapCalculationNeededImmediately = !0);
              let o = 0,
                a = 0;
              const c = i.querySelectorAll(r),
                l = i.querySelectorAll(s);
              if (this._label && this._label.nativeElement.children.length) {
                const u = i.getBoundingClientRect();
                if (0 === u.width && 0 === u.height)
                  return (
                    (this._outlineGapCalculationNeededOnStable = !0),
                    void (this._outlineGapCalculationNeededImmediately = !1)
                  );
                const f = this._getStartEnd(u),
                  h = t.children,
                  d = this._getStartEnd(h[0].getBoundingClientRect());
                let p = 0;
                for (let m = 0; m < h.length; m++) p += h[m].offsetWidth;
                (o = Math.abs(d - f) - 5), (a = p > 0 ? 0.75 * p + 10 : 0);
              }
              for (let u = 0; u < c.length; u++) c[u].style.width = `${o}px`;
              for (let u = 0; u < l.length; u++) l[u].style.width = `${a}px`;
              this._outlineGapCalculationNeededOnStable =
                this._outlineGapCalculationNeededImmediately = !1;
            }
            _getStartEnd(t) {
              return this._dir && "rtl" === this._dir.value ? t.right : t.left;
            }
            _isAttachedToDOM() {
              const t = this._elementRef.nativeElement;
              if (t.getRootNode) {
                const i = t.getRootNode();
                return i && i !== t;
              }
              return document.documentElement.contains(t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                _(Le),
                _(q1),
                _(La, 8),
                _(fI, 8),
                _(X1),
                _(fe),
                _(S2, 8)
              );
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["mat-form-field"]],
              contentQueries: function (t, i, r) {
                if (
                  (1 & t &&
                    (Dt(r, Gc, 5),
                    Dt(r, Gc, 7),
                    Dt(r, Wc, 5),
                    Dt(r, Wc, 7),
                    Dt(r, oI, 5),
                    Dt(r, iI, 5),
                    Dt(r, sI, 5),
                    Dt(r, aI, 5),
                    Dt(r, cI, 5)),
                  2 & t)
                ) {
                  let s;
                  je((s = Ue())) && (i._controlNonStatic = s.first),
                    je((s = Ue())) && (i._controlStatic = s.first),
                    je((s = Ue())) && (i._labelChildNonStatic = s.first),
                    je((s = Ue())) && (i._labelChildStatic = s.first),
                    je((s = Ue())) && (i._placeholderChild = s.first),
                    je((s = Ue())) && (i._errorChildren = s),
                    je((s = Ue())) && (i._hintChildren = s),
                    je((s = Ue())) && (i._prefixChildren = s),
                    je((s = Ue())) && (i._suffixChildren = s);
                }
              },
              viewQuery: function (t, i) {
                if ((1 & t && (d2(Bk, 7), d2(jk, 5), d2(Uk, 5)), 2 & t)) {
                  let r;
                  je((r = Ue())) && (i._connectionContainerRef = r.first),
                    je((r = Ue())) && (i._inputContainerRef = r.first),
                    je((r = Ue())) && (i._label = r.first);
                }
              },
              hostAttrs: [1, "mat-form-field"],
              hostVars: 40,
              hostBindings: function (t, i) {
                2 & t &&
                  ut(
                    "mat-form-field-appearance-standard",
                    "standard" == i.appearance
                  )("mat-form-field-appearance-fill", "fill" == i.appearance)(
                    "mat-form-field-appearance-outline",
                    "outline" == i.appearance
                  )(
                    "mat-form-field-appearance-legacy",
                    "legacy" == i.appearance
                  )("mat-form-field-invalid", i._control.errorState)(
                    "mat-form-field-can-float",
                    i._canLabelFloat()
                  )("mat-form-field-should-float", i._shouldLabelFloat())(
                    "mat-form-field-has-label",
                    i._hasFloatingLabel()
                  )(
                    "mat-form-field-hide-placeholder",
                    i._hideControlPlaceholder()
                  )("mat-form-field-disabled", i._control.disabled)(
                    "mat-form-field-autofilled",
                    i._control.autofilled
                  )("mat-focused", i._control.focused)(
                    "ng-untouched",
                    i._shouldForward("untouched")
                  )("ng-touched", i._shouldForward("touched"))(
                    "ng-pristine",
                    i._shouldForward("pristine")
                  )("ng-dirty", i._shouldForward("dirty"))(
                    "ng-valid",
                    i._shouldForward("valid")
                  )("ng-invalid", i._shouldForward("invalid"))(
                    "ng-pending",
                    i._shouldForward("pending")
                  )("_mat-animation-noopable", !i._animationsEnabled);
              },
              inputs: {
                color: "color",
                appearance: "appearance",
                hideRequiredMarker: "hideRequiredMarker",
                hintLabel: "hintLabel",
                floatLabel: "floatLabel",
              },
              exportAs: ["matFormField"],
              features: [Se([{ provide: Vm, useExisting: n }]), ce],
              ngContentSelectors: nI,
              decls: 15,
              vars: 8,
              consts: [
                [1, "mat-form-field-wrapper"],
                [1, "mat-form-field-flex", 3, "click"],
                ["connectionContainer", ""],
                [4, "ngIf"],
                [
                  "class",
                  "mat-form-field-prefix",
                  3,
                  "cdkObserveContentDisabled",
                  "cdkObserveContent",
                  4,
                  "ngIf",
                ],
                [1, "mat-form-field-infix"],
                ["inputContainer", ""],
                [1, "mat-form-field-label-wrapper"],
                [
                  "class",
                  "mat-form-field-label",
                  3,
                  "cdkObserveContentDisabled",
                  "id",
                  "mat-empty",
                  "mat-form-field-empty",
                  "mat-accent",
                  "mat-warn",
                  "ngSwitch",
                  "cdkObserveContent",
                  4,
                  "ngIf",
                ],
                ["class", "mat-form-field-suffix", 4, "ngIf"],
                ["class", "mat-form-field-underline", 4, "ngIf"],
                [1, "mat-form-field-subscript-wrapper", 3, "ngSwitch"],
                [4, "ngSwitchCase"],
                ["class", "mat-form-field-hint-wrapper", 4, "ngSwitchCase"],
                [1, "mat-form-field-outline"],
                [1, "mat-form-field-outline-start"],
                [1, "mat-form-field-outline-gap"],
                [1, "mat-form-field-outline-end"],
                [1, "mat-form-field-outline", "mat-form-field-outline-thick"],
                [
                  1,
                  "mat-form-field-prefix",
                  3,
                  "cdkObserveContentDisabled",
                  "cdkObserveContent",
                ],
                [
                  1,
                  "mat-form-field-label",
                  3,
                  "cdkObserveContentDisabled",
                  "id",
                  "ngSwitch",
                  "cdkObserveContent",
                ],
                ["label", ""],
                [
                  "class",
                  "mat-placeholder-required mat-form-field-required-marker",
                  "aria-hidden",
                  "true",
                  4,
                  "ngIf",
                ],
                [
                  "aria-hidden",
                  "true",
                  1,
                  "mat-placeholder-required",
                  "mat-form-field-required-marker",
                ],
                [1, "mat-form-field-suffix"],
                [1, "mat-form-field-underline"],
                [1, "mat-form-field-ripple"],
                [1, "mat-form-field-hint-wrapper"],
                ["class", "mat-hint", 3, "id", 4, "ngIf"],
                [1, "mat-form-field-hint-spacer"],
                [1, "mat-hint", 3, "id"],
              ],
              template: function (t, i) {
                1 & t &&
                  (Vr(tI),
                  w(0, "div", 0),
                  w(1, "div", 1, 2),
                  de("click", function (s) {
                    return (
                      i._control.onContainerClick &&
                      i._control.onContainerClick(s)
                    );
                  }),
                  Q(3, $k, 9, 0, "ng-container", 3),
                  Q(4, Gk, 2, 1, "div", 4),
                  w(5, "div", 5, 6),
                  $t(7),
                  w(8, "span", 7),
                  Q(9, Kk, 5, 16, "label", 8),
                  D(),
                  D(),
                  Q(10, Yk, 2, 0, "div", 9),
                  D(),
                  Q(11, Qk, 2, 4, "div", 10),
                  w(12, "div", 11),
                  Q(13, Xk, 2, 1, "div", 12),
                  Q(14, eI, 5, 2, "div", 13),
                  D(),
                  D()),
                  2 & t &&
                    (S(3),
                    N("ngIf", "outline" == i.appearance),
                    S(1),
                    N("ngIf", i._prefixChildren.length),
                    S(5),
                    N("ngIf", i._hasFloatingLabel()),
                    S(1),
                    N("ngIf", i._suffixChildren.length),
                    S(1),
                    N("ngIf", "outline" != i.appearance),
                    S(1),
                    N("ngSwitch", i._getDisplayedMessages()),
                    S(1),
                    N("ngSwitchCase", "error"),
                    S(1),
                    N("ngSwitchCase", "hint"));
              },
              directives: [zi, QT, g2, Yr],
              styles: [
                ".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\n",
                '.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\n',
                '.mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\n',
                ".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\n",
                ".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\n",
                ".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\n",
              ],
              encapsulation: 2,
              data: { animation: [rI.transitionMessages] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        km = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({ imports: [[Li, en, XT], en] })),
            n
          );
        })();
      const _s = {
        schedule(n) {
          let e = requestAnimationFrame,
            t = cancelAnimationFrame;
          const { delegate: i } = _s;
          i && ((e = i.requestAnimationFrame), (t = i.cancelAnimationFrame));
          const r = e((s) => {
            (t = void 0), n(s);
          });
          return new He(() => (null == t ? void 0 : t(r)));
        },
        requestAnimationFrame(...n) {
          const { delegate: e } = _s;
          return (
            (null == e ? void 0 : e.requestAnimationFrame) ||
            requestAnimationFrame
          )(...n);
        },
        cancelAnimationFrame(...n) {
          const { delegate: e } = _s;
          return (
            (null == e ? void 0 : e.cancelAnimationFrame) ||
            cancelAnimationFrame
          )(...n);
        },
        delegate: void 0,
      };
      new (class pI extends nc {
        flush(e) {
          (this._active = !0), (this._scheduled = void 0);
          const { actions: t } = this;
          let i,
            r = -1;
          e = e || t.shift();
          const s = t.length;
          do {
            if ((i = e.execute(e.state, e.delay))) break;
          } while (++r < s && (e = t.shift()));
          if (((this._active = !1), i)) {
            for (; ++r < s && (e = t.shift()); ) e.unsubscribe();
            throw i;
          }
        }
      })(
        class dI extends tc {
          constructor(e, t) {
            super(e, t), (this.scheduler = e), (this.work = t);
          }
          requestAsyncId(e, t, i = 0) {
            return null !== i && i > 0
              ? super.requestAsyncId(e, t, i)
              : (e.actions.push(this),
                e._scheduled ||
                  (e._scheduled = _s.requestAnimationFrame(() =>
                    e.flush(void 0)
                  )));
          }
          recycleAsyncId(e, t, i = 0) {
            if ((null != i && i > 0) || (null == i && this.delay > 0))
              return super.recycleAsyncId(e, t, i);
            0 === e.actions.length &&
              (_s.cancelAnimationFrame(t), (e._scheduled = void 0));
          }
        }
      );
      let qc,
        gI = 1;
      const Xa = {};
      function Im(n) {
        return n in Xa && (delete Xa[n], !0);
      }
      const vI = {
          setImmediate(n) {
            const e = gI++;
            return (
              (Xa[e] = !0),
              qc || (qc = Promise.resolve()),
              qc.then(() => Im(e) && n()),
              e
            );
          },
          clearImmediate(n) {
            Im(n);
          },
        },
        { setImmediate: _I, clearImmediate: yI } = vI,
        Ja = {
          setImmediate(...n) {
            const { delegate: e } = Ja;
            return ((null == e ? void 0 : e.setImmediate) || _I)(...n);
          },
          clearImmediate(n) {
            const { delegate: e } = Ja;
            return ((null == e ? void 0 : e.clearImmediate) || yI)(n);
          },
          delegate: void 0,
        };
      new (class MI extends nc {
        flush(e) {
          (this._active = !0), (this._scheduled = void 0);
          const { actions: t } = this;
          let i,
            r = -1;
          e = e || t.shift();
          const s = t.length;
          do {
            if ((i = e.execute(e.state, e.delay))) break;
          } while (++r < s && (e = t.shift()));
          if (((this._active = !1), i)) {
            for (; ++r < s && (e = t.shift()); ) e.unsubscribe();
            throw i;
          }
        }
      })(
        class CI extends tc {
          constructor(e, t) {
            super(e, t), (this.scheduler = e), (this.work = t);
          }
          requestAsyncId(e, t, i = 0) {
            return null !== i && i > 0
              ? super.requestAsyncId(e, t, i)
              : (e.actions.push(this),
                e._scheduled ||
                  (e._scheduled = Ja.setImmediate(e.flush.bind(e, void 0))));
          }
          recycleAsyncId(e, t, i = 0) {
            if ((null != i && i > 0) || (null == i && this.delay > 0))
              return super.recycleAsyncId(e, t, i);
            0 === e.actions.length &&
              (Ja.clearImmediate(t), (e._scheduled = void 0));
          }
        }
      );
      function Hm(n, e = lp) {
        return (function wI(n) {
          return Oe((e, t) => {
            let i = !1,
              r = null,
              s = null,
              o = !1;
            const a = () => {
                if ((null == s || s.unsubscribe(), (s = null), i)) {
                  i = !1;
                  const l = r;
                  (r = null), t.next(l);
                }
                o && t.complete();
              },
              c = () => {
                (s = null), o && t.complete();
              };
            e.subscribe(
              new Te(
                t,
                (l) => {
                  (i = !0),
                    (r = l),
                    s || It(n(l)).subscribe((s = new Te(t, a, c)));
                },
                () => {
                  (o = !0), (!i || !s || s.closed) && t.complete();
                }
              )
            );
          });
        })(() =>
          (function EI(n = 0, e, t = lp) {
            let i = -1;
            return (
              null != e && (dl(e) ? (t = e) : (i = e)),
              new pe((r) => {
                let s = (function DI(n) {
                  return n instanceof Date && !isNaN(n);
                })(n)
                  ? +n - t.now()
                  : n;
                s < 0 && (s = 0);
                let o = 0;
                return t.schedule(function () {
                  r.closed ||
                    (r.next(o++),
                    0 <= i ? this.schedule(void 0, i) : r.complete());
                }, s);
              })
            );
          })(n, e)
        );
      }
      let AI = (() => {
          class n {
            constructor(t, i, r) {
              (this._ngZone = t),
                (this._platform = i),
                (this._scrolled = new me()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = r);
            }
            register(t) {
              this.scrollContainers.has(t) ||
                this.scrollContainers.set(
                  t,
                  t.elementScrolled().subscribe(() => this._scrolled.next(t))
                );
            }
            deregister(t) {
              const i = this.scrollContainers.get(t);
              i && (i.unsubscribe(), this.scrollContainers.delete(t));
            }
            scrolled(t = 20) {
              return this._platform.isBrowser
                ? new pe((i) => {
                    this._globalSubscription || this._addGlobalListener();
                    const r =
                      t > 0
                        ? this._scrolled.pipe(Hm(t)).subscribe(i)
                        : this._scrolled.subscribe(i);
                    return (
                      this._scrolledCount++,
                      () => {
                        r.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : G();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((t, i) => this.deregister(i)),
                this._scrolled.complete();
            }
            ancestorScrolled(t, i) {
              const r = this.getAncestorScrollContainers(t);
              return this.scrolled(i).pipe(x1((s) => !s || r.indexOf(s) > -1));
            }
            getAncestorScrollContainers(t) {
              const i = [];
              return (
                this.scrollContainers.forEach((r, s) => {
                  this._scrollableContainsElement(s, t) && i.push(s);
                }),
                i
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(t, i) {
              let r = xa(i),
                s = t.getElementRef().nativeElement;
              do {
                if (r == s) return !0;
              } while ((r = r.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                Qa(this._getWindow().document, "scroll").subscribe(() =>
                  this._scrolled.next()
                )
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(fe), C(X1), C(he, 8));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        ys = (() => {
          class n {
            constructor(t, i, r) {
              (this._platform = t),
                (this._change = new me()),
                (this._changeListener = (s) => {
                  this._change.next(s);
                }),
                (this._document = r),
                i.runOutsideAngular(() => {
                  if (t.isBrowser) {
                    const s = this._getWindow();
                    s.addEventListener("resize", this._changeListener),
                      s.addEventListener(
                        "orientationchange",
                        this._changeListener
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const t = this._getWindow();
                t.removeEventListener("resize", this._changeListener),
                  t.removeEventListener(
                    "orientationchange",
                    this._changeListener
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const t = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), t;
            }
            getViewportRect() {
              const t = this.getViewportScrollPosition(),
                { width: i, height: r } = this.getViewportSize();
              return {
                top: t.top,
                left: t.left,
                bottom: t.top + r,
                right: t.left + i,
                height: r,
                width: i,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const t = this._document,
                i = this._getWindow(),
                r = t.documentElement,
                s = r.getBoundingClientRect();
              return {
                top:
                  -s.top || t.body.scrollTop || i.scrollY || r.scrollTop || 0,
                left:
                  -s.left ||
                  t.body.scrollLeft ||
                  i.scrollX ||
                  r.scrollLeft ||
                  0,
              };
            }
            change(t = 20) {
              return t > 0 ? this._change.pipe(Hm(t)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const t = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: t.innerWidth, height: t.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(X1), C(fe), C(he, 8));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Zc = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({})),
            n
          );
        })(),
        Om = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({ imports: [[hs, dp, Zc], hs, Zc] })),
            n
          );
        })();
      class Kc {
        attach(e) {
          return (this._attachedHost = e), e.attach(this);
        }
        detach() {
          let e = this._attachedHost;
          null != e && ((this._attachedHost = null), e.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(e) {
          this._attachedHost = e;
        }
      }
      class zI extends Kc {
        constructor(e, t, i, r) {
          super(),
            (this.component = e),
            (this.viewContainerRef = t),
            (this.injector = i),
            (this.componentFactoryResolver = r);
        }
      }
      class Pm extends Kc {
        constructor(e, t, i) {
          super(),
            (this.templateRef = e),
            (this.viewContainerRef = t),
            (this.context = i);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(e, t = this.context) {
          return (this.context = t), super.attach(e);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class LI extends Kc {
        constructor(e) {
          super(), (this.element = e instanceof Le ? e.nativeElement : e);
        }
      }
      class NI extends class TI {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(e) {
          return e instanceof zI
            ? ((this._attachedPortal = e), this.attachComponentPortal(e))
            : e instanceof Pm
            ? ((this._attachedPortal = e), this.attachTemplatePortal(e))
            : this.attachDomPortal && e instanceof LI
            ? ((this._attachedPortal = e), this.attachDomPortal(e))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(e) {
          this._disposeFn = e;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      } {
        constructor(e, t, i, r, s) {
          super(),
            (this.outletElement = e),
            (this._componentFactoryResolver = t),
            (this._appRef = i),
            (this._defaultInjector = r),
            (this.attachDomPortal = (o) => {
              const a = o.element,
                c = this._document.createComment("dom-portal");
              a.parentNode.insertBefore(c, a),
                this.outletElement.appendChild(a),
                (this._attachedPortal = o),
                super.setDisposeFn(() => {
                  c.parentNode && c.parentNode.replaceChild(a, c);
                });
            }),
            (this._document = s);
        }
        attachComponentPortal(e) {
          const i = (
            e.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(e.component);
          let r;
          return (
            e.viewContainerRef
              ? ((r = e.viewContainerRef.createComponent(
                  i,
                  e.viewContainerRef.length,
                  e.injector || e.viewContainerRef.injector
                )),
                this.setDisposeFn(() => r.destroy()))
              : ((r = i.create(e.injector || this._defaultInjector)),
                this._appRef.attachView(r.hostView),
                this.setDisposeFn(() => {
                  this._appRef.detachView(r.hostView), r.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(r)),
            (this._attachedPortal = e),
            r
          );
        }
        attachTemplatePortal(e) {
          let t = e.viewContainerRef,
            i = t.createEmbeddedView(e.templateRef, e.context);
          return (
            i.rootNodes.forEach((r) => this.outletElement.appendChild(r)),
            i.detectChanges(),
            this.setDisposeFn(() => {
              let r = t.indexOf(i);
              -1 !== r && t.remove(r);
            }),
            (this._attachedPortal = e),
            i
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(e) {
          return e.hostView.rootNodes[0];
        }
      }
      let VI = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = Me({ type: n })),
          (n.ɵinj = ve({})),
          n
        );
      })();
      const Fm = rN();
      class II {
        constructor(e, t) {
          (this._viewportRuler = e),
            (this._previousHTMLStyles = { top: "", left: "" }),
            (this._isEnabled = !1),
            (this._document = t);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const e = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = e.style.left || ""),
              (this._previousHTMLStyles.top = e.style.top || ""),
              (e.style.left = Ye(-this._previousScrollPosition.left)),
              (e.style.top = Ye(-this._previousScrollPosition.top)),
              e.classList.add("cdk-global-scrollblock"),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const e = this._document.documentElement,
              i = e.style,
              r = this._document.body.style,
              s = i.scrollBehavior || "",
              o = r.scrollBehavior || "";
            (this._isEnabled = !1),
              (i.left = this._previousHTMLStyles.left),
              (i.top = this._previousHTMLStyles.top),
              e.classList.remove("cdk-global-scrollblock"),
              Fm && (i.scrollBehavior = r.scrollBehavior = "auto"),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top
              ),
              Fm && ((i.scrollBehavior = s), (r.scrollBehavior = o));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              "cdk-global-scrollblock"
            ) ||
            this._isEnabled
          )
            return !1;
          const t = this._document.body,
            i = this._viewportRuler.getViewportSize();
          return t.scrollHeight > i.height || t.scrollWidth > i.width;
        }
      }
      class HI {
        constructor(e, t, i, r) {
          (this._scrollDispatcher = e),
            (this._ngZone = t),
            (this._viewportRuler = i),
            (this._config = r),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(e) {
          this._overlayRef = e;
        }
        enable() {
          if (this._scrollSubscription) return;
          const e = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = e.subscribe(() => {
                const t = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(t - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = e.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class Rm {
        enable() {}
        disable() {}
        attach() {}
      }
      function Yc(n, e) {
        return e.some(
          (t) =>
            n.bottom < t.top ||
            n.top > t.bottom ||
            n.right < t.left ||
            n.left > t.right
        );
      }
      function Bm(n, e) {
        return e.some(
          (t) =>
            n.top < t.top ||
            n.bottom > t.bottom ||
            n.left < t.left ||
            n.right > t.right
        );
      }
      class OI {
        constructor(e, t, i, r) {
          (this._scrollDispatcher = e),
            (this._viewportRuler = t),
            (this._ngZone = i),
            (this._config = r),
            (this._scrollSubscription = null);
        }
        attach(e) {
          this._overlayRef = e;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const t =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: i, height: r } =
                      this._viewportRuler.getViewportSize();
                  Yc(t, [
                    {
                      width: i,
                      height: r,
                      bottom: r,
                      right: i,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let PI = (() => {
        class n {
          constructor(t, i, r, s) {
            (this._scrollDispatcher = t),
              (this._viewportRuler = i),
              (this._ngZone = r),
              (this.noop = () => new Rm()),
              (this.close = (o) =>
                new HI(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  o
                )),
              (this.block = () => new II(this._viewportRuler, this._document)),
              (this.reposition = (o) =>
                new OI(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  o
                )),
              (this._document = s);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(AI), C(ys), C(fe), C(he));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      class jm {
        constructor(e) {
          if (
            ((this.scrollStrategy = new Rm()),
            (this.panelClass = ""),
            (this.hasBackdrop = !1),
            (this.backdropClass = "cdk-overlay-dark-backdrop"),
            (this.disposeOnNavigation = !1),
            e)
          ) {
            const t = Object.keys(e);
            for (const i of t) void 0 !== e[i] && (this[i] = e[i]);
          }
        }
      }
      class FI {
        constructor(e, t) {
          (this.connectionPair = e), (this.scrollableViewProperties = t);
        }
      }
      class RI {
        constructor(e, t, i, r, s, o, a, c, l) {
          (this._portalOutlet = e),
            (this._host = t),
            (this._pane = i),
            (this._config = r),
            (this._ngZone = s),
            (this._keyboardDispatcher = o),
            (this._document = a),
            (this._location = c),
            (this._outsideClickDispatcher = l),
            (this._backdropElement = null),
            (this._backdropClick = new me()),
            (this._attachments = new me()),
            (this._detachments = new me()),
            (this._locationChanges = He.EMPTY),
            (this._backdropClickHandler = (u) => this._backdropClick.next(u)),
            (this._keydownEvents = new me()),
            (this._outsidePointerEvents = new me()),
            r.scrollStrategy &&
              ((this._scrollStrategy = r.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = r.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(e) {
          let t = this._portalOutlet.attach(e);
          return (
            !this._host.parentElement &&
              this._previousHostParent &&
              this._previousHostParent.appendChild(this._host),
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe(on(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose()
              )),
            this._outsideClickDispatcher.add(this),
            t
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const e = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            e
          );
        }
        dispose() {
          var e;
          const t = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            null === (e = this._host) || void 0 === e || e.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            t && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(e) {
          e !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = e),
            this.hasAttached() && (e.attach(this), this.updatePosition()));
        }
        updateSize(e) {
          (this._config = Object.assign(Object.assign({}, this._config), e)),
            this._updateElementSize();
        }
        setDirection(e) {
          (this._config = Object.assign(Object.assign({}, this._config), {
            direction: e,
          })),
            this._updateElementDirection();
        }
        addPanelClass(e) {
          this._pane && this._toggleClasses(this._pane, e, !0);
        }
        removePanelClass(e) {
          this._pane && this._toggleClasses(this._pane, e, !1);
        }
        getDirection() {
          const e = this._config.direction;
          return e ? ("string" == typeof e ? e : e.value) : "ltr";
        }
        updateScrollStrategy(e) {
          e !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = e),
            this.hasAttached() && (e.attach(this), e.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute("dir", this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const e = this._pane.style;
          (e.width = Ye(this._config.width)),
            (e.height = Ye(this._config.height)),
            (e.minWidth = Ye(this._config.minWidth)),
            (e.minHeight = Ye(this._config.minHeight)),
            (e.maxWidth = Ye(this._config.maxWidth)),
            (e.maxHeight = Ye(this._config.maxHeight));
        }
        _togglePointerEvents(e) {
          this._pane.style.pointerEvents = e ? "" : "none";
        }
        _attachBackdrop() {
          const e = "cdk-overlay-backdrop-showing";
          (this._backdropElement = this._document.createElement("div")),
            this._backdropElement.classList.add("cdk-overlay-backdrop"),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host
            ),
            this._backdropElement.addEventListener(
              "click",
              this._backdropClickHandler
            ),
            "undefined" != typeof requestAnimationFrame
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(e);
                  });
                })
              : this._backdropElement.classList.add(e);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const e = this._backdropElement;
          if (!e) return;
          let t;
          const i = () => {
            e &&
              (e.removeEventListener("click", this._backdropClickHandler),
              e.removeEventListener("transitionend", i),
              this._disposeBackdrop(e)),
              this._config.backdropClass &&
                this._toggleClasses(e, this._config.backdropClass, !1),
              clearTimeout(t);
          };
          e.classList.remove("cdk-overlay-backdrop-showing"),
            this._ngZone.runOutsideAngular(() => {
              e.addEventListener("transitionend", i);
            }),
            (e.style.pointerEvents = "none"),
            (t = this._ngZone.runOutsideAngular(() => setTimeout(i, 500)));
        }
        _toggleClasses(e, t, i) {
          const r = op(t || []).filter((s) => !!s);
          r.length && (i ? e.classList.add(...r) : e.classList.remove(...r));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const e = this._ngZone.onStable
              .pipe(h1(V2(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  e.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const e = this._scrollStrategy;
          e && (e.disable(), e.detach && e.detach());
        }
        _disposeBackdrop(e) {
          e &&
            (e.remove(),
            this._backdropElement === e && (this._backdropElement = null));
        }
      }
      let Um = (() => {
        class n {
          constructor(t, i) {
            (this._platform = i), (this._document = t);
          }
          ngOnDestroy() {
            var t;
            null === (t = this._containerElement) || void 0 === t || t.remove();
          }
          getContainerElement() {
            return (
              this._containerElement || this._createContainer(),
              this._containerElement
            );
          }
          _createContainer() {
            const t = "cdk-overlay-container";
            if (this._platform.isBrowser || oc()) {
              const r = this._document.querySelectorAll(
                `.${t}[platform="server"], .${t}[platform="test"]`
              );
              for (let s = 0; s < r.length; s++) r[s].remove();
            }
            const i = this._document.createElement("div");
            i.classList.add(t),
              oc()
                ? i.setAttribute("platform", "test")
                : this._platform.isBrowser ||
                  i.setAttribute("platform", "server"),
              this._document.body.appendChild(i),
              (this._containerElement = i);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(C(he), C(X1));
          }),
          (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const $m = "cdk-overlay-connected-position-bounding-box",
        BI = /([A-Za-z%]+)$/;
      class jI {
        constructor(e, t, i, r, s) {
          (this._viewportRuler = t),
            (this._document = i),
            (this._platform = r),
            (this._overlayContainer = s),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new me()),
            (this._resizeSubscription = He.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(e);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(e) {
          this._validatePositions(),
            e.hostElement.classList.add($m),
            (this._overlayRef = e),
            (this._boundingBox = e.hostElement),
            (this._pane = e.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const e = this._originRect,
            t = this._overlayRect,
            i = this._viewportRect,
            r = this._containerRect,
            s = [];
          let o;
          for (let a of this._preferredPositions) {
            let c = this._getOriginPoint(e, r, a),
              l = this._getOverlayPoint(c, t, a),
              u = this._getOverlayFit(l, t, i, a);
            if (u.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(a, c);
            this._canFitWithFlexibleDimensions(u, l, i)
              ? s.push({
                  position: a,
                  origin: c,
                  overlayRect: t,
                  boundingBoxRect: this._calculateBoundingBoxRect(c, a),
                })
              : (!o || o.overlayFit.visibleArea < u.visibleArea) &&
                (o = {
                  overlayFit: u,
                  overlayPoint: l,
                  originPoint: c,
                  position: a,
                  overlayRect: t,
                });
          }
          if (s.length) {
            let a = null,
              c = -1;
            for (const l of s) {
              const u =
                l.boundingBoxRect.width *
                l.boundingBoxRect.height *
                (l.position.weight || 1);
              u > c && ((c = u), (a = l));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(a.position, a.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(o.position, o.originPoint)
            );
          this._applyPosition(o.position, o.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              A2(this._boundingBox.style, {
                top: "",
                left: "",
                right: "",
                bottom: "",
                height: "",
                width: "",
                alignItems: "",
                justifyContent: "",
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove($m),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (
            !this._isDisposed &&
            (!this._platform || this._platform.isBrowser)
          ) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const e = this._lastPosition || this._preferredPositions[0],
              t = this._getOriginPoint(
                this._originRect,
                this._containerRect,
                e
              );
            this._applyPosition(e, t);
          }
        }
        withScrollableContainers(e) {
          return (this._scrollables = e), this;
        }
        withPositions(e) {
          return (
            (this._preferredPositions = e),
            -1 === e.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(e) {
          return (this._viewportMargin = e), this;
        }
        withFlexibleDimensions(e = !0) {
          return (this._hasFlexibleDimensions = e), this;
        }
        withGrowAfterOpen(e = !0) {
          return (this._growAfterOpen = e), this;
        }
        withPush(e = !0) {
          return (this._canPush = e), this;
        }
        withLockedPosition(e = !0) {
          return (this._positionLocked = e), this;
        }
        setOrigin(e) {
          return (this._origin = e), this;
        }
        withDefaultOffsetX(e) {
          return (this._offsetX = e), this;
        }
        withDefaultOffsetY(e) {
          return (this._offsetY = e), this;
        }
        withTransformOriginOn(e) {
          return (this._transformOriginSelector = e), this;
        }
        _getOriginPoint(e, t, i) {
          let r, s;
          if ("center" == i.originX) r = e.left + e.width / 2;
          else {
            const o = this._isRtl() ? e.right : e.left,
              a = this._isRtl() ? e.left : e.right;
            r = "start" == i.originX ? o : a;
          }
          return (
            t.left < 0 && (r -= t.left),
            (s =
              "center" == i.originY
                ? e.top + e.height / 2
                : "top" == i.originY
                ? e.top
                : e.bottom),
            t.top < 0 && (s -= t.top),
            { x: r, y: s }
          );
        }
        _getOverlayPoint(e, t, i) {
          let r, s;
          return (
            (r =
              "center" == i.overlayX
                ? -t.width / 2
                : "start" === i.overlayX
                ? this._isRtl()
                  ? -t.width
                  : 0
                : this._isRtl()
                ? 0
                : -t.width),
            (s =
              "center" == i.overlayY
                ? -t.height / 2
                : "top" == i.overlayY
                ? 0
                : -t.height),
            { x: e.x + r, y: e.y + s }
          );
        }
        _getOverlayFit(e, t, i, r) {
          const s = Wm(t);
          let { x: o, y: a } = e,
            c = this._getOffset(r, "x"),
            l = this._getOffset(r, "y");
          c && (o += c), l && (a += l);
          let h = 0 - a,
            d = a + s.height - i.height,
            p = this._subtractOverflows(s.width, 0 - o, o + s.width - i.width),
            m = this._subtractOverflows(s.height, h, d),
            g = p * m;
          return {
            visibleArea: g,
            isCompletelyWithinViewport: s.width * s.height === g,
            fitsInViewportVertically: m === s.height,
            fitsInViewportHorizontally: p == s.width,
          };
        }
        _canFitWithFlexibleDimensions(e, t, i) {
          if (this._hasFlexibleDimensions) {
            const r = i.bottom - t.y,
              s = i.right - t.x,
              o = Gm(this._overlayRef.getConfig().minHeight),
              a = Gm(this._overlayRef.getConfig().minWidth),
              l = e.fitsInViewportHorizontally || (null != a && a <= s);
            return (e.fitsInViewportVertically || (null != o && o <= r)) && l;
          }
          return !1;
        }
        _pushOverlayOnScreen(e, t, i) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: e.x + this._previousPushAmount.x,
              y: e.y + this._previousPushAmount.y,
            };
          const r = Wm(t),
            s = this._viewportRect,
            o = Math.max(e.x + r.width - s.width, 0),
            a = Math.max(e.y + r.height - s.height, 0),
            c = Math.max(s.top - i.top - e.y, 0),
            l = Math.max(s.left - i.left - e.x, 0);
          let u = 0,
            f = 0;
          return (
            (u =
              r.width <= s.width
                ? l || -o
                : e.x < this._viewportMargin
                ? s.left - i.left - e.x
                : 0),
            (f =
              r.height <= s.height
                ? c || -a
                : e.y < this._viewportMargin
                ? s.top - i.top - e.y
                : 0),
            (this._previousPushAmount = { x: u, y: f }),
            { x: e.x + u, y: e.y + f }
          );
        }
        _applyPosition(e, t) {
          if (
            (this._setTransformOrigin(e),
            this._setOverlayElementStyles(t, e),
            this._setBoundingBoxStyles(t, e),
            e.panelClass && this._addPanelClasses(e.panelClass),
            (this._lastPosition = e),
            this._positionChanges.observers.length)
          ) {
            const i = this._getScrollVisibility(),
              r = new FI(e, i);
            this._positionChanges.next(r);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(e) {
          if (!this._transformOriginSelector) return;
          const t = this._boundingBox.querySelectorAll(
            this._transformOriginSelector
          );
          let i,
            r = e.overlayY;
          i =
            "center" === e.overlayX
              ? "center"
              : this._isRtl()
              ? "start" === e.overlayX
                ? "right"
                : "left"
              : "start" === e.overlayX
              ? "left"
              : "right";
          for (let s = 0; s < t.length; s++)
            t[s].style.transformOrigin = `${i} ${r}`;
        }
        _calculateBoundingBoxRect(e, t) {
          const i = this._viewportRect,
            r = this._isRtl();
          let s, o, a, u, f, h;
          if ("top" === t.overlayY)
            (o = e.y), (s = i.height - o + this._viewportMargin);
          else if ("bottom" === t.overlayY)
            (a = i.height - e.y + 2 * this._viewportMargin),
              (s = i.height - a + this._viewportMargin);
          else {
            const d = Math.min(i.bottom - e.y + i.top, e.y),
              p = this._lastBoundingBoxSize.height;
            (s = 2 * d),
              (o = e.y - d),
              s > p &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (o = e.y - p / 2);
          }
          if (("end" === t.overlayX && !r) || ("start" === t.overlayX && r))
            (h = i.width - e.x + this._viewportMargin),
              (u = e.x - this._viewportMargin);
          else if (
            ("start" === t.overlayX && !r) ||
            ("end" === t.overlayX && r)
          )
            (f = e.x), (u = i.right - e.x);
          else {
            const d = Math.min(i.right - e.x + i.left, e.x),
              p = this._lastBoundingBoxSize.width;
            (u = 2 * d),
              (f = e.x - d),
              u > p &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (f = e.x - p / 2);
          }
          return { top: o, left: f, bottom: a, right: h, width: u, height: s };
        }
        _setBoundingBoxStyles(e, t) {
          const i = this._calculateBoundingBoxRect(e, t);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((i.height = Math.min(i.height, this._lastBoundingBoxSize.height)),
            (i.width = Math.min(i.width, this._lastBoundingBoxSize.width)));
          const r = {};
          if (this._hasExactPosition())
            (r.top = r.left = "0"),
              (r.bottom = r.right = r.maxHeight = r.maxWidth = ""),
              (r.width = r.height = "100%");
          else {
            const s = this._overlayRef.getConfig().maxHeight,
              o = this._overlayRef.getConfig().maxWidth;
            (r.height = Ye(i.height)),
              (r.top = Ye(i.top)),
              (r.bottom = Ye(i.bottom)),
              (r.width = Ye(i.width)),
              (r.left = Ye(i.left)),
              (r.right = Ye(i.right)),
              (r.alignItems =
                "center" === t.overlayX
                  ? "center"
                  : "end" === t.overlayX
                  ? "flex-end"
                  : "flex-start"),
              (r.justifyContent =
                "center" === t.overlayY
                  ? "center"
                  : "bottom" === t.overlayY
                  ? "flex-end"
                  : "flex-start"),
              s && (r.maxHeight = Ye(s)),
              o && (r.maxWidth = Ye(o));
          }
          (this._lastBoundingBoxSize = i), A2(this._boundingBox.style, r);
        }
        _resetBoundingBoxStyles() {
          A2(this._boundingBox.style, {
            top: "0",
            left: "0",
            right: "0",
            bottom: "0",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          });
        }
        _resetOverlayElementStyles() {
          A2(this._pane.style, {
            top: "",
            left: "",
            bottom: "",
            right: "",
            position: "",
            transform: "",
          });
        }
        _setOverlayElementStyles(e, t) {
          const i = {},
            r = this._hasExactPosition(),
            s = this._hasFlexibleDimensions,
            o = this._overlayRef.getConfig();
          if (r) {
            const u = this._viewportRuler.getViewportScrollPosition();
            A2(i, this._getExactOverlayY(t, e, u)),
              A2(i, this._getExactOverlayX(t, e, u));
          } else i.position = "static";
          let a = "",
            c = this._getOffset(t, "x"),
            l = this._getOffset(t, "y");
          c && (a += `translateX(${c}px) `),
            l && (a += `translateY(${l}px)`),
            (i.transform = a.trim()),
            o.maxHeight &&
              (r ? (i.maxHeight = Ye(o.maxHeight)) : s && (i.maxHeight = "")),
            o.maxWidth &&
              (r ? (i.maxWidth = Ye(o.maxWidth)) : s && (i.maxWidth = "")),
            A2(this._pane.style, i);
        }
        _getExactOverlayY(e, t, i) {
          let r = { top: "", bottom: "" },
            s = this._getOverlayPoint(t, this._overlayRect, e);
          return (
            this._isPushed &&
              (s = this._pushOverlayOnScreen(s, this._overlayRect, i)),
            "bottom" === e.overlayY
              ? (r.bottom =
                  this._document.documentElement.clientHeight -
                  (s.y + this._overlayRect.height) +
                  "px")
              : (r.top = Ye(s.y)),
            r
          );
        }
        _getExactOverlayX(e, t, i) {
          let o,
            r = { left: "", right: "" },
            s = this._getOverlayPoint(t, this._overlayRect, e);
          return (
            this._isPushed &&
              (s = this._pushOverlayOnScreen(s, this._overlayRect, i)),
            (o = this._isRtl()
              ? "end" === e.overlayX
                ? "left"
                : "right"
              : "end" === e.overlayX
              ? "right"
              : "left"),
            "right" === o
              ? (r.right =
                  this._document.documentElement.clientWidth -
                  (s.x + this._overlayRect.width) +
                  "px")
              : (r.left = Ye(s.x)),
            r
          );
        }
        _getScrollVisibility() {
          const e = this._getOriginRect(),
            t = this._pane.getBoundingClientRect(),
            i = this._scrollables.map((r) =>
              r.getElementRef().nativeElement.getBoundingClientRect()
            );
          return {
            isOriginClipped: Bm(e, i),
            isOriginOutsideView: Yc(e, i),
            isOverlayClipped: Bm(t, i),
            isOverlayOutsideView: Yc(t, i),
          };
        }
        _subtractOverflows(e, ...t) {
          return t.reduce((i, r) => i - Math.max(r, 0), e);
        }
        _getNarrowedViewportRect() {
          const e = this._document.documentElement.clientWidth,
            t = this._document.documentElement.clientHeight,
            i = this._viewportRuler.getViewportScrollPosition();
          return {
            top: i.top + this._viewportMargin,
            left: i.left + this._viewportMargin,
            right: i.left + e - this._viewportMargin,
            bottom: i.top + t - this._viewportMargin,
            width: e - 2 * this._viewportMargin,
            height: t - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(e, t) {
          return "x" === t
            ? null == e.offsetX
              ? this._offsetX
              : e.offsetX
            : null == e.offsetY
            ? this._offsetY
            : e.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(e) {
          this._pane &&
            op(e).forEach((t) => {
              "" !== t &&
                -1 === this._appliedPanelClasses.indexOf(t) &&
                (this._appliedPanelClasses.push(t),
                this._pane.classList.add(t));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((e) => {
              this._pane.classList.remove(e);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const e = this._origin;
          if (e instanceof Le) return e.nativeElement.getBoundingClientRect();
          if (e instanceof Element) return e.getBoundingClientRect();
          const t = e.width || 0,
            i = e.height || 0;
          return {
            top: e.y,
            bottom: e.y + i,
            left: e.x,
            right: e.x + t,
            height: i,
            width: t,
          };
        }
      }
      function A2(n, e) {
        for (let t in e) e.hasOwnProperty(t) && (n[t] = e[t]);
        return n;
      }
      function Gm(n) {
        if ("number" != typeof n && null != n) {
          const [e, t] = n.split(BI);
          return t && "px" !== t ? null : parseFloat(e);
        }
        return n || null;
      }
      function Wm(n) {
        return {
          top: Math.floor(n.top),
          right: Math.floor(n.right),
          bottom: Math.floor(n.bottom),
          left: Math.floor(n.left),
          width: Math.floor(n.width),
          height: Math.floor(n.height),
        };
      }
      const qm = "cdk-global-overlay-wrapper";
      class UI {
        constructor() {
          (this._cssPosition = "static"),
            (this._topOffset = ""),
            (this._bottomOffset = ""),
            (this._leftOffset = ""),
            (this._rightOffset = ""),
            (this._alignItems = ""),
            (this._justifyContent = ""),
            (this._width = ""),
            (this._height = "");
        }
        attach(e) {
          const t = e.getConfig();
          (this._overlayRef = e),
            this._width && !t.width && e.updateSize({ width: this._width }),
            this._height && !t.height && e.updateSize({ height: this._height }),
            e.hostElement.classList.add(qm),
            (this._isDisposed = !1);
        }
        top(e = "") {
          return (
            (this._bottomOffset = ""),
            (this._topOffset = e),
            (this._alignItems = "flex-start"),
            this
          );
        }
        left(e = "") {
          return (
            (this._rightOffset = ""),
            (this._leftOffset = e),
            (this._justifyContent = "flex-start"),
            this
          );
        }
        bottom(e = "") {
          return (
            (this._topOffset = ""),
            (this._bottomOffset = e),
            (this._alignItems = "flex-end"),
            this
          );
        }
        right(e = "") {
          return (
            (this._leftOffset = ""),
            (this._rightOffset = e),
            (this._justifyContent = "flex-end"),
            this
          );
        }
        width(e = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: e })
              : (this._width = e),
            this
          );
        }
        height(e = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: e })
              : (this._height = e),
            this
          );
        }
        centerHorizontally(e = "") {
          return this.left(e), (this._justifyContent = "center"), this;
        }
        centerVertically(e = "") {
          return this.top(e), (this._alignItems = "center"), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const e = this._overlayRef.overlayElement.style,
            t = this._overlayRef.hostElement.style,
            i = this._overlayRef.getConfig(),
            { width: r, height: s, maxWidth: o, maxHeight: a } = i,
            c = !(
              ("100%" !== r && "100vw" !== r) ||
              (o && "100%" !== o && "100vw" !== o)
            ),
            l = !(
              ("100%" !== s && "100vh" !== s) ||
              (a && "100%" !== a && "100vh" !== a)
            );
          (e.position = this._cssPosition),
            (e.marginLeft = c ? "0" : this._leftOffset),
            (e.marginTop = l ? "0" : this._topOffset),
            (e.marginBottom = this._bottomOffset),
            (e.marginRight = this._rightOffset),
            c
              ? (t.justifyContent = "flex-start")
              : "center" === this._justifyContent
              ? (t.justifyContent = "center")
              : "rtl" === this._overlayRef.getConfig().direction
              ? "flex-start" === this._justifyContent
                ? (t.justifyContent = "flex-end")
                : "flex-end" === this._justifyContent &&
                  (t.justifyContent = "flex-start")
              : (t.justifyContent = this._justifyContent),
            (t.alignItems = l ? "flex-start" : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const e = this._overlayRef.overlayElement.style,
            t = this._overlayRef.hostElement,
            i = t.style;
          t.classList.remove(qm),
            (i.justifyContent =
              i.alignItems =
              e.marginTop =
              e.marginBottom =
              e.marginLeft =
              e.marginRight =
              e.position =
                ""),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let $I = (() => {
          class n {
            constructor(t, i, r, s) {
              (this._viewportRuler = t),
                (this._document = i),
                (this._platform = r),
                (this._overlayContainer = s);
            }
            global() {
              return new UI();
            }
            flexibleConnectedTo(t) {
              return new jI(
                t,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(ys), C(he), C(X1), C(Um));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Zm = (() => {
          class n {
            constructor(t) {
              (this._attachedOverlays = []), (this._document = t);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(t) {
              this.remove(t), this._attachedOverlays.push(t);
            }
            remove(t) {
              const i = this._attachedOverlays.indexOf(t);
              i > -1 && this._attachedOverlays.splice(i, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(he));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        GI = (() => {
          class n extends Zm {
            constructor(t) {
              super(t),
                (this._keydownListener = (i) => {
                  const r = this._attachedOverlays;
                  for (let s = r.length - 1; s > -1; s--)
                    if (r[s]._keydownEvents.observers.length > 0) {
                      r[s]._keydownEvents.next(i);
                      break;
                    }
                });
            }
            add(t) {
              super.add(t),
                this._isAttached ||
                  (this._document.body.addEventListener(
                    "keydown",
                    this._keydownListener
                  ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  "keydown",
                  this._keydownListener
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(he));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        WI = (() => {
          class n extends Zm {
            constructor(t, i) {
              super(t),
                (this._platform = i),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = (r) => {
                  this._pointerDownEventTarget = mp(r);
                }),
                (this._clickListener = (r) => {
                  const s = mp(r),
                    o =
                      "click" === r.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : s;
                  this._pointerDownEventTarget = null;
                  const a = this._attachedOverlays.slice();
                  for (let c = a.length - 1; c > -1; c--) {
                    const l = a[c];
                    if (
                      !(l._outsidePointerEvents.observers.length < 1) &&
                      l.hasAttached()
                    ) {
                      if (
                        l.overlayElement.contains(s) ||
                        l.overlayElement.contains(o)
                      )
                        break;
                      l._outsidePointerEvents.next(r);
                    }
                  }
                });
            }
            add(t) {
              if ((super.add(t), !this._isAttached)) {
                const i = this._document.body;
                i.addEventListener(
                  "pointerdown",
                  this._pointerDownListener,
                  !0
                ),
                  i.addEventListener("click", this._clickListener, !0),
                  i.addEventListener("auxclick", this._clickListener, !0),
                  i.addEventListener("contextmenu", this._clickListener, !0),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = i.style.cursor),
                    (i.style.cursor = "pointer"),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const t = this._document.body;
                t.removeEventListener(
                  "pointerdown",
                  this._pointerDownListener,
                  !0
                ),
                  t.removeEventListener("click", this._clickListener, !0),
                  t.removeEventListener("auxclick", this._clickListener, !0),
                  t.removeEventListener("contextmenu", this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((t.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(he), C(X1));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        qI = 0,
        e4 = (() => {
          class n {
            constructor(t, i, r, s, o, a, c, l, u, f, h) {
              (this.scrollStrategies = t),
                (this._overlayContainer = i),
                (this._componentFactoryResolver = r),
                (this._positionBuilder = s),
                (this._keyboardDispatcher = o),
                (this._injector = a),
                (this._ngZone = c),
                (this._document = l),
                (this._directionality = u),
                (this._location = f),
                (this._outsideClickDispatcher = h);
            }
            create(t) {
              const i = this._createHostElement(),
                r = this._createPaneElement(i),
                s = this._createPortalOutlet(r),
                o = new jm(t);
              return (
                (o.direction = o.direction || this._directionality.value),
                new RI(
                  s,
                  i,
                  r,
                  o,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(t) {
              const i = this._document.createElement("div");
              return (
                (i.id = "cdk-overlay-" + qI++),
                i.classList.add("cdk-overlay-pane"),
                t.appendChild(i),
                i
              );
            }
            _createHostElement() {
              const t = this._document.createElement("div");
              return (
                this._overlayContainer.getContainerElement().appendChild(t), t
              );
            }
            _createPortalOutlet(t) {
              return (
                this._appRef || (this._appRef = this._injector.get(Si)),
                new NI(
                  t,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document
                )
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                C(PI),
                C(Um),
                C(f2),
                C($I),
                C(GI),
                C(nt),
                C(fe),
                C(he),
                C(La),
                C(qo),
                C(WI)
              );
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      const ZI = [
          {
            originX: "start",
            originY: "bottom",
            overlayX: "start",
            overlayY: "top",
          },
          {
            originX: "start",
            originY: "top",
            overlayX: "start",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "top",
            overlayX: "end",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "bottom",
            overlayX: "end",
            overlayY: "top",
          },
        ],
        Km = new L("cdk-connected-overlay-scroll-strategy");
      let Ym = (() => {
          class n {
            constructor(t) {
              this.elementRef = t;
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(Le));
            }),
            (n.ɵdir = V({
              type: n,
              selectors: [
                ["", "cdk-overlay-origin", ""],
                ["", "overlay-origin", ""],
                ["", "cdkOverlayOrigin", ""],
              ],
              exportAs: ["cdkOverlayOrigin"],
            })),
            n
          );
        })(),
        Qm = (() => {
          class n {
            constructor(t, i, r, s, o) {
              (this._overlay = t),
                (this._dir = o),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = He.EMPTY),
                (this._attachSubscription = He.EMPTY),
                (this._detachSubscription = He.EMPTY),
                (this._positionSubscription = He.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new $()),
                (this.positionChange = new $()),
                (this.attach = new $()),
                (this.detach = new $()),
                (this.overlayKeydown = new $()),
                (this.overlayOutsideClick = new $()),
                (this._templatePortal = new Pm(i, r)),
                (this._scrollStrategyFactory = s),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(t) {
              (this._offsetX = t),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(t) {
              (this._offsetY = t),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(t) {
              this._hasBackdrop = Wt(t);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(t) {
              this._lockPosition = Wt(t);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(t) {
              this._flexibleDimensions = Wt(t);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(t) {
              this._growAfterOpen = Wt(t);
            }
            get push() {
              return this._push;
            }
            set push(t) {
              this._push = Wt(t);
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : "ltr";
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(t) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                t.origin && this.open && this._position.apply()),
                t.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (!this.positions || !this.positions.length) &&
                (this.positions = ZI);
              const t = (this._overlayRef = this._overlay.create(
                this._buildConfig()
              ));
              (this._attachSubscription = t
                .attachments()
                .subscribe(() => this.attach.emit())),
                (this._detachSubscription = t
                  .detachments()
                  .subscribe(() => this.detach.emit())),
                t.keydownEvents().subscribe((i) => {
                  this.overlayKeydown.next(i),
                    27 === i.keyCode &&
                      !this.disableClose &&
                      !ps(i) &&
                      (i.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe((i) => {
                  this.overlayOutsideClick.next(i);
                });
            }
            _buildConfig() {
              const t = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                i = new jm({
                  direction: this._dir,
                  positionStrategy: t,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (i.width = this.width),
                (this.height || 0 === this.height) && (i.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (i.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (i.minHeight = this.minHeight),
                this.backdropClass && (i.backdropClass = this.backdropClass),
                this.panelClass && (i.panelClass = this.panelClass),
                i
              );
            }
            _updatePositionStrategy(t) {
              const i = this.positions.map((r) => ({
                originX: r.originX,
                originY: r.originY,
                overlayX: r.overlayX,
                overlayY: r.overlayY,
                offsetX: r.offsetX || this.offsetX,
                offsetY: r.offsetY || this.offsetY,
                panelClass: r.panelClass || void 0,
              }));
              return t
                .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())
                .withPositions(i)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const t = this._overlay
                .position()
                .flexibleConnectedTo(
                  this._getFlexibleConnectedPositionStrategyOrigin()
                );
              return this._updatePositionStrategy(t), t;
            }
            _getFlexibleConnectedPositionStrategyOrigin() {
              return this.origin instanceof Ym
                ? this.origin.elementRef
                : this.origin;
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe((t) => {
                        this.backdropClick.emit(t);
                      }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(
                      (function kI(n, e = !1) {
                        return Oe((t, i) => {
                          let r = 0;
                          t.subscribe(
                            new Te(i, (s) => {
                              const o = n(s, r++);
                              (o || e) && i.next(s), !o && i.complete();
                            })
                          );
                        });
                      })(() => this.positionChange.observers.length > 0)
                    )
                    .subscribe((t) => {
                      this.positionChange.emit(t),
                        0 === this.positionChange.observers.length &&
                          this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(e4), _(W1), _(r1), _(Km), _(La, 8));
            }),
            (n.ɵdir = V({
              type: n,
              selectors: [
                ["", "cdk-connected-overlay", ""],
                ["", "connected-overlay", ""],
                ["", "cdkConnectedOverlay", ""],
              ],
              inputs: {
                origin: ["cdkConnectedOverlayOrigin", "origin"],
                positions: ["cdkConnectedOverlayPositions", "positions"],
                positionStrategy: [
                  "cdkConnectedOverlayPositionStrategy",
                  "positionStrategy",
                ],
                offsetX: ["cdkConnectedOverlayOffsetX", "offsetX"],
                offsetY: ["cdkConnectedOverlayOffsetY", "offsetY"],
                width: ["cdkConnectedOverlayWidth", "width"],
                height: ["cdkConnectedOverlayHeight", "height"],
                minWidth: ["cdkConnectedOverlayMinWidth", "minWidth"],
                minHeight: ["cdkConnectedOverlayMinHeight", "minHeight"],
                backdropClass: [
                  "cdkConnectedOverlayBackdropClass",
                  "backdropClass",
                ],
                panelClass: ["cdkConnectedOverlayPanelClass", "panelClass"],
                viewportMargin: [
                  "cdkConnectedOverlayViewportMargin",
                  "viewportMargin",
                ],
                scrollStrategy: [
                  "cdkConnectedOverlayScrollStrategy",
                  "scrollStrategy",
                ],
                open: ["cdkConnectedOverlayOpen", "open"],
                disableClose: [
                  "cdkConnectedOverlayDisableClose",
                  "disableClose",
                ],
                transformOriginSelector: [
                  "cdkConnectedOverlayTransformOriginOn",
                  "transformOriginSelector",
                ],
                hasBackdrop: ["cdkConnectedOverlayHasBackdrop", "hasBackdrop"],
                lockPosition: [
                  "cdkConnectedOverlayLockPosition",
                  "lockPosition",
                ],
                flexibleDimensions: [
                  "cdkConnectedOverlayFlexibleDimensions",
                  "flexibleDimensions",
                ],
                growAfterOpen: [
                  "cdkConnectedOverlayGrowAfterOpen",
                  "growAfterOpen",
                ],
                push: ["cdkConnectedOverlayPush", "push"],
              },
              outputs: {
                backdropClick: "backdropClick",
                positionChange: "positionChange",
                attach: "attach",
                detach: "detach",
                overlayKeydown: "overlayKeydown",
                overlayOutsideClick: "overlayOutsideClick",
              },
              exportAs: ["cdkConnectedOverlay"],
              features: [Je],
            })),
            n
          );
        })();
      const YI = {
        provide: Km,
        deps: [e4],
        useFactory: function KI(n) {
          return () => n.scrollStrategies.reposition();
        },
      };
      let QI = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = Me({ type: n })),
          (n.ɵinj = ve({ providers: [e4, YI], imports: [[hs, VI, Om], Om] })),
          n
        );
      })();
      class XI {
        constructor(e = !1, t, i = !0) {
          (this._multiple = e),
            (this._emitChanges = i),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new me()),
            t &&
              t.length &&
              (e
                ? t.forEach((r) => this._markSelected(r))
                : this._markSelected(t[0]),
              (this._selectedToEmit.length = 0));
        }
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        select(...e) {
          this._verifyValueAssignment(e),
            e.forEach((t) => this._markSelected(t)),
            this._emitChangeEvent();
        }
        deselect(...e) {
          this._verifyValueAssignment(e),
            e.forEach((t) => this._unmarkSelected(t)),
            this._emitChangeEvent();
        }
        toggle(e) {
          this.isSelected(e) ? this.deselect(e) : this.select(e);
        }
        clear() {
          this._unmarkAll(), this._emitChangeEvent();
        }
        isSelected(e) {
          return this._selection.has(e);
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(e) {
          this._multiple && this.selected && this._selected.sort(e);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(e) {
          this.isSelected(e) ||
            (this._multiple || this._unmarkAll(),
            this._selection.add(e),
            this._emitChanges && this._selectedToEmit.push(e));
        }
        _unmarkSelected(e) {
          this.isSelected(e) &&
            (this._selection.delete(e),
            this._emitChanges && this._deselectedToEmit.push(e));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach((e) => this._unmarkSelected(e));
        }
        _verifyValueAssignment(e) {}
      }
      function Gn(n) {
        return null == n || 0 === n.length;
      }
      function eg(n) {
        return null != n && "number" == typeof n.length;
      }
      const gt = new L("NgValidators"),
        Wn = new L("NgAsyncValidators"),
        rH =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class sH {
        static min(e) {
          return (function tg(n) {
            return (e) => {
              if (Gn(e.value) || Gn(n)) return null;
              const t = parseFloat(e.value);
              return !isNaN(t) && t < n
                ? { min: { min: n, actual: e.value } }
                : null;
            };
          })(e);
        }
        static max(e) {
          return (function ng(n) {
            return (e) => {
              if (Gn(e.value) || Gn(n)) return null;
              const t = parseFloat(e.value);
              return !isNaN(t) && t > n
                ? { max: { max: n, actual: e.value } }
                : null;
            };
          })(e);
        }
        static required(e) {
          return (function ig(n) {
            return Gn(n.value) ? { required: !0 } : null;
          })(e);
        }
        static requiredTrue(e) {
          return (function rg(n) {
            return !0 === n.value ? null : { required: !0 };
          })(e);
        }
        static email(e) {
          return (function sg(n) {
            return Gn(n.value) || rH.test(n.value) ? null : { email: !0 };
          })(e);
        }
        static minLength(e) {
          return (function og(n) {
            return (e) =>
              Gn(e.value) || !eg(e.value)
                ? null
                : e.value.length < n
                ? {
                    minlength: {
                      requiredLength: n,
                      actualLength: e.value.length,
                    },
                  }
                : null;
          })(e);
        }
        static maxLength(e) {
          return (function ag(n) {
            return (e) =>
              eg(e.value) && e.value.length > n
                ? {
                    maxlength: {
                      requiredLength: n,
                      actualLength: e.value.length,
                    },
                  }
                : null;
          })(e);
        }
        static pattern(e) {
          return (function cg(n) {
            if (!n) return Cs;
            let e, t;
            return (
              "string" == typeof n
                ? ((t = ""),
                  "^" !== n.charAt(0) && (t += "^"),
                  (t += n),
                  "$" !== n.charAt(n.length - 1) && (t += "$"),
                  (e = new RegExp(t)))
                : ((t = n.toString()), (e = n)),
              (i) => {
                if (Gn(i.value)) return null;
                const r = i.value;
                return e.test(r)
                  ? null
                  : { pattern: { requiredPattern: t, actualValue: r } };
              }
            );
          })(e);
        }
        static nullValidator(e) {
          return null;
        }
        static compose(e) {
          return pg(e);
        }
        static composeAsync(e) {
          return mg(e);
        }
      }
      function Cs(n) {
        return null;
      }
      function lg(n) {
        return null != n;
      }
      function ug(n) {
        const e = Nr(n) ? st(n) : n;
        return _3(e), e;
      }
      function fg(n) {
        let e = {};
        return (
          n.forEach((t) => {
            e = null != t ? Object.assign(Object.assign({}, e), t) : e;
          }),
          0 === Object.keys(e).length ? null : e
        );
      }
      function hg(n, e) {
        return e.map((t) => t(n));
      }
      function dg(n) {
        return n.map((e) =>
          (function oH(n) {
            return !n.validate;
          })(e)
            ? e
            : (t) => e.validate(t)
        );
      }
      function pg(n) {
        if (!n) return null;
        const e = n.filter(lg);
        return 0 == e.length
          ? null
          : function (t) {
              return fg(hg(t, e));
            };
      }
      function Xc(n) {
        return null != n ? pg(dg(n)) : null;
      }
      function mg(n) {
        if (!n) return null;
        const e = n.filter(lg);
        return 0 == e.length
          ? null
          : function (t) {
              return (function JI(...n) {
                const e = pl(n),
                  { args: t, keys: i } = Uh(n),
                  r = new pe((s) => {
                    const { length: o } = t;
                    if (!o) return void s.complete();
                    const a = new Array(o);
                    let c = o,
                      l = o;
                    for (let u = 0; u < o; u++) {
                      let f = !1;
                      It(t[u]).subscribe(
                        new Te(
                          s,
                          (h) => {
                            f || ((f = !0), l--), (a[u] = h);
                          },
                          () => c--,
                          void 0,
                          () => {
                            (!c || !f) &&
                              (l || s.next(i ? $h(i, a) : a), s.complete());
                          }
                        )
                      );
                    }
                  });
                return e ? r.pipe(w0(e)) : r;
              })(hg(t, e).map(ug)).pipe(ae(fg));
            };
      }
      function Jc(n) {
        return null != n ? mg(dg(n)) : null;
      }
      function gg(n, e) {
        return null === n ? [e] : Array.isArray(n) ? [...n, e] : [n, e];
      }
      function vg(n) {
        return n._rawValidators;
      }
      function _g(n) {
        return n._rawAsyncValidators;
      }
      function e8(n) {
        return n ? (Array.isArray(n) ? n : [n]) : [];
      }
      function t4(n, e) {
        return Array.isArray(n) ? n.includes(e) : n === e;
      }
      function yg(n, e) {
        const t = e8(e);
        return (
          e8(n).forEach((r) => {
            t4(t, r) || t.push(r);
          }),
          t
        );
      }
      function Cg(n, e) {
        return e8(e).filter((t) => !t4(n, t));
      }
      class Mg {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(e) {
          (this._rawValidators = e || []),
            (this._composedValidatorFn = Xc(this._rawValidators));
        }
        _setAsyncValidators(e) {
          (this._rawAsyncValidators = e || []),
            (this._composedAsyncValidatorFn = Jc(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(e) {
          this._onDestroyCallbacks.push(e);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((e) => e()),
            (this._onDestroyCallbacks = []);
        }
        reset(e) {
          this.control && this.control.reset(e);
        }
        hasError(e, t) {
          return !!this.control && this.control.hasError(e, t);
        }
        getError(e, t) {
          return this.control ? this.control.getError(e, t) : null;
        }
      }
      class bn extends Mg {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class At extends Mg {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      function Ms(n, e) {
        i8(n, e),
          e.valueAccessor.writeValue(n.value),
          (function gH(n, e) {
            e.valueAccessor.registerOnChange((t) => {
              (n._pendingValue = t),
                (n._pendingChange = !0),
                (n._pendingDirty = !0),
                "change" === n.updateOn && Dg(n, e);
            });
          })(n, e),
          (function _H(n, e) {
            const t = (i, r) => {
              e.valueAccessor.writeValue(i), r && e.viewToModelUpdate(i);
            };
            n.registerOnChange(t),
              e._registerOnDestroy(() => {
                n._unregisterOnChange(t);
              });
          })(n, e),
          (function vH(n, e) {
            e.valueAccessor.registerOnTouched(() => {
              (n._pendingTouched = !0),
                "blur" === n.updateOn && n._pendingChange && Dg(n, e),
                "submit" !== n.updateOn && n.markAsTouched();
            });
          })(n, e),
          (function mH(n, e) {
            if (e.valueAccessor.setDisabledState) {
              const t = (i) => {
                e.valueAccessor.setDisabledState(i);
              };
              n.registerOnDisabledChange(t),
                e._registerOnDestroy(() => {
                  n._unregisterOnDisabledChange(t);
                });
            }
          })(n, e);
      }
      function r4(n, e, t = !0) {
        const i = () => {};
        e.valueAccessor &&
          (e.valueAccessor.registerOnChange(i),
          e.valueAccessor.registerOnTouched(i)),
          o4(n, e),
          n &&
            (e._invokeOnDestroyCallbacks(),
            n._registerOnCollectionChange(() => {}));
      }
      function s4(n, e) {
        n.forEach((t) => {
          t.registerOnValidatorChange && t.registerOnValidatorChange(e);
        });
      }
      function i8(n, e) {
        const t = vg(n);
        null !== e.validator
          ? n.setValidators(gg(t, e.validator))
          : "function" == typeof t && n.setValidators([t]);
        const i = _g(n);
        null !== e.asyncValidator
          ? n.setAsyncValidators(gg(i, e.asyncValidator))
          : "function" == typeof i && n.setAsyncValidators([i]);
        const r = () => n.updateValueAndValidity();
        s4(e._rawValidators, r), s4(e._rawAsyncValidators, r);
      }
      function o4(n, e) {
        let t = !1;
        if (null !== n) {
          if (null !== e.validator) {
            const r = vg(n);
            if (Array.isArray(r) && r.length > 0) {
              const s = r.filter((o) => o !== e.validator);
              s.length !== r.length && ((t = !0), n.setValidators(s));
            }
          }
          if (null !== e.asyncValidator) {
            const r = _g(n);
            if (Array.isArray(r) && r.length > 0) {
              const s = r.filter((o) => o !== e.asyncValidator);
              s.length !== r.length && ((t = !0), n.setAsyncValidators(s));
            }
          }
        }
        const i = () => {};
        return s4(e._rawValidators, i), s4(e._rawAsyncValidators, i), t;
      }
      function Dg(n, e) {
        n._pendingDirty && n.markAsDirty(),
          n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
          e.viewToModelUpdate(n._pendingValue),
          (n._pendingChange = !1);
      }
      function Eg(n, e) {
        i8(n, e);
      }
      function Sg(n, e) {
        n._syncPendingControls(),
          e.forEach((t) => {
            const i = t.control;
            "submit" === i.updateOn &&
              i._pendingChange &&
              (t.viewToModelUpdate(i._pendingValue), (i._pendingChange = !1));
          });
      }
      function a4(n, e) {
        const t = n.indexOf(e);
        t > -1 && n.splice(t, 1);
      }
      const bs = "VALID",
        c4 = "INVALID",
        Ui = "PENDING",
        ws = "DISABLED";
      function a8(n) {
        return (l8(n) ? n.validators : n) || null;
      }
      function Ag(n) {
        return Array.isArray(n) ? Xc(n) : n || null;
      }
      function c8(n, e) {
        return (l8(e) ? e.asyncValidators : n) || null;
      }
      function xg(n) {
        return Array.isArray(n) ? Jc(n) : n || null;
      }
      function l8(n) {
        return null != n && !Array.isArray(n) && "object" == typeof n;
      }
      const zg = (n) => n instanceof Vg,
        u8 = (n) => n instanceof h8;
      function Lg(n) {
        return zg(n) ? n.value : n.getRawValue();
      }
      function Tg(n, e) {
        const t = u8(n),
          i = n.controls;
        if (!(t ? Object.keys(i) : i).length) throw new ie(1e3, "");
        if (!i[e]) throw new ie(1001, "");
      }
      function Ng(n, e) {
        u8(n),
          n._forEachChild((i, r) => {
            if (void 0 === e[r]) throw new ie(1002, "");
          });
      }
      class f8 {
        constructor(e, t) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            (this._rawValidators = e),
            (this._rawAsyncValidators = t),
            (this._composedValidatorFn = Ag(this._rawValidators)),
            (this._composedAsyncValidatorFn = xg(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(e) {
          this._rawValidators = this._composedValidatorFn = e;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(e) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = e;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === bs;
        }
        get invalid() {
          return this.status === c4;
        }
        get pending() {
          return this.status == Ui;
        }
        get disabled() {
          return this.status === ws;
        }
        get enabled() {
          return this.status !== ws;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(e) {
          (this._rawValidators = e), (this._composedValidatorFn = Ag(e));
        }
        setAsyncValidators(e) {
          (this._rawAsyncValidators = e),
            (this._composedAsyncValidatorFn = xg(e));
        }
        addValidators(e) {
          this.setValidators(yg(e, this._rawValidators));
        }
        addAsyncValidators(e) {
          this.setAsyncValidators(yg(e, this._rawAsyncValidators));
        }
        removeValidators(e) {
          this.setValidators(Cg(e, this._rawValidators));
        }
        removeAsyncValidators(e) {
          this.setAsyncValidators(Cg(e, this._rawAsyncValidators));
        }
        hasValidator(e) {
          return t4(this._rawValidators, e);
        }
        hasAsyncValidator(e) {
          return t4(this._rawAsyncValidators, e);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(e = {}) {
          (this.touched = !0),
            this._parent && !e.onlySelf && this._parent.markAsTouched(e);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((e) => e.markAllAsTouched());
        }
        markAsUntouched(e = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((t) => {
              t.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !e.onlySelf && this._parent._updateTouched(e);
        }
        markAsDirty(e = {}) {
          (this.pristine = !1),
            this._parent && !e.onlySelf && this._parent.markAsDirty(e);
        }
        markAsPristine(e = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((t) => {
              t.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !e.onlySelf && this._parent._updatePristine(e);
        }
        markAsPending(e = {}) {
          (this.status = Ui),
            !1 !== e.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !e.onlySelf && this._parent.markAsPending(e);
        }
        disable(e = {}) {
          const t = this._parentMarkedDirty(e.onlySelf);
          (this.status = ws),
            (this.errors = null),
            this._forEachChild((i) => {
              i.disable(Object.assign(Object.assign({}, e), { onlySelf: !0 }));
            }),
            this._updateValue(),
            !1 !== e.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors(
              Object.assign(Object.assign({}, e), { skipPristineCheck: t })
            ),
            this._onDisabledChange.forEach((i) => i(!0));
        }
        enable(e = {}) {
          const t = this._parentMarkedDirty(e.onlySelf);
          (this.status = bs),
            this._forEachChild((i) => {
              i.enable(Object.assign(Object.assign({}, e), { onlySelf: !0 }));
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: e.emitEvent,
            }),
            this._updateAncestors(
              Object.assign(Object.assign({}, e), { skipPristineCheck: t })
            ),
            this._onDisabledChange.forEach((i) => i(!1));
        }
        _updateAncestors(e) {
          this._parent &&
            !e.onlySelf &&
            (this._parent.updateValueAndValidity(e),
            e.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(e) {
          this._parent = e;
        }
        updateValueAndValidity(e = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === bs || this.status === Ui) &&
                this._runAsyncValidator(e.emitEvent)),
            !1 !== e.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !e.onlySelf &&
              this._parent.updateValueAndValidity(e);
        }
        _updateTreeValidity(e = { emitEvent: !0 }) {
          this._forEachChild((t) => t._updateTreeValidity(e)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: e.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? ws : bs;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(e) {
          if (this.asyncValidator) {
            (this.status = Ui), (this._hasOwnPendingAsyncValidator = !0);
            const t = ug(this.asyncValidator(this));
            this._asyncValidationSubscription = t.subscribe((i) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(i, { emitEvent: e });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(e, t = {}) {
          (this.errors = e), this._updateControlsErrors(!1 !== t.emitEvent);
        }
        get(e) {
          return (function bH(n, e, t) {
            if (
              null == e ||
              (Array.isArray(e) || (e = e.split(t)),
              Array.isArray(e) && 0 === e.length)
            )
              return null;
            let i = n;
            return (
              e.forEach((r) => {
                i = u8(i)
                  ? i.controls.hasOwnProperty(r)
                    ? i.controls[r]
                    : null
                  : (((n) => n instanceof DH)(i) && i.at(r)) || null;
              }),
              i
            );
          })(this, e, ".");
        }
        getError(e, t) {
          const i = t ? this.get(t) : this;
          return i && i.errors ? i.errors[e] : null;
        }
        hasError(e, t) {
          return !!this.getError(e, t);
        }
        get root() {
          let e = this;
          for (; e._parent; ) e = e._parent;
          return e;
        }
        _updateControlsErrors(e) {
          (this.status = this._calculateStatus()),
            e && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(e);
        }
        _initObservables() {
          (this.valueChanges = new $()), (this.statusChanges = new $());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? ws
            : this.errors
            ? c4
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(Ui)
            ? Ui
            : this._anyControlsHaveStatus(c4)
            ? c4
            : bs;
        }
        _anyControlsHaveStatus(e) {
          return this._anyControls((t) => t.status === e);
        }
        _anyControlsDirty() {
          return this._anyControls((e) => e.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((e) => e.touched);
        }
        _updatePristine(e = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !e.onlySelf && this._parent._updatePristine(e);
        }
        _updateTouched(e = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !e.onlySelf && this._parent._updateTouched(e);
        }
        _isBoxedValue(e) {
          return (
            "object" == typeof e &&
            null !== e &&
            2 === Object.keys(e).length &&
            "value" in e &&
            "disabled" in e
          );
        }
        _registerOnCollectionChange(e) {
          this._onCollectionChange = e;
        }
        _setUpdateStrategy(e) {
          l8(e) && null != e.updateOn && (this._updateOn = e.updateOn);
        }
        _parentMarkedDirty(e) {
          return (
            !e &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
      }
      class Vg extends f8 {
        constructor(e = null, t, i) {
          super(a8(t), c8(i, t)),
            (this._onChange = []),
            (this._pendingChange = !1),
            this._applyFormState(e),
            this._setUpdateStrategy(t),
            this._initObservables(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        setValue(e, t = {}) {
          (this.value = this._pendingValue = e),
            this._onChange.length &&
              !1 !== t.emitModelToViewChange &&
              this._onChange.forEach((i) =>
                i(this.value, !1 !== t.emitViewToModelChange)
              ),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          this.setValue(e, t);
        }
        reset(e = null, t = {}) {
          this._applyFormState(e),
            this.markAsPristine(t),
            this.markAsUntouched(t),
            this.setValue(this.value, t),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(e) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(e) {
          this._onChange.push(e);
        }
        _unregisterOnChange(e) {
          a4(this._onChange, e);
        }
        registerOnDisabledChange(e) {
          this._onDisabledChange.push(e);
        }
        _unregisterOnDisabledChange(e) {
          a4(this._onDisabledChange, e);
        }
        _forEachChild(e) {}
        _syncPendingControls() {
          return !(
            "submit" !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, {
              onlySelf: !0,
              emitModelToViewChange: !1,
            }),
            0)
          );
        }
        _applyFormState(e) {
          this._isBoxedValue(e)
            ? ((this.value = this._pendingValue = e.value),
              e.disabled
                ? this.disable({ onlySelf: !0, emitEvent: !1 })
                : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = e);
        }
      }
      class h8 extends f8 {
        constructor(e, t, i) {
          super(a8(t), c8(i, t)),
            (this.controls = e),
            this._initObservables(),
            this._setUpdateStrategy(t),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(e, t) {
          return this.controls[e]
            ? this.controls[e]
            : ((this.controls[e] = t),
              t.setParent(this),
              t._registerOnCollectionChange(this._onCollectionChange),
              t);
        }
        addControl(e, t, i = {}) {
          this.registerControl(e, t),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(e, t = {}) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            delete this.controls[e],
            this.updateValueAndValidity({ emitEvent: t.emitEvent }),
            this._onCollectionChange();
        }
        setControl(e, t, i = {}) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            delete this.controls[e],
            t && this.registerControl(e, t),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        contains(e) {
          return this.controls.hasOwnProperty(e) && this.controls[e].enabled;
        }
        setValue(e, t = {}) {
          Ng(this, e),
            Object.keys(e).forEach((i) => {
              Tg(this, i),
                this.controls[i].setValue(e[i], {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          null != e &&
            (Object.keys(e).forEach((i) => {
              this.controls[i] &&
                this.controls[i].patchValue(e[i], {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t));
        }
        reset(e = {}, t = {}) {
          this._forEachChild((i, r) => {
            i.reset(e[r], { onlySelf: !0, emitEvent: t.emitEvent });
          }),
            this._updatePristine(t),
            this._updateTouched(t),
            this.updateValueAndValidity(t);
        }
        getRawValue() {
          return this._reduceChildren({}, (e, t, i) => ((e[i] = Lg(t)), e));
        }
        _syncPendingControls() {
          let e = this._reduceChildren(
            !1,
            (t, i) => !!i._syncPendingControls() || t
          );
          return e && this.updateValueAndValidity({ onlySelf: !0 }), e;
        }
        _forEachChild(e) {
          Object.keys(this.controls).forEach((t) => {
            const i = this.controls[t];
            i && e(i, t);
          });
        }
        _setUpControls() {
          this._forEachChild((e) => {
            e.setParent(this),
              e._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(e) {
          for (const t of Object.keys(this.controls)) {
            const i = this.controls[t];
            if (this.contains(t) && e(i)) return !0;
          }
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (e, t, i) => ((t.enabled || this.disabled) && (e[i] = t.value), e)
          );
        }
        _reduceChildren(e, t) {
          let i = e;
          return (
            this._forEachChild((r, s) => {
              i = t(i, r, s);
            }),
            i
          );
        }
        _allControlsDisabled() {
          for (const e of Object.keys(this.controls))
            if (this.controls[e].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
      }
      class DH extends f8 {
        constructor(e, t, i) {
          super(a8(t), c8(i, t)),
            (this.controls = e),
            this._initObservables(),
            this._setUpdateStrategy(t),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(e) {
          return this.controls[e];
        }
        push(e, t = {}) {
          this.controls.push(e),
            this._registerControl(e),
            this.updateValueAndValidity({ emitEvent: t.emitEvent }),
            this._onCollectionChange();
        }
        insert(e, t, i = {}) {
          this.controls.splice(e, 0, t),
            this._registerControl(t),
            this.updateValueAndValidity({ emitEvent: i.emitEvent });
        }
        removeAt(e, t = {}) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            this.controls.splice(e, 1),
            this.updateValueAndValidity({ emitEvent: t.emitEvent });
        }
        setControl(e, t, i = {}) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            this.controls.splice(e, 1),
            t && (this.controls.splice(e, 0, t), this._registerControl(t)),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(e, t = {}) {
          Ng(this, e),
            e.forEach((i, r) => {
              Tg(this, r),
                this.at(r).setValue(i, {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          null != e &&
            (e.forEach((i, r) => {
              this.at(r) &&
                this.at(r).patchValue(i, {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t));
        }
        reset(e = [], t = {}) {
          this._forEachChild((i, r) => {
            i.reset(e[r], { onlySelf: !0, emitEvent: t.emitEvent });
          }),
            this._updatePristine(t),
            this._updateTouched(t),
            this.updateValueAndValidity(t);
        }
        getRawValue() {
          return this.controls.map((e) => Lg(e));
        }
        clear(e = {}) {
          this.controls.length < 1 ||
            (this._forEachChild((t) => t._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: e.emitEvent }));
        }
        _syncPendingControls() {
          let e = this.controls.reduce(
            (t, i) => !!i._syncPendingControls() || t,
            !1
          );
          return e && this.updateValueAndValidity({ onlySelf: !0 }), e;
        }
        _forEachChild(e) {
          this.controls.forEach((t, i) => {
            e(t, i);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter((e) => e.enabled || this.disabled)
            .map((e) => e.value);
        }
        _anyControls(e) {
          return this.controls.some((t) => t.enabled && e(t));
        }
        _setUpControls() {
          this._forEachChild((e) => this._registerControl(e));
        }
        _allControlsDisabled() {
          for (const e of this.controls) if (e.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(e) {
          e.setParent(this),
            e._registerOnCollectionChange(this._onCollectionChange);
        }
      }
      const EH = { provide: At, useExisting: we(() => l4) },
        Ds = (() => Promise.resolve(null))();
      let l4 = (() => {
        class n extends At {
          constructor(t, i) {
            super(),
              (this.submitted = !1),
              (this._directives = []),
              (this.ngSubmit = new $()),
              (this.form = new h8({}, Xc(t), Jc(i)));
          }
          ngAfterViewInit() {
            this._setUpdateStrategy();
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          get controls() {
            return this.form.controls;
          }
          addControl(t) {
            Ds.then(() => {
              const i = this._findContainer(t.path);
              (t.control = i.registerControl(t.name, t.control)),
                Ms(t.control, t),
                t.control.updateValueAndValidity({ emitEvent: !1 }),
                this._directives.push(t);
            });
          }
          getControl(t) {
            return this.form.get(t.path);
          }
          removeControl(t) {
            Ds.then(() => {
              const i = this._findContainer(t.path);
              i && i.removeControl(t.name), a4(this._directives, t);
            });
          }
          addFormGroup(t) {
            Ds.then(() => {
              const i = this._findContainer(t.path),
                r = new h8({});
              Eg(r, t),
                i.registerControl(t.name, r),
                r.updateValueAndValidity({ emitEvent: !1 });
            });
          }
          removeFormGroup(t) {
            Ds.then(() => {
              const i = this._findContainer(t.path);
              i && i.removeControl(t.name);
            });
          }
          getFormGroup(t) {
            return this.form.get(t.path);
          }
          updateModel(t, i) {
            Ds.then(() => {
              this.form.get(t.path).setValue(i);
            });
          }
          setValue(t) {
            this.control.setValue(t);
          }
          onSubmit(t) {
            return (
              (this.submitted = !0),
              Sg(this.form, this._directives),
              this.ngSubmit.emit(t),
              !1
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(t) {
            this.form.reset(t), (this.submitted = !1);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.form._updateOn = this.options.updateOn);
          }
          _findContainer(t) {
            return t.pop(), t.length ? this.form.get(t) : this.form;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(_(gt, 10), _(Wn, 10));
          }),
          (n.ɵdir = V({
            type: n,
            selectors: [
              ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
              ["ng-form"],
              ["", "ngForm", ""],
            ],
            hostBindings: function (t, i) {
              1 & t &&
                de("submit", function (s) {
                  return i.onSubmit(s);
                })("reset", function () {
                  return i.onReset();
                });
            },
            inputs: { options: ["ngFormOptions", "options"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [Se([EH]), ce],
          })),
          n
        );
      })();
      const IH = { provide: At, useExisting: we(() => u4) };
      let u4 = (() => {
        class n extends At {
          constructor(t, i) {
            super(),
              (this.validators = t),
              (this.asyncValidators = i),
              (this.submitted = !1),
              (this._onCollectionChange = () => this._updateDomValue()),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new $()),
              this._setValidators(t),
              this._setAsyncValidators(i);
          }
          ngOnChanges(t) {
            this._checkFormPresent(),
              t.hasOwnProperty("form") &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations(),
                (this._oldForm = this.form));
          }
          ngOnDestroy() {
            this.form &&
              (o4(this.form, this),
              this.form._onCollectionChange === this._onCollectionChange &&
                this.form._registerOnCollectionChange(() => {}));
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(t) {
            const i = this.form.get(t.path);
            return (
              Ms(i, t),
              i.updateValueAndValidity({ emitEvent: !1 }),
              this.directives.push(t),
              i
            );
          }
          getControl(t) {
            return this.form.get(t.path);
          }
          removeControl(t) {
            r4(t.control || null, t, !1), a4(this.directives, t);
          }
          addFormGroup(t) {
            this._setUpFormContainer(t);
          }
          removeFormGroup(t) {
            this._cleanUpFormContainer(t);
          }
          getFormGroup(t) {
            return this.form.get(t.path);
          }
          addFormArray(t) {
            this._setUpFormContainer(t);
          }
          removeFormArray(t) {
            this._cleanUpFormContainer(t);
          }
          getFormArray(t) {
            return this.form.get(t.path);
          }
          updateModel(t, i) {
            this.form.get(t.path).setValue(i);
          }
          onSubmit(t) {
            return (
              (this.submitted = !0),
              Sg(this.form, this.directives),
              this.ngSubmit.emit(t),
              !1
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(t) {
            this.form.reset(t), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((t) => {
              const i = t.control,
                r = this.form.get(t.path);
              i !== r &&
                (r4(i || null, t), zg(r) && (Ms(r, t), (t.control = r)));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _setUpFormContainer(t) {
            const i = this.form.get(t.path);
            Eg(i, t), i.updateValueAndValidity({ emitEvent: !1 });
          }
          _cleanUpFormContainer(t) {
            if (this.form) {
              const i = this.form.get(t.path);
              i &&
                (function yH(n, e) {
                  return o4(n, e);
                })(i, t) &&
                i.updateValueAndValidity({ emitEvent: !1 });
            }
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(this._onCollectionChange),
              this._oldForm &&
                this._oldForm._registerOnCollectionChange(() => {});
          }
          _updateValidators() {
            i8(this.form, this), this._oldForm && o4(this._oldForm, this);
          }
          _checkFormPresent() {}
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(_(gt, 10), _(Wn, 10));
          }),
          (n.ɵdir = V({
            type: n,
            selectors: [["", "formGroup", ""]],
            hostBindings: function (t, i) {
              1 & t &&
                de("submit", function (s) {
                  return i.onSubmit(s);
                })("reset", function () {
                  return i.onReset();
                });
            },
            inputs: { form: ["formGroup", "form"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [Se([IH]), ce, Je],
          })),
          n
        );
      })();
      function eO(n, e) {
        return n === e;
      }
      const tO = ["trigger"],
        nO = ["panel"];
      function iO(n, e) {
        if ((1 & n && (w(0, "span", 8), q(1), D()), 2 & n)) {
          const t = P();
          S(1), Ve(t.placeholder);
        }
      }
      function rO(n, e) {
        if ((1 & n && (w(0, "span", 12), q(1), D()), 2 & n)) {
          const t = P(2);
          S(1), Ve(t.triggerValue);
        }
      }
      function sO(n, e) {
        1 & n && $t(0, 0, ["*ngSwitchCase", "true"]);
      }
      function oO(n, e) {
        1 & n &&
          (w(0, "span", 9),
          Q(1, rO, 2, 1, "span", 10),
          Q(2, sO, 1, 0, "ng-content", 11),
          D()),
          2 & n &&
            (N("ngSwitch", !!P().customTrigger), S(2), N("ngSwitchCase", !0));
      }
      function aO(n, e) {
        if (1 & n) {
          const t = Pn();
          w(0, "div", 13),
            w(1, "div", 14, 15),
            de("@transformPanel.done", function (r) {
              return Vt(t), P()._panelDoneAnimatingStream.next(r.toState);
            })("keydown", function (r) {
              return Vt(t), P()._handleKeydown(r);
            }),
            $t(3, 1),
            D(),
            D();
        }
        if (2 & n) {
          const t = P();
          N("@transformPanelWrap", void 0),
            S(1),
            (function cf(n, e, t) {
              D1(Rt, U1, li(b(), n, e, t), !0);
            })("mat-select-panel ", t._getPanelTheme(), ""),
            b1("transform-origin", t._transformOrigin)(
              "font-size",
              t._triggerFontSize,
              "px"
            ),
            N("ngClass", t.panelClass)(
              "@transformPanel",
              t.multiple ? "showing-multiple" : "showing"
            ),
            be("id", t.id + "-panel")("aria-multiselectable", t.multiple)(
              "aria-label",
              t.ariaLabel || null
            )("aria-labelledby", t._getPanelAriaLabelledby());
        }
      }
      const cO = [[["mat-select-trigger"]], "*"],
        lO = ["mat-select-trigger", "*"],
        nv = {
          transformPanelWrap: hc("transformPanelWrap", [
            Va("* => void", ON("@transformPanel", [HN()], { optional: !0 })),
          ]),
          transformPanel: hc("transformPanel", [
            Na(
              "void",
              jn({ transform: "scaleY(0.8)", minWidth: "100%", opacity: 0 })
            ),
            Na(
              "showing",
              jn({
                opacity: 1,
                minWidth: "calc(100% + 32px)",
                transform: "scaleY(1)",
              })
            ),
            Na(
              "showing-multiple",
              jn({
                opacity: 1,
                minWidth: "calc(100% + 64px)",
                transform: "scaleY(1)",
              })
            ),
            Va("void => *", dc("120ms cubic-bezier(0, 0, 0.2, 1)")),
            Va("* => void", dc("100ms 25ms linear", jn({ opacity: 0 }))),
          ]),
        };
      let iv = 0;
      const sv = new L("mat-select-scroll-strategy"),
        dO = new L("MAT_SELECT_CONFIG"),
        pO = {
          provide: sv,
          deps: [e4],
          useFactory: function hO(n) {
            return () => n.scrollStrategies.reposition();
          },
        };
      class mO {
        constructor(e, t) {
          (this.source = e), (this.value = t);
        }
      }
      const gO = gk(
          vk(
            mk(
              _k(
                class {
                  constructor(n, e, t, i, r) {
                    (this._elementRef = n),
                      (this._defaultErrorStateMatcher = e),
                      (this._parentForm = t),
                      (this._parentFormGroup = i),
                      (this.ngControl = r);
                  }
                }
              )
            )
          )
        ),
        vO = new L("MatSelectTrigger");
      let _O = (() => {
          class n extends gO {
            constructor(t, i, r, s, o, a, c, l, u, f, h, d, p, m) {
              var g, y, v;
              super(o, s, c, l, f),
                (this._viewportRuler = t),
                (this._changeDetectorRef = i),
                (this._ngZone = r),
                (this._dir = a),
                (this._parentFormField = u),
                (this._liveAnnouncer = p),
                (this._defaultOptions = m),
                (this._panelOpen = !1),
                (this._compareWith = (M, E) => M === E),
                (this._uid = "mat-select-" + iv++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new me()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = "mat-select-value-" + iv++),
                (this._panelDoneAnimatingStream = new me()),
                (this._overlayPanelClass =
                  (null === (g = this._defaultOptions) || void 0 === g
                    ? void 0
                    : g.overlayPanelClass) || ""),
                (this._focused = !1),
                (this.controlType = "mat-select"),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  null !==
                    (v =
                      null === (y = this._defaultOptions) || void 0 === y
                        ? void 0
                        : y.disableOptionCentering) &&
                  void 0 !== v &&
                  v),
                (this.ariaLabel = ""),
                (this.optionSelectionChanges = E0(() => {
                  const M = this.options;
                  return M
                    ? M.changes.pipe(
                        Ti(M),
                        vn(() => V2(...M.map((E) => E.onSelectionChange)))
                      )
                    : this._ngZone.onStable.pipe(
                        on(1),
                        vn(() => this.optionSelectionChanges)
                      );
                })),
                (this.openedChange = new $()),
                (this._openedStream = this.openedChange.pipe(
                  x1((M) => M),
                  ae(() => {})
                )),
                (this._closedStream = this.openedChange.pipe(
                  x1((M) => !M),
                  ae(() => {})
                )),
                (this.selectionChange = new $()),
                (this.valueChange = new $()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != (null == m ? void 0 : m.typeaheadDebounceInterval) &&
                  (this._typeaheadDebounceInterval =
                    m.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = d),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(h) || 0),
                (this.id = this.id);
            }
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(t) {
              (this._placeholder = t), this.stateChanges.next();
            }
            get required() {
              var t, i, r, s;
              return (
                null !==
                  (s =
                    null !== (t = this._required) && void 0 !== t
                      ? t
                      : null ===
                          (r =
                            null === (i = this.ngControl) || void 0 === i
                              ? void 0
                              : i.control) || void 0 === r
                      ? void 0
                      : r.hasValidator(sH.required)) &&
                void 0 !== s &&
                s
              );
            }
            set required(t) {
              (this._required = Wt(t)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(t) {
              this._multiple = Wt(t);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(t) {
              this._disableOptionCentering = Wt(t);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(t) {
              (this._compareWith = t),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(t) {
              (t !== this._value || (this._multiple && Array.isArray(t))) &&
                (this.options && this._setSelectionByValue(t),
                (this._value = t));
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(t) {
              this._typeaheadDebounceInterval = Pi(t);
            }
            get id() {
              return this._id;
            }
            set id(t) {
              (this._id = t || this._uid), this.stateChanges.next();
            }
            ngOnInit() {
              (this._selectionModel = new XI(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe(
                    (function JH(n, e = zn) {
                      return (
                        (n = null != n ? n : eO),
                        Oe((t, i) => {
                          let r,
                            s = !0;
                          t.subscribe(
                            new Te(i, (o) => {
                              const a = e(o);
                              (s || !n(r, a)) && ((s = !1), (r = a), i.next(o));
                            })
                          );
                        })
                      );
                    })(),
                    h1(this._destroy)
                  )
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe(h1(this._destroy))
                  .subscribe((t) => {
                    t.added.forEach((i) => i.select()),
                      t.removed.forEach((i) => i.deselect());
                  }),
                this.options.changes
                  .pipe(Ti(null), h1(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              const t = this._getTriggerAriaLabelledby();
              if (t !== this._triggerAriaLabelledBy) {
                const i = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = t),
                  t
                    ? i.setAttribute("aria-labelledby", t)
                    : i.removeAttribute("aria-labelledby");
              }
              this.ngControl && this.updateErrorState();
            }
            ngOnChanges(t) {
              t.disabled && this.stateChanges.next(),
                t.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval
                  );
            }
            ngOnDestroy() {
              this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                ((this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? "rtl" : "ltr"
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(t) {
              this.value = t;
            }
            registerOnChange(t) {
              this._onChange = t;
            }
            registerOnTouched(t) {
              this._onTouched = t;
            }
            setDisabledState(t) {
              (this.disabled = t),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              var t, i;
              return this.multiple
                ? (null === (t = this._selectionModel) || void 0 === t
                    ? void 0
                    : t.selected) || []
                : null === (i = this._selectionModel) || void 0 === i
                ? void 0
                : i.selected[0];
            }
            get triggerValue() {
              if (this.empty) return "";
              if (this._multiple) {
                const t = this._selectionModel.selected.map((i) => i.viewValue);
                return this._isRtl() && t.reverse(), t.join(", ");
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && "rtl" === this._dir.value;
            }
            _handleKeydown(t) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(t)
                  : this._handleClosedKeydown(t));
            }
            _handleClosedKeydown(t) {
              const i = t.keyCode,
                r = 40 === i || 38 === i || 37 === i || 39 === i,
                s = 13 === i || 32 === i,
                o = this._keyManager;
              if (
                (!o.isTyping() && s && !ps(t)) ||
                ((this.multiple || t.altKey) && r)
              )
                t.preventDefault(), this.open();
              else if (!this.multiple) {
                const a = this.selected;
                o.onKeydown(t);
                const c = this.selected;
                c && a !== c && this._liveAnnouncer.announce(c.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(t) {
              const i = this._keyManager,
                r = t.keyCode,
                s = 40 === r || 38 === r,
                o = i.isTyping();
              if (s && t.altKey) t.preventDefault(), this.close();
              else if (o || (13 !== r && 32 !== r) || !i.activeItem || ps(t))
                if (!o && this._multiple && 65 === r && t.ctrlKey) {
                  t.preventDefault();
                  const a = this.options.some(
                    (c) => !c.disabled && !c.selected
                  );
                  this.options.forEach((c) => {
                    c.disabled || (a ? c.select() : c.deselect());
                  });
                } else {
                  const a = i.activeItemIndex;
                  i.onKeydown(t),
                    this._multiple &&
                      s &&
                      t.shiftKey &&
                      i.activeItem &&
                      i.activeItemIndex !== a &&
                      i.activeItem._selectViaInteraction();
                }
              else t.preventDefault(), i.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                !this.disabled &&
                  !this.panelOpen &&
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this._overlayDir.positionChange.pipe(on(1)).subscribe(() => {
                this._changeDetectorRef.detectChanges(),
                  this._positioningSettled();
              });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? `mat-${this._parentFormField.color}`
                : "";
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this.ngControl && (this._value = this.ngControl.value),
                  this._setSelectionByValue(this._value),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(t) {
              if (
                (this._selectionModel.selected.forEach((i) =>
                  i.setInactiveStyles()
                ),
                this._selectionModel.clear(),
                this.multiple && t)
              )
                Array.isArray(t),
                  t.forEach((i) => this._selectValue(i)),
                  this._sortValues();
              else {
                const i = this._selectValue(t);
                i
                  ? this._keyManager.updateActiveItem(i)
                  : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectValue(t) {
              const i = this.options.find((r) => {
                if (this._selectionModel.isSelected(r)) return !1;
                try {
                  return null != r.value && this._compareWith(r.value, t);
                } catch (s) {
                  return !1;
                }
              });
              return i && this._selectionModel.select(i), i;
            }
            _initKeyManager() {
              (this._keyManager = new bN(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? "rtl" : "ltr")
                .withHomeAndEnd()
                .withAllowedModifierKeys(["shiftKey"])),
                this._keyManager.tabOut
                  .pipe(h1(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      (!this.multiple &&
                        this._keyManager.activeItem &&
                        this._keyManager.activeItem._selectViaInteraction(),
                      this.focus(),
                      this.close());
                  }),
                this._keyManager.change
                  .pipe(h1(this._destroy))
                  .subscribe(() => {
                    this._panelOpen && this.panel
                      ? this._scrollOptionIntoView(
                          this._keyManager.activeItemIndex || 0
                        )
                      : !this._panelOpen &&
                        !this.multiple &&
                        this._keyManager.activeItem &&
                        this._keyManager.activeItem._selectViaInteraction();
                  });
            }
            _resetOptions() {
              const t = V2(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe(h1(t)).subscribe((i) => {
                this._onSelect(i.source, i.isUserInput),
                  i.isUserInput &&
                    !this.multiple &&
                    this._panelOpen &&
                    (this.close(), this.focus());
              }),
                V2(...this.options.map((i) => i._stateChanges))
                  .pipe(h1(t))
                  .subscribe(() => {
                    this._changeDetectorRef.markForCheck(),
                      this.stateChanges.next();
                  });
            }
            _onSelect(t, i) {
              const r = this._selectionModel.isSelected(t);
              null != t.value || this._multiple
                ? (r !== t.selected &&
                    (t.selected
                      ? this._selectionModel.select(t)
                      : this._selectionModel.deselect(t)),
                  i && this._keyManager.setActiveItem(t),
                  this.multiple && (this._sortValues(), i && this.focus()))
                : (t.deselect(),
                  this._selectionModel.clear(),
                  null != this.value && this._propagateChanges(t.value)),
                r !== this._selectionModel.isSelected(t) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const t = this.options.toArray();
                this._selectionModel.sort((i, r) =>
                  this.sortComparator
                    ? this.sortComparator(i, r, t)
                    : t.indexOf(i) - t.indexOf(r)
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(t) {
              let i = null;
              (i = this.multiple
                ? this.selected.map((r) => r.value)
                : this.selected
                ? this.selected.value
                : t),
                (this._value = i),
                this.valueChange.emit(i),
                this._onChange(i),
                this.selectionChange.emit(this._getChangeEvent(i)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(
                      this._selectionModel.selected[0]
                    ));
            }
            _canOpen() {
              var t;
              return (
                !this._panelOpen &&
                !this.disabled &&
                (null === (t = this.options) || void 0 === t
                  ? void 0
                  : t.length) > 0
              );
            }
            focus(t) {
              this._elementRef.nativeElement.focus(t);
            }
            _getPanelAriaLabelledby() {
              var t;
              if (this.ariaLabel) return null;
              const i =
                null === (t = this._parentFormField) || void 0 === t
                  ? void 0
                  : t.getLabelId();
              return this.ariaLabelledby
                ? (i ? i + " " : "") + this.ariaLabelledby
                : i;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              var t;
              if (this.ariaLabel) return null;
              const i =
                null === (t = this._parentFormField) || void 0 === t
                  ? void 0
                  : t.getLabelId();
              let r = (i ? i + " " : "") + this._valueId;
              return this.ariaLabelledby && (r += " " + this.ariaLabelledby), r;
            }
            _panelDoneAnimating(t) {
              this.openedChange.emit(t);
            }
            setDescribedByIds(t) {
              this._ariaDescribedby = t.join(" ");
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return (
                this._panelOpen ||
                !this.empty ||
                (this._focused && !!this._placeholder)
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                _(ys),
                _(q1),
                _(fe),
                _(Ck),
                _(Le),
                _(La, 8),
                _(l4, 8),
                _(u4, 8),
                _(Vm, 8),
                _(bn, 10),
                $2("tabindex"),
                _(sv),
                _(VN),
                _(dO, 8)
              );
            }),
            (n.ɵdir = V({
              type: n,
              viewQuery: function (t, i) {
                if ((1 & t && (d2(tO, 5), d2(nO, 5), d2(Qm, 5)), 2 & t)) {
                  let r;
                  je((r = Ue())) && (i.trigger = r.first),
                    je((r = Ue())) && (i.panel = r.first),
                    je((r = Ue())) && (i._overlayDir = r.first);
                }
              },
              inputs: {
                panelClass: "panelClass",
                placeholder: "placeholder",
                required: "required",
                multiple: "multiple",
                disableOptionCentering: "disableOptionCentering",
                compareWith: "compareWith",
                value: "value",
                ariaLabel: ["aria-label", "ariaLabel"],
                ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                errorStateMatcher: "errorStateMatcher",
                typeaheadDebounceInterval: "typeaheadDebounceInterval",
                sortComparator: "sortComparator",
                id: "id",
              },
              outputs: {
                openedChange: "openedChange",
                _openedStream: "opened",
                _closedStream: "closed",
                selectionChange: "selectionChange",
                valueChange: "valueChange",
              },
              features: [ce, Je],
            })),
            n
          );
        })(),
        yO = (() => {
          class n extends _O {
            constructor() {
              super(...arguments),
                (this._scrollTop = 0),
                (this._triggerFontSize = 0),
                (this._transformOrigin = "top"),
                (this._offsetY = 0),
                (this._positions = [
                  {
                    originX: "start",
                    originY: "top",
                    overlayX: "start",
                    overlayY: "top",
                  },
                  {
                    originX: "start",
                    originY: "bottom",
                    overlayX: "start",
                    overlayY: "bottom",
                  },
                ]);
            }
            _calculateOverlayScroll(t, i, r) {
              const s = this._getItemHeight();
              return Math.min(Math.max(0, s * t - i + s / 2), r);
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe(h1(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._triggerRect =
                        this.trigger.nativeElement.getBoundingClientRect()),
                      this._changeDetectorRef.markForCheck());
                  });
            }
            open() {
              super._canOpen() &&
                (super.open(),
                (this._triggerRect =
                  this.trigger.nativeElement.getBoundingClientRect()),
                (this._triggerFontSize = parseInt(
                  getComputedStyle(this.trigger.nativeElement).fontSize || "0"
                )),
                this._calculateOverlayPosition(),
                this._ngZone.onStable.pipe(on(1)).subscribe(() => {
                  this._triggerFontSize &&
                    this._overlayDir.overlayRef &&
                    this._overlayDir.overlayRef.overlayElement &&
                    (this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`);
                }));
            }
            _scrollOptionIntoView(t) {
              const i = xm(t, this.options, this.optionGroups),
                r = this._getItemHeight();
              this.panel.nativeElement.scrollTop =
                0 === t && 1 === i
                  ? 0
                  : (function kk(n, e, t, i) {
                      return n < t
                        ? n
                        : n + e > t + i
                        ? Math.max(0, n - i + e)
                        : t;
                    })((t + i) * r, r, this.panel.nativeElement.scrollTop, 256);
            }
            _positioningSettled() {
              this._calculateOverlayOffsetX(),
                (this.panel.nativeElement.scrollTop = this._scrollTop);
            }
            _panelDoneAnimating(t) {
              this.panelOpen
                ? (this._scrollTop = 0)
                : ((this._overlayDir.offsetX = 0),
                  this._changeDetectorRef.markForCheck()),
                super._panelDoneAnimating(t);
            }
            _getChangeEvent(t) {
              return new mO(this, t);
            }
            _calculateOverlayOffsetX() {
              const t =
                  this._overlayDir.overlayRef.overlayElement.getBoundingClientRect(),
                i = this._viewportRuler.getViewportSize(),
                r = this._isRtl(),
                s = this.multiple ? 56 : 32;
              let o;
              if (this.multiple) o = 40;
              else if (this.disableOptionCentering) o = 16;
              else {
                let l = this._selectionModel.selected[0] || this.options.first;
                o = l && l.group ? 32 : 16;
              }
              r || (o *= -1);
              const a = 0 - (t.left + o - (r ? s : 0)),
                c = t.right + o - i.width + (r ? 0 : s);
              a > 0 ? (o += a + 8) : c > 0 && (o -= c + 8),
                (this._overlayDir.offsetX = Math.round(o)),
                this._overlayDir.overlayRef.updatePosition();
            }
            _calculateOverlayOffsetY(t, i, r) {
              const s = this._getItemHeight(),
                o = (s - this._triggerRect.height) / 2,
                a = Math.floor(256 / s);
              let c;
              return this.disableOptionCentering
                ? 0
                : ((c =
                    0 === this._scrollTop
                      ? t * s
                      : this._scrollTop === r
                      ? (t - (this._getItemCount() - a)) * s +
                        (s - ((this._getItemCount() * s - 256) % s))
                      : i - s / 2),
                  Math.round(-1 * c - o));
            }
            _checkOverlayWithinViewport(t) {
              const i = this._getItemHeight(),
                r = this._viewportRuler.getViewportSize(),
                s = this._triggerRect.top - 8,
                o = r.height - this._triggerRect.bottom - 8,
                a = Math.abs(this._offsetY),
                l =
                  Math.min(this._getItemCount() * i, 256) -
                  a -
                  this._triggerRect.height;
              l > o
                ? this._adjustPanelUp(l, o)
                : a > s
                ? this._adjustPanelDown(a, s, t)
                : (this._transformOrigin = this._getOriginBasedOnOption());
            }
            _adjustPanelUp(t, i) {
              const r = Math.round(t - i);
              (this._scrollTop -= r),
                (this._offsetY -= r),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop <= 0 &&
                  ((this._scrollTop = 0),
                  (this._offsetY = 0),
                  (this._transformOrigin = "50% bottom 0px"));
            }
            _adjustPanelDown(t, i, r) {
              const s = Math.round(t - i);
              if (
                ((this._scrollTop += s),
                (this._offsetY += s),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop >= r)
              )
                return (
                  (this._scrollTop = r),
                  (this._offsetY = 0),
                  void (this._transformOrigin = "50% top 0px")
                );
            }
            _calculateOverlayPosition() {
              const t = this._getItemHeight(),
                i = this._getItemCount(),
                r = Math.min(i * t, 256),
                o = i * t - r;
              let a;
              (a = this.empty
                ? 0
                : Math.max(
                    this.options
                      .toArray()
                      .indexOf(this._selectionModel.selected[0]),
                    0
                  )),
                (a += xm(a, this.options, this.optionGroups));
              const c = r / 2;
              (this._scrollTop = this._calculateOverlayScroll(a, c, o)),
                (this._offsetY = this._calculateOverlayOffsetY(a, c, o)),
                this._checkOverlayWithinViewport(o);
            }
            _getOriginBasedOnOption() {
              const t = this._getItemHeight(),
                i = (t - this._triggerRect.height) / 2;
              return `50% ${Math.abs(this._offsetY) - i + t / 2}px 0px`;
            }
            _getItemHeight() {
              return 3 * this._triggerFontSize;
            }
            _getItemCount() {
              return this.options.length + this.optionGroups.length;
            }
          }
          return (
            (n.ɵfac = (function () {
              let e;
              return function (i) {
                return (
                  e ||
                  (e = (function Mt(n) {
                    return Tn(() => {
                      const e = n.prototype.constructor,
                        t = e[cn] || c6(e),
                        i = Object.prototype;
                      let r = Object.getPrototypeOf(n.prototype).constructor;
                      for (; r && r !== i; ) {
                        const s = r[cn] || c6(r);
                        if (s && s !== t) return s;
                        r = Object.getPrototypeOf(r);
                      }
                      return (s) => new s();
                    });
                  })(n))
                )(i || n);
              };
            })()),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["mat-select"]],
              contentQueries: function (t, i, r) {
                if (
                  (1 & t && (Dt(r, vO, 5), Dt(r, Am, 5), Dt(r, Sm, 5)), 2 & t)
                ) {
                  let s;
                  je((s = Ue())) && (i.customTrigger = s.first),
                    je((s = Ue())) && (i.options = s),
                    je((s = Ue())) && (i.optionGroups = s);
                }
              },
              hostAttrs: [
                "role",
                "combobox",
                "aria-autocomplete",
                "none",
                "aria-haspopup",
                "true",
                1,
                "mat-select",
              ],
              hostVars: 20,
              hostBindings: function (t, i) {
                1 & t &&
                  de("keydown", function (s) {
                    return i._handleKeydown(s);
                  })("focus", function () {
                    return i._onFocus();
                  })("blur", function () {
                    return i._onBlur();
                  }),
                  2 & t &&
                    (be("id", i.id)("tabindex", i.tabIndex)(
                      "aria-controls",
                      i.panelOpen ? i.id + "-panel" : null
                    )("aria-expanded", i.panelOpen)(
                      "aria-label",
                      i.ariaLabel || null
                    )("aria-required", i.required.toString())(
                      "aria-disabled",
                      i.disabled.toString()
                    )("aria-invalid", i.errorState)(
                      "aria-describedby",
                      i._ariaDescribedby || null
                    )("aria-activedescendant", i._getAriaActiveDescendant()),
                    ut("mat-select-disabled", i.disabled)(
                      "mat-select-invalid",
                      i.errorState
                    )("mat-select-required", i.required)(
                      "mat-select-empty",
                      i.empty
                    )("mat-select-multiple", i.multiple));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                tabIndex: "tabIndex",
              },
              exportAs: ["matSelect"],
              features: [
                Se([
                  { provide: Gc, useExisting: n },
                  { provide: Em, useExisting: n },
                ]),
                ce,
              ],
              ngContentSelectors: lO,
              decls: 9,
              vars: 12,
              consts: [
                ["cdk-overlay-origin", "", 1, "mat-select-trigger", 3, "click"],
                ["origin", "cdkOverlayOrigin", "trigger", ""],
                [1, "mat-select-value", 3, "ngSwitch"],
                [
                  "class",
                  "mat-select-placeholder mat-select-min-line",
                  4,
                  "ngSwitchCase",
                ],
                [
                  "class",
                  "mat-select-value-text",
                  3,
                  "ngSwitch",
                  4,
                  "ngSwitchCase",
                ],
                [1, "mat-select-arrow-wrapper"],
                [1, "mat-select-arrow"],
                [
                  "cdk-connected-overlay",
                  "",
                  "cdkConnectedOverlayLockPosition",
                  "",
                  "cdkConnectedOverlayHasBackdrop",
                  "",
                  "cdkConnectedOverlayBackdropClass",
                  "cdk-overlay-transparent-backdrop",
                  3,
                  "cdkConnectedOverlayPanelClass",
                  "cdkConnectedOverlayScrollStrategy",
                  "cdkConnectedOverlayOrigin",
                  "cdkConnectedOverlayOpen",
                  "cdkConnectedOverlayPositions",
                  "cdkConnectedOverlayMinWidth",
                  "cdkConnectedOverlayOffsetY",
                  "backdropClick",
                  "attach",
                  "detach",
                ],
                [1, "mat-select-placeholder", "mat-select-min-line"],
                [1, "mat-select-value-text", 3, "ngSwitch"],
                ["class", "mat-select-min-line", 4, "ngSwitchDefault"],
                [4, "ngSwitchCase"],
                [1, "mat-select-min-line"],
                [1, "mat-select-panel-wrap"],
                ["role", "listbox", "tabindex", "-1", 3, "ngClass", "keydown"],
                ["panel", ""],
              ],
              template: function (t, i) {
                if (
                  (1 & t &&
                    (Vr(cO),
                    w(0, "div", 0, 1),
                    de("click", function () {
                      return i.toggle();
                    }),
                    w(3, "div", 2),
                    Q(4, iO, 2, 1, "span", 3),
                    Q(5, oO, 3, 2, "span", 4),
                    D(),
                    w(6, "div", 5),
                    se(7, "div", 6),
                    D(),
                    D(),
                    Q(8, aO, 4, 14, "ng-template", 7),
                    de("backdropClick", function () {
                      return i.close();
                    })("attach", function () {
                      return i._onAttached();
                    })("detach", function () {
                      return i.close();
                    })),
                  2 & t)
                ) {
                  const r = qe(1);
                  be("aria-owns", i.panelOpen ? i.id + "-panel" : null),
                    S(3),
                    N("ngSwitch", i.empty),
                    be("id", i._valueId),
                    S(1),
                    N("ngSwitchCase", !0),
                    S(1),
                    N("ngSwitchCase", !1),
                    S(3),
                    N("cdkConnectedOverlayPanelClass", i._overlayPanelClass)(
                      "cdkConnectedOverlayScrollStrategy",
                      i._scrollStrategy
                    )("cdkConnectedOverlayOrigin", r)(
                      "cdkConnectedOverlayOpen",
                      i.panelOpen
                    )("cdkConnectedOverlayPositions", i._positions)(
                      "cdkConnectedOverlayMinWidth",
                      null == i._triggerRect ? null : i._triggerRect.width
                    )("cdkConnectedOverlayOffsetY", i._offsetY);
                }
              },
              directives: [Ym, g2, Yr, Ch, Qm, vh],
              styles: [
                '.mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;opacity:0}\n',
              ],
              encapsulation: 2,
              data: { animation: [nv.transformPanelWrap, nv.transformPanel] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        CO = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({
              providers: [pO],
              imports: [[Li, QI, zm, en], Zc, km, zm, en],
            })),
            n
          );
        })(),
        MO = (() => {
          class n {
            constructor(t) {
              (this.dataService = t),
                (this.userInput = ""),
                (this.selectedValue = "default");
            }
            ngOnInit() {
              this.dataService.currentMessage.subscribe(
                (t) => (this.userInput = t)
              ),
                this.dataService.defaultMode.subscribe(
                  (t) => (this.selectedValue = t)
                );
            }
            getSelectedValue(t) {
              this.dataService.setMode(t);
            }
            getValue(t) {
              this.dataService.setMessage(t.toLowerCase().trim());
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(Aa));
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["app-nav"]],
              inputs: { title: "title" },
              decls: 15,
              vars: 2,
              consts: [
                [
                  "type",
                  "text",
                  "placeholder",
                  "Search for Poke....",
                  3,
                  "keyup",
                ],
                ["Input", ""],
                [3, "value", "valueChange"],
                ["value", "default", 3, "click"],
                ["Normal", ""],
                ["value", "shiny", 3, "click"],
                ["Shiny", ""],
              ],
              template: function (t, i) {
                if (1 & t) {
                  const r = Pn();
                  w(0, "nav"),
                    w(1, "h1"),
                    q(2),
                    D(),
                    w(3, "input", 0, 1),
                    de("keyup", function () {
                      Vt(r);
                      const o = qe(4);
                      return i.getValue(o.value);
                    }),
                    D(),
                    w(5, "mat-form-field"),
                    w(6, "mat-label"),
                    q(7, "Poke-Mode"),
                    D(),
                    w(8, "mat-select", 2),
                    de("valueChange", function (o) {
                      return (i.selectedValue = o);
                    }),
                    w(9, "mat-option", 3, 4),
                    de("click", function () {
                      Vt(r);
                      const o = qe(10);
                      return i.getSelectedValue(o.value);
                    }),
                    q(11, "default"),
                    D(),
                    w(12, "mat-option", 5, 6),
                    de("click", function () {
                      Vt(r);
                      const o = qe(13);
                      return i.getSelectedValue(o.value);
                    }),
                    q(14, "shiny"),
                    D(),
                    D(),
                    D(),
                    D();
                }
                2 & t && (S(2), Ve(i.title), S(6), N("value", i.selectedValue));
              },
              directives: [hI, Wc, yO, Am],
              styles: [
                "nav[_ngcontent-%COMP%]{height:6vh;display:flex;justify-content:space-around;align-items:center;width:auto;border:1px solid rgb(224,217,217);background-color:#d1dff1;overflow:hidden;transition:ease-in-out .5s}nav[_ngcontent-%COMP%]:hover{background-color:#69a5f3}nav[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-family:Pokemon Solid,sans-serif;text-shadow:4px 2px 5px blue;color:#f5e616;letter-spacing:5px;margin-top:10px;font-size:30px}nav[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{max-width:200px;height:3.5vh;border:1px solid rgb(167,164,164);border-radius:10px;background-color:#d1dff1;font-size:16px;font-family:Roboto,sans-serif;text-align:center;letter-spacing:2px;transition:ease-in-out .5s}nav[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:hover{background-color:snow}mat-form-field[_ngcontent-%COMP%]{width:8rem;height:80%}@media screen and (max-width: 600px){nav[_ngcontent-%COMP%]{width:100%}nav[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{max-width:120px;font-size:14px;letter-spacing:1px}nav[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:18px;margin:0;letter-spacing:1px}mat-form-field[_ngcontent-%COMP%]{width:4rem}}@media screen and (max-width: 320px){nav[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:16px;margin:0;letter-spacing:0px}nav[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{max-width:80px;font-size:12px;letter-spacing:0px}}",
              ],
            })),
            n
          );
        })();
      function bO(n, e) {
        if ((1 & n && (s2(), se(0, "circle", 4)), 2 & n)) {
          const t = P(),
            i = qe(1);
          b1(
            "animation-name",
            "mat-progress-spinner-stroke-rotate-" + t._spinnerAnimationLabel
          )("stroke-dashoffset", t._getStrokeDashOffset(), "px")(
            "stroke-dasharray",
            t._getStrokeCircumference(),
            "px"
          )(
            "stroke-width",
            t._getCircleStrokeWidth(),
            "%"
          )("transform-origin", t._getCircleTransformOrigin(i)),
            be("r", t._getCircleRadius());
        }
      }
      function wO(n, e) {
        if ((1 & n && (s2(), se(0, "circle", 4)), 2 & n)) {
          const t = P(),
            i = qe(1);
          b1("stroke-dashoffset", t._getStrokeDashOffset(), "px")(
            "stroke-dasharray",
            t._getStrokeCircumference(),
            "px"
          )(
            "stroke-width",
            t._getCircleStrokeWidth(),
            "%"
          )("transform-origin", t._getCircleTransformOrigin(i)),
            be("r", t._getCircleRadius());
        }
      }
      function DO(n, e) {
        if ((1 & n && (s2(), se(0, "circle", 4)), 2 & n)) {
          const t = P(),
            i = qe(1);
          b1(
            "animation-name",
            "mat-progress-spinner-stroke-rotate-" + t._spinnerAnimationLabel
          )("stroke-dashoffset", t._getStrokeDashOffset(), "px")(
            "stroke-dasharray",
            t._getStrokeCircumference(),
            "px"
          )(
            "stroke-width",
            t._getCircleStrokeWidth(),
            "%"
          )("transform-origin", t._getCircleTransformOrigin(i)),
            be("r", t._getCircleRadius());
        }
      }
      function EO(n, e) {
        if ((1 & n && (s2(), se(0, "circle", 4)), 2 & n)) {
          const t = P(),
            i = qe(1);
          b1("stroke-dashoffset", t._getStrokeDashOffset(), "px")(
            "stroke-dasharray",
            t._getStrokeCircumference(),
            "px"
          )(
            "stroke-width",
            t._getCircleStrokeWidth(),
            "%"
          )("transform-origin", t._getCircleTransformOrigin(i)),
            be("r", t._getCircleRadius());
        }
      }
      const xO = Mm(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          },
          "primary"
        ),
        ov = new L("mat-progress-spinner-default-options", {
          providedIn: "root",
          factory: function zO() {
            return { diameter: 100 };
          },
        });
      class wn extends xO {
        constructor(e, t, i, r, s, o, a, c) {
          super(e),
            (this._document = i),
            (this._diameter = 100),
            (this._value = 0),
            (this._resizeSubscription = He.EMPTY),
            (this.mode = "determinate");
          const l = wn._diameters;
          (this._spinnerAnimationLabel = this._getSpinnerAnimationLabel()),
            l.has(i.head) || l.set(i.head, new Set([100])),
            (this._noopAnimations =
              "NoopAnimations" === r && !!s && !s._forceAnimations),
            s &&
              (s.diameter && (this.diameter = s.diameter),
              s.strokeWidth && (this.strokeWidth = s.strokeWidth)),
            t.isBrowser &&
              t.SAFARI &&
              a &&
              o &&
              c &&
              (this._resizeSubscription = a.change(150).subscribe(() => {
                "indeterminate" === this.mode && c.run(() => o.markForCheck());
              }));
        }
        get diameter() {
          return this._diameter;
        }
        set diameter(e) {
          (this._diameter = Pi(e)),
            (this._spinnerAnimationLabel = this._getSpinnerAnimationLabel()),
            this._styleRoot && this._attachStyleNode();
        }
        get strokeWidth() {
          return this._strokeWidth || this.diameter / 10;
        }
        set strokeWidth(e) {
          this._strokeWidth = Pi(e);
        }
        get value() {
          return "determinate" === this.mode ? this._value : 0;
        }
        set value(e) {
          this._value = Math.max(0, Math.min(100, Pi(e)));
        }
        ngOnInit() {
          const e = this._elementRef.nativeElement;
          (this._styleRoot =
            (function oN(n) {
              if (
                (function sN() {
                  if (null == sc) {
                    const n =
                      "undefined" != typeof document ? document.head : null;
                    sc = !(!n || (!n.createShadowRoot && !n.attachShadow));
                  }
                  return sc;
                })()
              ) {
                const e = n.getRootNode ? n.getRootNode() : null;
                if (
                  "undefined" != typeof ShadowRoot &&
                  ShadowRoot &&
                  e instanceof ShadowRoot
                )
                  return e;
              }
              return null;
            })(e) || this._document.head),
            this._attachStyleNode(),
            e.classList.add("mat-progress-spinner-indeterminate-animation");
        }
        ngOnDestroy() {
          this._resizeSubscription.unsubscribe();
        }
        _getCircleRadius() {
          return (this.diameter - 10) / 2;
        }
        _getViewBox() {
          const e = 2 * this._getCircleRadius() + this.strokeWidth;
          return `0 0 ${e} ${e}`;
        }
        _getStrokeCircumference() {
          return 2 * Math.PI * this._getCircleRadius();
        }
        _getStrokeDashOffset() {
          return "determinate" === this.mode
            ? (this._getStrokeCircumference() * (100 - this._value)) / 100
            : null;
        }
        _getCircleStrokeWidth() {
          return (this.strokeWidth / this.diameter) * 100;
        }
        _getCircleTransformOrigin(e) {
          var t;
          const i =
            50 * (null !== (t = e.currentScale) && void 0 !== t ? t : 1);
          return `${i}% ${i}%`;
        }
        _attachStyleNode() {
          const e = this._styleRoot,
            t = this._diameter,
            i = wn._diameters;
          let r = i.get(e);
          if (!r || !r.has(t)) {
            const s = this._document.createElement("style");
            s.setAttribute(
              "mat-spinner-animation",
              this._spinnerAnimationLabel
            ),
              (s.textContent = this._getAnimationText()),
              e.appendChild(s),
              r || ((r = new Set()), i.set(e, r)),
              r.add(t);
          }
        }
        _getAnimationText() {
          const e = this._getStrokeCircumference();
          return "\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n"
            .replace(/START_VALUE/g, "" + 0.95 * e)
            .replace(/END_VALUE/g, "" + 0.2 * e)
            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);
        }
        _getSpinnerAnimationLabel() {
          return this.diameter.toString().replace(".", "_");
        }
      }
      (wn._diameters = new WeakMap()),
        (wn.ɵfac = function (e) {
          return new (e || wn)(
            _(Le),
            _(X1),
            _(he, 8),
            _(S2, 8),
            _(ov),
            _(q1),
            _(ys),
            _(fe)
          );
        }),
        (wn.ɵcmp = ot({
          type: wn,
          selectors: [["mat-progress-spinner"]],
          hostAttrs: [
            "role",
            "progressbar",
            "tabindex",
            "-1",
            1,
            "mat-progress-spinner",
          ],
          hostVars: 10,
          hostBindings: function (e, t) {
            2 & e &&
              (be("aria-valuemin", "determinate" === t.mode ? 0 : null)(
                "aria-valuemax",
                "determinate" === t.mode ? 100 : null
              )("aria-valuenow", "determinate" === t.mode ? t.value : null)(
                "mode",
                t.mode
              ),
              b1("width", t.diameter, "px")("height", t.diameter, "px"),
              ut("_mat-animation-noopable", t._noopAnimations));
          },
          inputs: {
            color: "color",
            diameter: "diameter",
            strokeWidth: "strokeWidth",
            mode: "mode",
            value: "value",
          },
          exportAs: ["matProgressSpinner"],
          features: [ce],
          decls: 4,
          vars: 8,
          consts: [
            [
              "preserveAspectRatio",
              "xMidYMid meet",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              3,
              "ngSwitch",
            ],
            ["svg", ""],
            [
              "cx",
              "50%",
              "cy",
              "50%",
              3,
              "animation-name",
              "stroke-dashoffset",
              "stroke-dasharray",
              "stroke-width",
              "transform-origin",
              4,
              "ngSwitchCase",
            ],
            [
              "cx",
              "50%",
              "cy",
              "50%",
              3,
              "stroke-dashoffset",
              "stroke-dasharray",
              "stroke-width",
              "transform-origin",
              4,
              "ngSwitchCase",
            ],
            ["cx", "50%", "cy", "50%"],
          ],
          template: function (e, t) {
            1 & e &&
              (s2(),
              w(0, "svg", 0, 1),
              Q(2, bO, 1, 11, "circle", 2),
              Q(3, wO, 1, 9, "circle", 3),
              D()),
              2 & e &&
                (b1("width", t.diameter, "px")("height", t.diameter, "px"),
                N("ngSwitch", "indeterminate" === t.mode),
                be("viewBox", t._getViewBox()),
                S(2),
                N("ngSwitchCase", !0),
                S(1),
                N("ngSwitchCase", !1));
          },
          directives: [g2, Yr],
          styles: [
            ".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\n",
          ],
          encapsulation: 2,
          changeDetection: 0,
        }));
      let TO = (() => {
          class n extends wn {
            constructor(t, i, r, s, o, a, c, l) {
              super(t, i, r, s, o, a, c, l), (this.mode = "indeterminate");
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                _(Le),
                _(X1),
                _(he, 8),
                _(S2, 8),
                _(ov),
                _(q1),
                _(ys),
                _(fe)
              );
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["mat-spinner"]],
              hostAttrs: [
                "role",
                "progressbar",
                "mode",
                "indeterminate",
                1,
                "mat-spinner",
                "mat-progress-spinner",
              ],
              hostVars: 6,
              hostBindings: function (t, i) {
                2 & t &&
                  (b1("width", i.diameter, "px")("height", i.diameter, "px"),
                  ut("_mat-animation-noopable", i._noopAnimations));
              },
              inputs: { color: "color" },
              features: [ce],
              decls: 4,
              vars: 8,
              consts: [
                [
                  "preserveAspectRatio",
                  "xMidYMid meet",
                  "focusable",
                  "false",
                  "aria-hidden",
                  "true",
                  3,
                  "ngSwitch",
                ],
                ["svg", ""],
                [
                  "cx",
                  "50%",
                  "cy",
                  "50%",
                  3,
                  "animation-name",
                  "stroke-dashoffset",
                  "stroke-dasharray",
                  "stroke-width",
                  "transform-origin",
                  4,
                  "ngSwitchCase",
                ],
                [
                  "cx",
                  "50%",
                  "cy",
                  "50%",
                  3,
                  "stroke-dashoffset",
                  "stroke-dasharray",
                  "stroke-width",
                  "transform-origin",
                  4,
                  "ngSwitchCase",
                ],
                ["cx", "50%", "cy", "50%"],
              ],
              template: function (t, i) {
                1 & t &&
                  (s2(),
                  w(0, "svg", 0, 1),
                  Q(2, DO, 1, 11, "circle", 2),
                  Q(3, EO, 1, 9, "circle", 3),
                  D()),
                  2 & t &&
                    (b1("width", i.diameter, "px")("height", i.diameter, "px"),
                    N("ngSwitch", "indeterminate" === i.mode),
                    be("viewBox", i._getViewBox()),
                    S(2),
                    N("ngSwitchCase", !0),
                    S(1),
                    N("ngSwitchCase", !1));
              },
              directives: [g2, Yr],
              styles: [
                ".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        NO = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({ imports: [[en, Li], en] })),
            n
          );
        })();
      function VO(n, e) {
        1 & n && (w(0, "div", 1), se(1, "mat-spinner"), D());
      }
      let kO = (() => {
          class n {
            constructor(t) {
              (this.dataService = t),
                (this.loader = !1),
                this.dataService.loader.subscribe((i) => {
                  this.loader = i;
                });
            }
            ngOnInit() {}
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(Aa));
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["app-loader"]],
              decls: 1,
              vars: 1,
              consts: [
                ["class", "loading", 4, "ngIf"],
                [1, "loading"],
              ],
              template: function (t, i) {
                1 & t && Q(0, VO, 2, 0, "div", 0), 2 & t && N("ngIf", i.loader);
              },
              directives: [zi, TO],
              styles: [
                ".loading[_ngcontent-%COMP%]{width:100vw;display:flex;align-items:center;justify-content:center;position:absolute;top:250px}",
              ],
            })),
            n
          );
        })(),
        IO = (() => {
          class n {
            constructor() {
              this.currentYear = new Date().getFullYear();
            }
            ngOnInit() {}
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["app-footer"]],
              decls: 9,
              vars: 1,
              consts: [
                [1, "footer"],
                [1, "heart"],
                ["className", "year"],
              ],
              template: function (t, i) {
                1 & t &&
                  (w(0, "div", 0),
                  q(1, " Made with "),
                  w(2, "span", 1),
                  q(3, "\u2764\ufe0f"),
                  D(),
                  q(4, " by Hamza Darej, Copyright "),
                  w(5, "sup"),
                  q(6, " \xa9 "),
                  D(),
                  w(7, "span", 2),
                  q(8),
                  D(),
                  D()),
                  2 & t && (S(8), Ve(i.currentYear));
              },
              styles: [
                ".footer[_ngcontent-%COMP%]{text-align:center;background-color:#69a5f3;padding:8px}.heart[_ngcontent-%COMP%]{font-size:18px}",
              ],
            })),
            n
          );
        })(),
        HO = (() => {
          class n {
            constructor() {
              this.title = "Pokemon App";
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["app-root"]],
              decls: 5,
              vars: 1,
              consts: [
                [1, "body"],
                [3, "title"],
              ],
              template: function (t, i) {
                1 & t &&
                  (w(0, "div", 0),
                  se(1, "app-nav", 1),
                  se(2, "app-loader"),
                  se(3, "router-outlet"),
                  se(4, "app-footer"),
                  D()),
                  2 & t && (S(1), N("title", i.title));
              },
              directives: [MO, kO, F0, IO],
              styles: [
                ".body[_ngcontent-%COMP%]{width:auto;min-height:100vh;box-sizing:border-box;margin:0;padding:0;height:auto;overflow:hidden;display:flex;justify-content:space-between;flex-direction:column;position:relative;background-image:linear-gradient(to top,white 0%,black 100%)}",
              ],
            })),
            n
          );
        })();
      var av = {
          prefix: "fas",
          iconName: "arrows-alt-v",
          icon: [
            256,
            512,
            [],
            "f338",
            "M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z",
          ],
        },
        cv = {
          prefix: "fas",
          iconName: "heartbeat",
          icon: [
            512,
            512,
            [],
            "f21e",
            "M320.2 243.8l-49.7 99.4c-6 12.1-23.4 11.7-28.9-.6l-56.9-126.3-30 71.7H60.6l182.5 186.5c7.1 7.3 18.6 7.3 25.7 0L451.4 288H342.3l-22.1-44.2zM473.7 73.9l-2.4-2.5c-51.5-52.6-135.8-52.6-187.4 0L256 100l-27.9-28.5c-51.5-52.7-135.9-52.7-187.4 0l-2.4 2.4C-10.4 123.7-12.5 203 31 256h102.4l35.9-86.2c5.4-12.9 23.6-13.2 29.4-.4l58.2 129.3 49-97.9c5.9-11.8 22.7-11.8 28.6 0l27.6 55.2H481c43.5-53 41.4-132.3-7.3-182.1z",
          ],
        },
        lv = {
          prefix: "fas",
          iconName: "shield-alt",
          icon: [
            512,
            512,
            [],
            "f3ed",
            "M466.5 83.7l-192-80a48.15 48.15 0 0 0-36.9 0l-192 80C27.7 91.1 16 108.6 16 128c0 198.5 114.5 335.7 221.5 380.3 11.8 4.9 25.1 4.9 36.9 0C360.1 472.6 496 349.3 496 128c0-19.4-11.7-36.9-29.5-44.3zM256.1 446.3l-.1-381 175.9 73.3c-3.3 151.4-82.1 261.1-175.8 307.7z",
          ],
        },
        uv = {
          prefix: "fas",
          iconName: "skull-crossbones",
          icon: [
            448,
            512,
            [],
            "f714",
            "M439.15 453.06L297.17 384l141.99-69.06c7.9-3.95 11.11-13.56 7.15-21.46L432 264.85c-3.95-7.9-13.56-11.11-21.47-7.16L224 348.41 37.47 257.69c-7.9-3.95-17.51-.75-21.47 7.16L1.69 293.48c-3.95 7.9-.75 17.51 7.15 21.46L150.83 384 8.85 453.06c-7.9 3.95-11.11 13.56-7.15 21.47l14.31 28.63c3.95 7.9 13.56 11.11 21.47 7.15L224 419.59l186.53 90.72c7.9 3.95 17.51.75 21.47-7.15l14.31-28.63c3.95-7.91.74-17.52-7.16-21.47zM150 237.28l-5.48 25.87c-2.67 12.62 5.42 24.85 16.45 24.85h126.08c11.03 0 19.12-12.23 16.45-24.85l-5.5-25.87c41.78-22.41 70-62.75 70-109.28C368 57.31 303.53 0 224 0S80 57.31 80 128c0 46.53 28.22 86.87 70 109.28zM280 112c17.65 0 32 14.35 32 32s-14.35 32-32 32-32-14.35-32-32 14.35-32 32-32zm-112 0c17.65 0 32 14.35 32 32s-14.35 32-32 32-32-14.35-32-32 14.35-32 32-32z",
          ],
        },
        fv = {
          prefix: "fas",
          iconName: "tachometer-alt",
          icon: [
            576,
            512,
            [],
            "f3fd",
            "M288 32C128.94 32 0 160.94 0 320c0 52.8 14.25 102.26 39.06 144.8 5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2C561.75 422.26 576 372.8 576 320c0-159.06-128.94-288-288-288zm0 64c14.71 0 26.58 10.13 30.32 23.65-1.11 2.26-2.64 4.23-3.45 6.67l-9.22 27.67c-5.13 3.49-10.97 6.01-17.64 6.01-17.67 0-32-14.33-32-32S270.33 96 288 96zM96 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm48-160c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm246.77-72.41l-61.33 184C343.13 347.33 352 364.54 352 384c0 11.72-3.38 22.55-8.88 32H232.88c-5.5-9.45-8.88-20.28-8.88-32 0-33.94 26.5-61.43 59.9-63.59l61.34-184.01c4.17-12.56 17.73-19.45 30.36-15.17 12.57 4.19 19.35 17.79 15.17 30.36zm14.66 57.2l15.52-46.55c3.47-1.29 7.13-2.23 11.05-2.23 17.67 0 32 14.33 32 32s-14.33 32-32 32c-11.38-.01-20.89-6.28-26.57-15.22zM480 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z",
          ],
        },
        hv = {
          prefix: "fas",
          iconName: "weight",
          icon: [
            512,
            512,
            [],
            "f496",
            "M448 64h-25.98C438.44 92.28 448 125.01 448 160c0 105.87-86.13 192-192 192S64 265.87 64 160c0-34.99 9.56-67.72 25.98-96H64C28.71 64 0 92.71 0 128v320c0 35.29 28.71 64 64 64h384c35.29 0 64-28.71 64-64V128c0-35.29-28.71-64-64-64zM256 320c88.37 0 160-71.63 160-160S344.37 0 256 0 96 71.63 96 160s71.63 160 160 160zm-.3-151.94l33.58-78.36c3.5-8.17 12.94-11.92 21.03-8.41 8.12 3.48 11.88 12.89 8.41 21l-33.67 78.55C291.73 188 296 197.45 296 208c0 22.09-17.91 40-40 40s-40-17.91-40-40c0-21.98 17.76-39.77 39.7-39.94z",
          ],
        };
      function As(n) {
        return (As =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  "function" == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? "symbol"
                  : typeof e;
              })(n);
      }
      function dv(n, e) {
        for (var t = 0; t < e.length; t++) {
          var i = e[t];
          (i.enumerable = i.enumerable || !1),
            (i.configurable = !0),
            "value" in i && (i.writable = !0),
            Object.defineProperty(n, i.key, i);
        }
      }
      function l1e(n, e, t) {
        return (
          e in n
            ? Object.defineProperty(n, e, {
                value: t,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (n[e] = t),
          n
        );
      }
      function ne(n) {
        for (var e = 1; e < arguments.length; e++) {
          var t = null != arguments[e] ? arguments[e] : {},
            i = Object.keys(t);
          "function" == typeof Object.getOwnPropertySymbols &&
            (i = i.concat(
              Object.getOwnPropertySymbols(t).filter(function (r) {
                return Object.getOwnPropertyDescriptor(t, r).enumerable;
              })
            )),
            i.forEach(function (r) {
              l1e(n, r, t[r]);
            });
        }
        return n;
      }
      function y8(n, e) {
        return (
          (function f1e(n) {
            if (Array.isArray(n)) return n;
          })(n) ||
          (function d1e(n, e) {
            var t = [],
              i = !0,
              r = !1,
              s = void 0;
            try {
              for (
                var a, o = n[Symbol.iterator]();
                !(i = (a = o.next()).done) &&
                (t.push(a.value), !e || t.length !== e);
                i = !0
              );
            } catch (c) {
              (r = !0), (s = c);
            } finally {
              try {
                !i && null != o.return && o.return();
              } finally {
                if (r) throw s;
              }
            }
            return t;
          })(n, e) ||
          (function m1e() {
            throw new TypeError(
              "Invalid attempt to destructure non-iterable instance"
            );
          })()
        );
      }
      var M8 = {},
        mv = {};
      try {
        "undefined" != typeof window && (M8 = window),
          "undefined" != typeof document && (mv = document),
          "undefined" != typeof MutationObserver && MutationObserver,
          "undefined" != typeof performance && performance;
      } catch (n) {}
      var _v = (M8.navigator || {}).userAgent,
        yv = void 0 === _v ? "" : _v,
        Gi = M8,
        Qe = mv,
        Dn =
          !!Qe.documentElement &&
          !!Qe.head &&
          "function" == typeof Qe.addEventListener &&
          "function" == typeof Qe.createElement,
        En =
          (~yv.indexOf("MSIE") || yv.indexOf("Trident/"), "___FONT_AWESOME___"),
        wv = "svg-inline--fa",
        Av = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
        S1e = Av.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]),
        z2 = {
          GROUP: "group",
          SWAP_OPACITY: "swap-opacity",
          PRIMARY: "primary",
          SECONDARY: "secondary",
        },
        xv =
          ([
            "xs",
            "sm",
            "lg",
            "fw",
            "ul",
            "li",
            "border",
            "pull-left",
            "pull-right",
            "spin",
            "pulse",
            "rotate-90",
            "rotate-180",
            "rotate-270",
            "flip-horizontal",
            "flip-vertical",
            "flip-both",
            "stack",
            "stack-1x",
            "stack-2x",
            "inverse",
            "layers",
            "layers-text",
            "layers-counter",
            z2.GROUP,
            z2.SWAP_OPACITY,
            z2.PRIMARY,
            z2.SECONDARY,
          ]
            .concat(
              Av.map(function (n) {
                return "".concat(n, "x");
              })
            )
            .concat(
              S1e.map(function (n) {
                return "w-".concat(n);
              })
            ),
          Gi.FontAwesomeConfig || {});
      Qe &&
        "function" == typeof Qe.querySelector &&
        [
          ["data-family-prefix", "familyPrefix"],
          ["data-replacement-class", "replacementClass"],
          ["data-auto-replace-svg", "autoReplaceSvg"],
          ["data-auto-add-css", "autoAddCss"],
          ["data-auto-a11y", "autoA11y"],
          ["data-search-pseudo-elements", "searchPseudoElements"],
          ["data-observe-mutations", "observeMutations"],
          ["data-mutate-approach", "mutateApproach"],
          ["data-keep-original-source", "keepOriginalSource"],
          ["data-measure-performance", "measurePerformance"],
          ["data-show-missing-icons", "showMissingIcons"],
        ].forEach(function (n) {
          var e = y8(n, 2),
            i = e[1],
            r = (function L1e(n) {
              return "" === n || ("false" !== n && ("true" === n || n));
            })(
              (function z1e(n) {
                var e = Qe.querySelector("script[" + n + "]");
                if (e) return e.getAttribute(n);
              })(e[0])
            );
          null != r && (xv[i] = r);
        });
      var D8 = ne(
        {},
        {
          familyPrefix: "fa",
          replacementClass: wv,
          autoReplaceSvg: !0,
          autoAddCss: !0,
          autoA11y: !0,
          searchPseudoElements: !1,
          observeMutations: !0,
          mutateApproach: "async",
          keepOriginalSource: !0,
          measurePerformance: !1,
          showMissingIcons: !0,
        },
        xv
      );
      D8.autoReplaceSvg || (D8.observeMutations = !1);
      var W = ne({}, D8);
      Gi.FontAwesomeConfig = W;
      var Sn = Gi || {};
      Sn[En] || (Sn[En] = {}),
        Sn[En].styles || (Sn[En].styles = {}),
        Sn[En].hooks || (Sn[En].hooks = {}),
        Sn[En].shims || (Sn[En].shims = []);
      var z1 = Sn[En],
        zv = [];
      Dn &&
        ((Qe.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(
          Qe.readyState
        ) ||
          Qe.addEventListener("DOMContentLoaded", function n() {
            Qe.removeEventListener("DOMContentLoaded", n),
              zv.map(function (e) {
                return e();
              });
          }));
      var S8,
        E8 = "pending",
        Lv = "settled",
        p4 = "fulfilled",
        m4 = "rejected",
        I1e = function () {},
        Tv =
          "undefined" != typeof global &&
          void 0 !== global.process &&
          "function" == typeof global.process.emit,
        H1e = "undefined" == typeof setImmediate ? setTimeout : setImmediate,
        xs = [];
      function O1e() {
        for (var n = 0; n < xs.length; n++) xs[n][0](xs[n][1]);
        (xs = []), (S8 = !1);
      }
      function g4(n, e) {
        xs.push([n, e]), S8 || ((S8 = !0), H1e(O1e, 0));
      }
      function Nv(n) {
        var e = n.owner,
          t = e._state,
          i = e._data,
          r = n[t],
          s = n.then;
        if ("function" == typeof r) {
          t = p4;
          try {
            i = r(i);
          } catch (o) {
            zs(s, o);
          }
        }
        Vv(s, i) || (t === p4 && A8(s, i), t === m4 && zs(s, i));
      }
      function Vv(n, e) {
        var t;
        try {
          if (n === e)
            throw new TypeError(
              "A promises callback cannot return that same promise."
            );
          if (e && ("function" == typeof e || "object" === As(e))) {
            var i = e.then;
            if ("function" == typeof i)
              return (
                i.call(
                  e,
                  function (r) {
                    t || ((t = !0), e === r ? kv(n, r) : A8(n, r));
                  },
                  function (r) {
                    t || ((t = !0), zs(n, r));
                  }
                ),
                !0
              );
          }
        } catch (r) {
          return t || zs(n, r), !0;
        }
        return !1;
      }
      function A8(n, e) {
        (n === e || !Vv(n, e)) && kv(n, e);
      }
      function kv(n, e) {
        n._state === E8 && ((n._state = Lv), (n._data = e), g4(F1e, n));
      }
      function zs(n, e) {
        n._state === E8 && ((n._state = Lv), (n._data = e), g4(R1e, n));
      }
      function Iv(n) {
        n._then = n._then.forEach(Nv);
      }
      function F1e(n) {
        (n._state = p4), Iv(n);
      }
      function R1e(n) {
        (n._state = m4),
          Iv(n),
          !n._handled &&
            Tv &&
            global.process.emit("unhandledRejection", n._data, n);
      }
      function B1e(n) {
        global.process.emit("rejectionHandled", n);
      }
      function Kt(n) {
        if ("function" != typeof n)
          throw new TypeError("Promise resolver " + n + " is not a function");
        if (!(this instanceof Kt))
          throw new TypeError(
            "Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function."
          );
        (this._then = []),
          (function P1e(n, e) {
            function i(r) {
              zs(e, r);
            }
            try {
              n(function t(r) {
                A8(e, r);
              }, i);
            } catch (r) {
              i(r);
            }
          })(n, this);
      }
      (Kt.prototype = {
        constructor: Kt,
        _state: E8,
        _then: null,
        _data: void 0,
        _handled: !1,
        then: function (e, t) {
          var i = {
            owner: this,
            then: new this.constructor(I1e),
            fulfilled: e,
            rejected: t,
          };
          return (
            (t || e) &&
              !this._handled &&
              ((this._handled = !0), this._state === m4 && Tv && g4(B1e, this)),
            this._state === p4 || this._state === m4
              ? g4(Nv, i)
              : this._then.push(i),
            i.then
          );
        },
        catch: function (e) {
          return this.then(null, e);
        },
      }),
        (Kt.all = function (n) {
          if (!Array.isArray(n))
            throw new TypeError("You must pass an array to Promise.all().");
          return new Kt(function (e, t) {
            var i = [],
              r = 0;
            function s(c) {
              return (
                r++,
                function (l) {
                  (i[c] = l), --r || e(i);
                }
              );
            }
            for (var a, o = 0; o < n.length; o++)
              (a = n[o]) && "function" == typeof a.then
                ? a.then(s(o), t)
                : (i[o] = a);
            r || e(i);
          });
        }),
        (Kt.race = function (n) {
          if (!Array.isArray(n))
            throw new TypeError("You must pass an array to Promise.race().");
          return new Kt(function (e, t) {
            for (var r, i = 0; i < n.length; i++)
              (r = n[i]) && "function" == typeof r.then ? r.then(e, t) : e(r);
          });
        }),
        (Kt.resolve = function (n) {
          return n && "object" === As(n) && n.constructor === Kt
            ? n
            : new Kt(function (e) {
                e(n);
              });
        }),
        (Kt.reject = function (n) {
          return new Kt(function (e, t) {
            t(n);
          });
        });
      var An = { size: 16, x: 0, y: 0, rotate: 0, flipX: !1, flipY: !1 };
      function Ls() {
        for (var n = 12, e = ""; n-- > 0; )
          e += "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"[
            (62 * Math.random()) | 0
          ];
        return e;
      }
      function Ov(n) {
        return ""
          .concat(n)
          .replace(/&/g, "&amp;")
          .replace(/"/g, "&quot;")
          .replace(/'/g, "&#39;")
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
      }
      function v4(n) {
        return Object.keys(n || {}).reduce(function (e, t) {
          return e + "".concat(t, ": ").concat(n[t], ";");
        }, "");
      }
      function z8(n) {
        return (
          n.size !== An.size ||
          n.x !== An.x ||
          n.y !== An.y ||
          n.rotate !== An.rotate ||
          n.flipX ||
          n.flipY
        );
      }
      function Pv(n) {
        var e = n.transform,
          i = n.iconWidth,
          r = { transform: "translate(".concat(n.containerWidth / 2, " 256)") },
          s = "translate(".concat(32 * e.x, ", ").concat(32 * e.y, ") "),
          o = "scale("
            .concat((e.size / 16) * (e.flipX ? -1 : 1), ", ")
            .concat((e.size / 16) * (e.flipY ? -1 : 1), ") "),
          a = "rotate(".concat(e.rotate, " 0 0)");
        return {
          outer: r,
          inner: { transform: "".concat(s, " ").concat(o, " ").concat(a) },
          path: { transform: "translate(".concat((i / 2) * -1, " -256)") },
        };
      }
      var L8 = { x: 0, y: 0, width: "100%", height: "100%" };
      function Fv(n) {
        var e =
          !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
        return (
          n.attributes &&
            (n.attributes.fill || e) &&
            (n.attributes.fill = "black"),
          n
        );
      }
      function q1e(n) {
        return "g" === n.tag ? n.children : [n];
      }
      function T8(n) {
        var e = n.icons,
          t = e.main,
          i = e.mask,
          r = n.prefix,
          s = n.iconName,
          o = n.transform,
          a = n.symbol,
          c = n.title,
          l = n.maskId,
          u = n.titleId,
          f = n.extra,
          h = n.watchable,
          d = void 0 !== h && h,
          p = i.found ? i : t,
          m = p.width,
          g = p.height,
          y = "fak" === r,
          v = y ? "" : "fa-w-".concat(Math.ceil((m / g) * 16)),
          M = [
            W.replacementClass,
            s ? "".concat(W.familyPrefix, "-").concat(s) : "",
            v,
          ]
            .filter(function (ct) {
              return -1 === f.classes.indexOf(ct);
            })
            .filter(function (ct) {
              return "" !== ct || !!ct;
            })
            .concat(f.classes)
            .join(" "),
          E = {
            children: [],
            attributes: ne({}, f.attributes, {
              "data-prefix": r,
              "data-icon": s,
              class: M,
              role: f.attributes.role || "img",
              xmlns: "http://www.w3.org/2000/svg",
              viewBox: "0 0 ".concat(m, " ").concat(g),
            }),
          },
          F =
            y && !~f.classes.indexOf("fa-fw")
              ? { width: "".concat((m / g) * 16 * 0.0625, "em") }
              : {};
        d && (E.attributes["data-fa-i2svg"] = ""),
          c &&
            E.children.push({
              tag: "title",
              attributes: {
                id:
                  E.attributes["aria-labelledby"] || "title-".concat(u || Ls()),
              },
              children: [c],
            });
        var le = ne({}, E, {
            prefix: r,
            iconName: s,
            main: t,
            mask: i,
            maskId: l,
            transform: o,
            symbol: a,
            styles: ne({}, F, f.styles),
          }),
          xe =
            i.found && t.found
              ? (function Z1e(n) {
                  var e = n.children,
                    t = n.attributes,
                    i = n.main,
                    r = n.mask,
                    s = n.maskId,
                    c = i.icon,
                    u = r.icon,
                    f = Pv({
                      transform: n.transform,
                      containerWidth: r.width,
                      iconWidth: i.width,
                    }),
                    h = {
                      tag: "rect",
                      attributes: ne({}, L8, { fill: "white" }),
                    },
                    d = c.children ? { children: c.children.map(Fv) } : {},
                    p = {
                      tag: "g",
                      attributes: ne({}, f.inner),
                      children: [
                        Fv(
                          ne(
                            {
                              tag: c.tag,
                              attributes: ne({}, c.attributes, f.path),
                            },
                            d
                          )
                        ),
                      ],
                    },
                    m = {
                      tag: "g",
                      attributes: ne({}, f.outer),
                      children: [p],
                    },
                    g = "mask-".concat(s || Ls()),
                    y = "clip-".concat(s || Ls()),
                    v = {
                      tag: "mask",
                      attributes: ne({}, L8, {
                        id: g,
                        maskUnits: "userSpaceOnUse",
                        maskContentUnits: "userSpaceOnUse",
                      }),
                      children: [h, m],
                    },
                    M = {
                      tag: "defs",
                      children: [
                        {
                          tag: "clipPath",
                          attributes: { id: y },
                          children: q1e(u),
                        },
                        v,
                      ],
                    };
                  return (
                    e.push(M, {
                      tag: "rect",
                      attributes: ne(
                        {
                          fill: "currentColor",
                          "clip-path": "url(#".concat(y, ")"),
                          mask: "url(#".concat(g, ")"),
                        },
                        L8
                      ),
                    }),
                    { children: e, attributes: t }
                  );
                })(le)
              : (function K1e(n) {
                  var e = n.children,
                    t = n.attributes,
                    i = n.main,
                    r = n.transform,
                    o = v4(n.styles);
                  if ((o.length > 0 && (t.style = o), z8(r))) {
                    var a = Pv({
                      transform: r,
                      containerWidth: i.width,
                      iconWidth: i.width,
                    });
                    e.push({
                      tag: "g",
                      attributes: ne({}, a.outer),
                      children: [
                        {
                          tag: "g",
                          attributes: ne({}, a.inner),
                          children: [
                            {
                              tag: i.icon.tag,
                              children: i.icon.children,
                              attributes: ne({}, i.icon.attributes, a.path),
                            },
                          ],
                        },
                      ],
                    });
                  } else e.push(i.icon);
                  return { children: e, attributes: t };
                })(le),
          Lt = xe.attributes;
        return (
          (le.children = xe.children),
          (le.attributes = Lt),
          a
            ? (function Q1e(n) {
                var t = n.iconName,
                  i = n.children,
                  s = n.symbol;
                return [
                  {
                    tag: "svg",
                    attributes: { style: "display: none;" },
                    children: [
                      {
                        tag: "symbol",
                        attributes: ne({}, n.attributes, {
                          id:
                            !0 === s
                              ? ""
                                  .concat(n.prefix, "-")
                                  .concat(W.familyPrefix, "-")
                                  .concat(t)
                              : s,
                        }),
                        children: i,
                      },
                    ],
                  },
                ];
              })(le)
            : (function Y1e(n) {
                var e = n.children,
                  t = n.main,
                  i = n.mask,
                  r = n.attributes,
                  s = n.styles,
                  o = n.transform;
                if (z8(o) && t.found && !i.found) {
                  var l = { x: t.width / t.height / 2, y: 0.5 };
                  r.style = v4(
                    ne({}, s, {
                      "transform-origin": ""
                        .concat(l.x + o.x / 16, "em ")
                        .concat(l.y + o.y / 16, "em"),
                    })
                  );
                }
                return [{ tag: "svg", attributes: r, children: e }];
              })(le)
        );
      }
      var k8 = function (e, t, i, r) {
        var c,
          l,
          u,
          s = Object.keys(e),
          o = s.length,
          a =
            void 0 !== r
              ? (function (e, t) {
                  return function (i, r, s, o) {
                    return e.call(t, i, r, s, o);
                  };
                })(t, r)
              : t;
        for (
          void 0 === i ? ((c = 1), (u = e[s[0]])) : ((c = 0), (u = i));
          c < o;
          c++
        )
          u = a(u, e[(l = s[c])], l, e);
        return u;
      };
      function $v(n, e) {
        var t =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
          i = t.skipHooks,
          r = void 0 !== i && i,
          s = Object.keys(e).reduce(function (o, a) {
            var c = e[a];
            return c.icon ? (o[c.iconName] = c.icon) : (o[a] = c), o;
          }, {});
        "function" != typeof z1.hooks.addPack || r
          ? (z1.styles[n] = ne({}, z1.styles[n] || {}, s))
          : z1.hooks.addPack(n, s),
          "fas" === n && $v("fa", e);
      }
      var Gv = z1.styles,
        tne = z1.shims,
        Kv = function () {
          var e = function (r) {
            return k8(
              Gv,
              function (s, o, a) {
                return (s[a] = k8(o, r, {})), s;
              },
              {}
            );
          };
          e(function (i, r, s) {
            return r[3] && (i[r[3]] = s), i;
          }),
            e(function (i, r, s) {
              var o = r[2];
              return (
                (i[s] = s),
                o.forEach(function (a) {
                  i[a] = s;
                }),
                i
              );
            });
          var t = "far" in Gv;
          k8(
            tne,
            function (i, r) {
              var o = r[1];
              return (
                "far" === o && !t && (o = "fas"),
                (i[r[0]] = { prefix: o, iconName: r[2] }),
                i
              );
            },
            {}
          );
        };
      function Qv(n, e, t) {
        if (n && n[e] && n[e][t])
          return { prefix: e, iconName: t, icon: n[e][t] };
      }
      function Zi(n) {
        var e = n.tag,
          t = n.attributes,
          i = void 0 === t ? {} : t,
          r = n.children,
          s = void 0 === r ? [] : r;
        return "string" == typeof n
          ? Ov(n)
          : "<"
              .concat(e, " ")
              .concat(
                (function G1e(n) {
                  return Object.keys(n || {})
                    .reduce(function (e, t) {
                      return e + "".concat(t, '="').concat(Ov(n[t]), '" ');
                    }, "")
                    .trim();
                })(i),
                ">"
              )
              .concat(s.map(Zi).join(""), "</")
              .concat(e, ">");
      }
      Kv();
      function Ns(n) {
        (this.name = "MissingIcon"),
          (this.message = n || "Icon unavailable"),
          (this.stack = new Error().stack);
      }
      (Ns.prototype = Object.create(Error.prototype)).constructor = Ns;
      var C4 = { fill: "currentColor" },
        i_ = { attributeType: "XML", repeatCount: "indefinite", dur: "2s" },
        P8 =
          (ne({}, C4, {
            d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z",
          }),
          ne({}, i_, { attributeName: "opacity" }));
      function R8(n) {
        var e = n[0],
          t = n[1],
          s = y8(n.slice(4), 1)[0];
        return {
          found: !0,
          width: e,
          height: t,
          icon: Array.isArray(s)
            ? {
                tag: "g",
                attributes: {
                  class: "".concat(W.familyPrefix, "-").concat(z2.GROUP),
                },
                children: [
                  {
                    tag: "path",
                    attributes: {
                      class: ""
                        .concat(W.familyPrefix, "-")
                        .concat(z2.SECONDARY),
                      fill: "currentColor",
                      d: s[0],
                    },
                  },
                  {
                    tag: "path",
                    attributes: {
                      class: "".concat(W.familyPrefix, "-").concat(z2.PRIMARY),
                      fill: "currentColor",
                      d: s[1],
                    },
                  },
                ],
              }
            : { tag: "path", attributes: { fill: "currentColor", d: s } },
        };
      }
      function Vs() {
        W.autoAddCss &&
          !b4 &&
          ((function Hv(n) {
            if (n && Dn) {
              var e = Qe.createElement("style");
              e.setAttribute("type", "text/css"), (e.innerHTML = n);
              for (
                var t = Qe.head.childNodes, i = null, r = t.length - 1;
                r > -1;
                r--
              ) {
                var s = t[r],
                  o = (s.tagName || "").toUpperCase();
                ["STYLE", "LINK"].indexOf(o) > -1 && (i = s);
              }
              return Qe.head.insertBefore(e, i), n;
            }
          })(
            (function j8() {
              var n = "fa",
                e = wv,
                t = W.familyPrefix,
                i = W.replacementClass,
                r =
                  'svg:not(:root).svg-inline--fa {\n  overflow: visible;\n}\n\n.svg-inline--fa {\n  display: inline-block;\n  font-size: inherit;\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.225em;\n}\n.svg-inline--fa.fa-w-1 {\n  width: 0.0625em;\n}\n.svg-inline--fa.fa-w-2 {\n  width: 0.125em;\n}\n.svg-inline--fa.fa-w-3 {\n  width: 0.1875em;\n}\n.svg-inline--fa.fa-w-4 {\n  width: 0.25em;\n}\n.svg-inline--fa.fa-w-5 {\n  width: 0.3125em;\n}\n.svg-inline--fa.fa-w-6 {\n  width: 0.375em;\n}\n.svg-inline--fa.fa-w-7 {\n  width: 0.4375em;\n}\n.svg-inline--fa.fa-w-8 {\n  width: 0.5em;\n}\n.svg-inline--fa.fa-w-9 {\n  width: 0.5625em;\n}\n.svg-inline--fa.fa-w-10 {\n  width: 0.625em;\n}\n.svg-inline--fa.fa-w-11 {\n  width: 0.6875em;\n}\n.svg-inline--fa.fa-w-12 {\n  width: 0.75em;\n}\n.svg-inline--fa.fa-w-13 {\n  width: 0.8125em;\n}\n.svg-inline--fa.fa-w-14 {\n  width: 0.875em;\n}\n.svg-inline--fa.fa-w-15 {\n  width: 0.9375em;\n}\n.svg-inline--fa.fa-w-16 {\n  width: 1em;\n}\n.svg-inline--fa.fa-w-17 {\n  width: 1.0625em;\n}\n.svg-inline--fa.fa-w-18 {\n  width: 1.125em;\n}\n.svg-inline--fa.fa-w-19 {\n  width: 1.1875em;\n}\n.svg-inline--fa.fa-w-20 {\n  width: 1.25em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-border {\n  height: 1.5em;\n}\n.svg-inline--fa.fa-li {\n  width: 2em;\n}\n.svg-inline--fa.fa-fw {\n  width: 1.25em;\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: #ff253a;\n  border-radius: 1em;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  color: #fff;\n  height: 1.5em;\n  line-height: 1;\n  max-width: 5em;\n  min-width: 1.5em;\n  overflow: hidden;\n  padding: 0.25em;\n  right: 0;\n  text-overflow: ellipsis;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: 0;\n  right: 0;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom right;\n          transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: 0;\n  left: 0;\n  right: auto;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom left;\n          transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  right: 0;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: 0;\n  right: auto;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n}\n\n.fa-lg {\n  font-size: 1.3333333333em;\n  line-height: 0.75em;\n  vertical-align: -0.0667em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: 2.5em;\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: -2em;\n  position: absolute;\n  text-align: center;\n  width: 2em;\n  line-height: inherit;\n}\n\n.fa-border {\n  border: solid 0.08em #eee;\n  border-radius: 0.1em;\n  padding: 0.2em 0.25em 0.15em;\n}\n\n.fa-pull-left {\n  float: left;\n}\n\n.fa-pull-right {\n  float: right;\n}\n\n.fa.fa-pull-left,\n.fas.fa-pull-left,\n.far.fa-pull-left,\n.fal.fa-pull-left,\n.fab.fa-pull-left {\n  margin-right: 0.3em;\n}\n.fa.fa-pull-right,\n.fas.fa-pull-right,\n.far.fa-pull-right,\n.fal.fa-pull-right,\n.fab.fa-pull-right {\n  margin-left: 0.3em;\n}\n\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n          animation: fa-spin 2s infinite linear;\n}\n\n.fa-pulse {\n  -webkit-animation: fa-spin 1s infinite steps(8);\n          animation: fa-spin 1s infinite steps(8);\n}\n\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";\n  -webkit-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";\n  -webkit-transform: rotate(270deg);\n          transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";\n  -webkit-transform: scale(-1, 1);\n          transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";\n  -webkit-transform: scale(1, -1);\n          transform: scale(1, -1);\n}\n\n.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";\n  -webkit-transform: scale(-1, -1);\n          transform: scale(-1, -1);\n}\n\n:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical,\n:root .fa-flip-both {\n  -webkit-filter: none;\n          filter: none;\n}\n\n.fa-stack {\n  display: inline-block;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n.sr-only {\n  border: 0;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  clip: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  position: static;\n  width: auto;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse {\n  color: #fff;\n}';
              if (t !== n || i !== e) {
                var s = new RegExp("\\.".concat(n, "\\-"), "g"),
                  o = new RegExp("\\--".concat(n, "\\-"), "g"),
                  a = new RegExp("\\.".concat(e), "g");
                r = r
                  .replace(s, ".".concat(t, "-"))
                  .replace(o, "--".concat(t, "-"))
                  .replace(a, ".".concat(i));
              }
              return r;
            })()
          ),
          (b4 = !0));
      }
      function M4(n, e) {
        return (
          Object.defineProperty(n, "abstract", { get: e }),
          Object.defineProperty(n, "html", {
            get: function () {
              return n.abstract.map(function (i) {
                return Zi(i);
              });
            },
          }),
          Object.defineProperty(n, "node", {
            get: function () {
              if (Dn) {
                var i = Qe.createElement("div");
                return (i.innerHTML = n.html), i.children;
              }
            },
          }),
          n
        );
      }
      function U8(n) {
        var e = n.prefix,
          t = void 0 === e ? "fa" : e,
          i = n.iconName;
        if (i) return Qv(c_.definitions, t, i) || Qv(z1.styles, t, i);
      }
      ne({}, C4, { cx: "256", cy: "364", r: "28" }),
        ne({}, i_, { attributeName: "r", values: "28;14;28;28;14;28;" }),
        ne({}, P8, { values: "1;0;1;1;0;1;" }),
        ne({}, C4, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z",
        }),
        ne({}, P8, { values: "1;0;0;0;0;1;" }),
        ne({}, C4, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z",
        }),
        ne({}, P8, { values: "0;0;1;1;0;0;" });
      var c_ = new ((function () {
          function n() {
            (function a1e(n, e) {
              if (!(n instanceof e))
                throw new TypeError("Cannot call a class as a function");
            })(this, n),
              (this.definitions = {});
          }
          return (
            (function c1e(n, e, t) {
              e && dv(n.prototype, e), t && dv(n, t);
            })(n, [
              {
                key: "add",
                value: function () {
                  for (
                    var t = this, i = arguments.length, r = new Array(i), s = 0;
                    s < i;
                    s++
                  )
                    r[s] = arguments[s];
                  var o = r.reduce(this._pullDefinitions, {});
                  Object.keys(o).forEach(function (a) {
                    (t.definitions[a] = ne({}, t.definitions[a] || {}, o[a])),
                      $v(a, o[a]),
                      Kv();
                  });
                },
              },
              {
                key: "reset",
                value: function () {
                  this.definitions = {};
                },
              },
              {
                key: "_pullDefinitions",
                value: function (t, i) {
                  var r = i.prefix && i.iconName && i.icon ? { 0: i } : i;
                  return (
                    Object.keys(r).map(function (s) {
                      var o = r[s],
                        a = o.prefix,
                        c = o.iconName,
                        l = o.icon;
                      t[a] || (t[a] = {}), (t[a][c] = l);
                    }),
                    t
                  );
                },
              },
            ]),
            n
          );
        })())(),
        b4 = !1,
        l__transform = function (e) {
          return (function (e) {
            var t = { size: 16, x: 0, y: 0, flipX: !1, flipY: !1, rotate: 0 };
            return e
              ? e
                  .toLowerCase()
                  .split(" ")
                  .reduce(function (i, r) {
                    var s = r.toLowerCase().split("-"),
                      o = s[0],
                      a = s.slice(1).join("-");
                    if (o && "h" === a) return (i.flipX = !0), i;
                    if (o && "v" === a) return (i.flipY = !0), i;
                    if (((a = parseFloat(a)), isNaN(a))) return i;
                    switch (o) {
                      case "grow":
                        i.size = i.size + a;
                        break;
                      case "shrink":
                        i.size = i.size - a;
                        break;
                      case "left":
                        i.x = i.x - a;
                        break;
                      case "right":
                        i.x = i.x + a;
                        break;
                      case "up":
                        i.y = i.y - a;
                        break;
                      case "down":
                        i.y = i.y + a;
                        break;
                      case "rotate":
                        i.rotate = i.rotate + a;
                    }
                    return i;
                  }, t)
              : t;
          })(e);
        },
        u_ = (function Tne(n) {
          return function (e) {
            var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {},
              i = (e || {}).icon ? e : U8(e || {}),
              r = t.mask;
            return (
              r && (r = (r || {}).icon ? r : U8(r || {})),
              n(i, ne({}, t, { mask: r }))
            );
          };
        })(function (n) {
          var e =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            t = e.transform,
            i = void 0 === t ? An : t,
            r = e.symbol,
            s = void 0 !== r && r,
            o = e.mask,
            a = void 0 === o ? null : o,
            c = e.maskId,
            l = void 0 === c ? null : c,
            u = e.title,
            f = void 0 === u ? null : u,
            h = e.titleId,
            d = void 0 === h ? null : h,
            p = e.classes,
            m = void 0 === p ? [] : p,
            g = e.attributes,
            y = void 0 === g ? {} : g,
            v = e.styles,
            M = void 0 === v ? {} : v;
          if (n) {
            var E = n.prefix,
              F = n.iconName,
              le = n.icon;
            return M4(ne({ type: "icon" }, n), function () {
              return (
                Vs(),
                W.autoA11y &&
                  (f
                    ? (y["aria-labelledby"] = ""
                        .concat(W.replacementClass, "-title-")
                        .concat(d || Ls()))
                    : ((y["aria-hidden"] = "true"), (y.focusable = "false"))),
                T8({
                  icons: {
                    main: R8(le),
                    mask: a
                      ? R8(a.icon)
                      : { found: !1, width: null, height: null, icon: {} },
                  },
                  prefix: E,
                  iconName: F,
                  transform: ne({}, An, i),
                  symbol: s,
                  title: f,
                  maskId: l,
                  titleId: d,
                  extra: { attributes: y, styles: M, classes: m },
                })
              );
            });
          }
        });
      const Fne = ["*"],
        jne = (n) => {
          const e = {
            "fa-spin": n.spin,
            "fa-pulse": n.pulse,
            "fa-fw": n.fixedWidth,
            "fa-border": n.border,
            "fa-inverse": n.inverse,
            "fa-layers-counter": n.counter,
            "fa-flip-horizontal": "horizontal" === n.flip || "both" === n.flip,
            "fa-flip-vertical": "vertical" === n.flip || "both" === n.flip,
            [`fa-${n.size}`]: null !== n.size,
            [`fa-rotate-${n.rotate}`]: null !== n.rotate,
            [`fa-pull-${n.pull}`]: null !== n.pull,
            [`fa-stack-${n.stackItemSize}`]: null != n.stackItemSize,
          };
          return Object.keys(e)
            .map((t) => (e[t] ? t : null))
            .filter((t) => t);
        };
      let Gne = (() => {
          class n {
            constructor() {
              (this.defaultPrefix = "fas"), (this.fallbackIcon = null);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Wne = (() => {
          class n {
            constructor() {
              this.definitions = {};
            }
            addIcons(...t) {
              for (const i of t) {
                i.prefix in this.definitions ||
                  (this.definitions[i.prefix] = {}),
                  (this.definitions[i.prefix][i.iconName] = i);
                for (const r of i.icon[2])
                  "string" == typeof r && (this.definitions[i.prefix][r] = i);
              }
            }
            addIconPacks(...t) {
              for (const i of t) {
                const r = Object.keys(i).map((s) => i[s]);
                this.addIcons(...r);
              }
            }
            getIconDefinition(t, i) {
              return t in this.definitions && i in this.definitions[t]
                ? this.definitions[t][i]
                : null;
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        qne = (() => {
          class n {
            constructor() {
              this.stackItemSize = "1x";
            }
            ngOnChanges(t) {
              if ("size" in t)
                throw new Error(
                  'fa-icon is not allowed to customize size when used inside fa-stack. Set size on the enclosing fa-stack instead: <fa-stack size="4x">...</fa-stack>.'
                );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵdir = V({
              type: n,
              selectors: [
                ["fa-icon", "stackItemSize", ""],
                ["fa-duotone-icon", "stackItemSize", ""],
              ],
              inputs: { stackItemSize: "stackItemSize", size: "size" },
              features: [Je],
            })),
            n
          );
        })(),
        Zne = (() => {
          class n {
            constructor(t, i) {
              (this.renderer = t), (this.elementRef = i);
            }
            ngOnInit() {
              this.renderer.addClass(this.elementRef.nativeElement, "fa-stack");
            }
            ngOnChanges(t) {
              "size" in t &&
                (null != t.size.currentValue &&
                  this.renderer.addClass(
                    this.elementRef.nativeElement,
                    `fa-${t.size.currentValue}`
                  ),
                null != t.size.previousValue &&
                  this.renderer.removeClass(
                    this.elementRef.nativeElement,
                    `fa-${t.size.previousValue}`
                  ));
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(G1), _(Le));
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["fa-stack"]],
              inputs: { size: "size" },
              features: [Je],
              ngContentSelectors: Fne,
              decls: 1,
              vars: 0,
              template: function (t, i) {
                1 & t && (Vr(), $t(0));
              },
              encapsulation: 2,
            })),
            n
          );
        })(),
        Kne = (() => {
          class n {
            constructor(t, i, r, s, o) {
              (this.sanitizer = t),
                (this.config = i),
                (this.iconLibrary = r),
                (this.stackItem = s),
                (this.classes = []),
                null != o &&
                  null == s &&
                  console.error(
                    'FontAwesome: fa-icon and fa-duotone-icon elements must specify stackItemSize attribute when wrapped into fa-stack. Example: <fa-icon stackItemSize="2x"></fa-icon>.'
                  );
            }
            ngOnChanges(t) {
              if (null == this.icon && null == this.config.fallbackIcon)
                return (() => {
                  throw new Error(
                    "Property `icon` is required for `fa-icon`/`fa-duotone-icon` components."
                  );
                })();
              let i = null;
              if (
                ((i = null == this.icon ? this.config.fallbackIcon : this.icon),
                t)
              ) {
                const r = this.findIconDefinition(i);
                if (null != r) {
                  const s = this.buildParams();
                  this.renderIcon(r, s);
                }
              }
            }
            render() {
              this.ngOnChanges({});
            }
            findIconDefinition(t) {
              const i = ((n, e) =>
                ((n) => void 0 !== n.prefix && void 0 !== n.iconName)(n)
                  ? n
                  : Array.isArray(n) && 2 === n.length
                  ? { prefix: n[0], iconName: n[1] }
                  : "string" == typeof n
                  ? { prefix: e, iconName: n }
                  : void 0)(t, this.config.defaultPrefix);
              if ("icon" in i) return i;
              const r = this.iconLibrary.getIconDefinition(
                i.prefix,
                i.iconName
              );
              return null != r
                ? r
                : (((n) => {
                    throw new Error(
                      `Could not find icon with iconName=${n.iconName} and prefix=${n.prefix} in the icon library.`
                    );
                  })(i),
                  null);
            }
            buildParams() {
              const t = {
                  flip: this.flip,
                  spin: this.spin,
                  pulse: this.pulse,
                  border: this.border,
                  inverse: this.inverse,
                  size: this.size || null,
                  pull: this.pull || null,
                  rotate: this.rotate || null,
                  fixedWidth:
                    "boolean" == typeof this.fixedWidth
                      ? this.fixedWidth
                      : this.config.fixedWidth,
                  stackItemSize:
                    null != this.stackItem
                      ? this.stackItem.stackItemSize
                      : null,
                },
                i =
                  "string" == typeof this.transform
                    ? l__transform(this.transform)
                    : this.transform;
              return {
                title: this.title,
                transform: i,
                classes: [...jne(t), ...this.classes],
                mask:
                  null != this.mask ? this.findIconDefinition(this.mask) : null,
                styles: null != this.styles ? this.styles : {},
                symbol: this.symbol,
                attributes: { role: this.a11yRole },
              };
            }
            renderIcon(t, i) {
              const r = u_(t, i);
              this.renderedIconHTML = this.sanitizer.bypassSecurityTrustHtml(
                r.html.join("\n")
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(Bh), _(Gne), _(Wne), _(qne, 8), _(Zne, 8));
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["fa-icon"]],
              hostAttrs: [1, "ng-fa-icon"],
              hostVars: 2,
              hostBindings: function (t, i) {
                2 & t &&
                  (Lo("innerHTML", i.renderedIconHTML, N5),
                  be("title", i.title));
              },
              inputs: {
                icon: "icon",
                title: "title",
                spin: "spin",
                pulse: "pulse",
                mask: "mask",
                styles: "styles",
                flip: "flip",
                size: "size",
                pull: "pull",
                border: "border",
                inverse: "inverse",
                symbol: "symbol",
                rotate: "rotate",
                fixedWidth: "fixedWidth",
                classes: "classes",
                transform: "transform",
                a11yRole: "a11yRole",
              },
              features: [Je],
              decls: 0,
              vars: 0,
              template: function (t, i) {},
              encapsulation: 2,
            })),
            n
          );
        })(),
        Yne = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({})),
            n
          );
        })();
      function Qne(n, e) {
        if (1 & n) {
          var t = Pn();
          w(0, "a", 11),
            de("keyup.enter", function () {
              return Vt(t), P(3), qe(1).previous();
            })("click", function () {
              return Vt(t), P(3), qe(1).previous();
            }),
            q(1),
            w(2, "span", 12),
            q(3),
            D(),
            D();
        }
        if (2 & n) {
          var i = P(3);
          be("aria-label", i.previousLabel + " " + i.screenReaderPageLabel),
            S(1),
            $1(" ", i.previousLabel, " "),
            S(2),
            Ve(i.screenReaderPageLabel);
        }
      }
      function Xne(n, e) {
        if (
          (1 & n && (w(0, "span"), q(1), w(2, "span", 12), q(3), D(), D()),
          2 & n)
        ) {
          var t = P(3);
          S(1),
            $1(" ", t.previousLabel, " "),
            S(2),
            Ve(t.screenReaderPageLabel);
        }
      }
      function Jne(n, e) {
        if (
          (1 & n &&
            (w(0, "li", 8),
            Q(1, Qne, 4, 3, "a", 9),
            Q(2, Xne, 4, 2, "span", 10),
            D()),
          2 & n)
        ) {
          P(2);
          var t = qe(1);
          ut("disabled", t.isFirstPage()),
            S(1),
            N("ngIf", 1 < t.getCurrent()),
            S(1),
            N("ngIf", t.isFirstPage());
        }
      }
      function e2e(n, e) {
        if (1 & n) {
          var t = Pn();
          w(0, "a", 11),
            de("keyup.enter", function () {
              Vt(t);
              var o = P().$implicit;
              return P(2), qe(1).setCurrent(o.value);
            })("click", function () {
              Vt(t);
              var o = P().$implicit;
              return P(2), qe(1).setCurrent(o.value);
            }),
            w(1, "span", 12),
            q(2),
            D(),
            w(3, "span"),
            q(4),
            wi(5, "number"),
            D(),
            D();
        }
        if (2 & n) {
          var i = P().$implicit,
            r = P(2);
          S(2),
            $1("", r.screenReaderPageLabel, " "),
            S(2),
            Ve("..." === i.label ? i.label : Oo(5, 2, i.label, ""));
        }
      }
      function t2e(n, e) {
        if (
          (1 & n &&
            (Lr(0),
            w(1, "span", 12),
            q(2),
            D(),
            w(3, "span"),
            q(4),
            wi(5, "number"),
            D(),
            Tr()),
          2 & n)
        ) {
          var t = P().$implicit,
            i = P(2);
          S(2),
            $1("", i.screenReaderCurrentLabel, " "),
            S(2),
            Ve("..." === t.label ? t.label : Oo(5, 2, t.label, ""));
        }
      }
      function n2e(n, e) {
        if (
          (1 & n &&
            (w(0, "li"),
            Q(1, e2e, 6, 5, "a", 9),
            Q(2, t2e, 6, 5, "ng-container", 10),
            D()),
          2 & n)
        ) {
          var t = e.$implicit;
          P(2);
          var i = qe(1);
          ut("current", i.getCurrent() === t.value)(
            "ellipsis",
            "..." === t.label
          ),
            S(1),
            N("ngIf", i.getCurrent() !== t.value),
            S(1),
            N("ngIf", i.getCurrent() === t.value);
        }
      }
      function i2e(n, e) {
        if (1 & n) {
          var t = Pn();
          w(0, "a", 11),
            de("keyup.enter", function () {
              return Vt(t), P(3), qe(1).next();
            })("click", function () {
              return Vt(t), P(3), qe(1).next();
            }),
            q(1),
            w(2, "span", 12),
            q(3),
            D(),
            D();
        }
        if (2 & n) {
          var i = P(3);
          be("aria-label", i.nextLabel + " " + i.screenReaderPageLabel),
            S(1),
            $1(" ", i.nextLabel, " "),
            S(2),
            Ve(i.screenReaderPageLabel);
        }
      }
      function r2e(n, e) {
        if (
          (1 & n && (w(0, "span"), q(1), w(2, "span", 12), q(3), D(), D()),
          2 & n)
        ) {
          var t = P(3);
          S(1), $1(" ", t.nextLabel, " "), S(2), Ve(t.screenReaderPageLabel);
        }
      }
      function s2e(n, e) {
        if (
          (1 & n &&
            (w(0, "li", 13),
            Q(1, i2e, 4, 3, "a", 9),
            Q(2, r2e, 4, 2, "span", 10),
            D()),
          2 & n)
        ) {
          P(2);
          var t = qe(1);
          ut("disabled", t.isLastPage()),
            S(1),
            N("ngIf", !t.isLastPage()),
            S(1),
            N("ngIf", t.isLastPage());
        }
      }
      function o2e(n, e) {
        if (
          (1 & n &&
            (w(0, "ul", 3),
            Q(1, Jne, 3, 4, "li", 4),
            w(2, "li", 5),
            q(3),
            D(),
            Q(4, n2e, 3, 6, "li", 6),
            Q(5, s2e, 3, 4, "li", 7),
            D()),
          2 & n)
        ) {
          var t = P(),
            i = qe(1);
          ut("responsive", t.responsive),
            be("aria-label", t.screenReaderPaginationLabel),
            S(1),
            N("ngIf", t.directionLinks),
            S(2),
            b3(" ", i.getCurrent(), " / ", i.getLastPage(), " "),
            S(1),
            N("ngForOf", i.pages)("ngForTrackBy", t.trackByIndex),
            S(1),
            N("ngIf", t.directionLinks);
        }
      }
      var ks = (function () {
          function n() {
            (this.change = new $()),
              (this.instances = {}),
              (this.DEFAULT_ID = "DEFAULT_PAGINATION_ID");
          }
          return (
            (n.prototype.defaultId = function () {
              return this.DEFAULT_ID;
            }),
            (n.prototype.register = function (e) {
              return (
                null == e.id && (e.id = this.DEFAULT_ID),
                this.instances[e.id]
                  ? this.updateInstance(e)
                  : ((this.instances[e.id] = e), !0)
              );
            }),
            (n.prototype.updateInstance = function (e) {
              var t = !1;
              for (var i in this.instances[e.id])
                e[i] !== this.instances[e.id][i] &&
                  ((this.instances[e.id][i] = e[i]), (t = !0));
              return t;
            }),
            (n.prototype.getCurrentPage = function (e) {
              if (this.instances[e]) return this.instances[e].currentPage;
            }),
            (n.prototype.setCurrentPage = function (e, t) {
              if (this.instances[e]) {
                var i = this.instances[e];
                t <= Math.ceil(i.totalItems / i.itemsPerPage) &&
                  1 <= t &&
                  ((this.instances[e].currentPage = t), this.change.emit(e));
              }
            }),
            (n.prototype.setTotalItems = function (e, t) {
              this.instances[e] &&
                0 <= t &&
                ((this.instances[e].totalItems = t), this.change.emit(e));
            }),
            (n.prototype.setItemsPerPage = function (e, t) {
              this.instances[e] &&
                ((this.instances[e].itemsPerPage = t), this.change.emit(e));
            }),
            (n.prototype.getInstance = function (e) {
              return (
                void 0 === e && (e = this.DEFAULT_ID),
                this.instances[e] ? this.clone(this.instances[e]) : {}
              );
            }),
            (n.prototype.clone = function (e) {
              var t = {};
              for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
              return t;
            }),
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = z({
              token: n,
              factory: function (e) {
                return n.ɵfac(e);
              },
            })),
            n
          );
        })(),
        c2e = function (n, e) {
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.metadata
          )
            return Reflect.metadata(n, e);
        },
        l2e = Number.MAX_SAFE_INTEGER,
        u2e = (function () {
          function n(e) {
            (this.service = e), (this.state = {});
          }
          return (
            (n.prototype.transform = function (e, t) {
              if (!(e instanceof Array)) {
                var i = t.id || this.service.defaultId();
                return this.state[i] ? this.state[i].slice : e;
              }
              var a,
                c,
                r = t.totalItems && t.totalItems !== e.length,
                s = this.createInstance(e, t),
                o = s.id,
                l = s.itemsPerPage,
                u = this.service.register(s);
              if (!r && e instanceof Array) {
                if (
                  this.stateIsIdentical(
                    o,
                    e,
                    (a = (s.currentPage - 1) * (l = +l || l2e)),
                    (c = a + l)
                  )
                )
                  return this.state[o].slice;
                var h = e.slice(a, c);
                return (
                  this.saveState(o, e, h, a, c), this.service.change.emit(o), h
                );
              }
              return (
                u && this.service.change.emit(o),
                this.saveState(o, e, e, a, c),
                e
              );
            }),
            (n.prototype.createInstance = function (e, t) {
              return (
                this.checkConfig(t),
                {
                  id: null != t.id ? t.id : this.service.defaultId(),
                  itemsPerPage: +t.itemsPerPage || 0,
                  currentPage: +t.currentPage || 1,
                  totalItems: +t.totalItems || e.length,
                }
              );
            }),
            (n.prototype.checkConfig = function (e) {
              var i = ["itemsPerPage", "currentPage"].filter(function (r) {
                return !(r in e);
              });
              if (0 < i.length)
                throw new Error(
                  "PaginatePipe: Argument is missing the following required properties: " +
                    i.join(", ")
                );
            }),
            (n.prototype.saveState = function (e, t, i, r, s) {
              this.state[e] = {
                collection: t,
                size: t.length,
                slice: i,
                start: r,
                end: s,
              };
            }),
            (n.prototype.stateIsIdentical = function (e, t, i, r) {
              var s = this.state[e];
              return (
                !!s &&
                !(s.size !== t.length || s.start !== i || s.end !== r) &&
                s.slice.every(function (a, c) {
                  return a === t[i + c];
                })
              );
            }),
            (n = (function (n, e, t, i) {
              var o,
                r = arguments.length,
                s =
                  r < 3
                    ? e
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(e, t))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                s = Reflect.decorate(n, e, t, i);
              else
                for (var a = n.length - 1; a >= 0; a--)
                  (o = n[a]) &&
                    (s = (r < 3 ? o(s) : r > 3 ? o(e, t, s) : o(e, t)) || s);
              return r > 3 && s && Object.defineProperty(e, t, s), s;
            })([c2e("design:paramtypes", [ks])], n)),
            (n.ɵfac = function (t) {
              return new (t || n)(_(ks, 16));
            }),
            (n.ɵpipe = _t({ name: "paginate", type: n, pure: !1 })),
            n
          );
        })(),
        d1 = function (n, e, t, i) {
          var o,
            r = arguments.length,
            s =
              r < 3
                ? e
                : null === i
                ? (i = Object.getOwnPropertyDescriptor(e, t))
                : i;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(n, e, t, i);
          else
            for (var a = n.length - 1; a >= 0; a--)
              (o = n[a]) &&
                (s = (r < 3 ? o(s) : r > 3 ? o(e, t, s) : o(e, t)) || s);
          return r > 3 && s && Object.defineProperty(e, t, s), s;
        },
        xt = function (n, e) {
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.metadata
          )
            return Reflect.metadata(n, e);
        };
      function $8(n) {
        return !!n && "false" !== n;
      }
      var f2e = (function () {
          function n() {
            (this.maxSize = 7),
              (this.previousLabel = "Previous"),
              (this.nextLabel = "Next"),
              (this.screenReaderPaginationLabel = "Pagination"),
              (this.screenReaderPageLabel = "page"),
              (this.screenReaderCurrentLabel = "You're on page"),
              (this.pageChange = new $()),
              (this.pageBoundsCorrection = new $()),
              (this._directionLinks = !0),
              (this._autoHide = !1),
              (this._responsive = !1);
          }
          return (
            Object.defineProperty(n.prototype, "directionLinks", {
              get: function () {
                return this._directionLinks;
              },
              set: function (e) {
                this._directionLinks = $8(e);
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(n.prototype, "autoHide", {
              get: function () {
                return this._autoHide;
              },
              set: function (e) {
                this._autoHide = $8(e);
              },
              enumerable: !0,
              configurable: !0,
            }),
            Object.defineProperty(n.prototype, "responsive", {
              get: function () {
                return this._responsive;
              },
              set: function (e) {
                this._responsive = $8(e);
              },
              enumerable: !0,
              configurable: !0,
            }),
            (n.prototype.trackByIndex = function (e) {
              return e;
            }),
            d1([s1(), xt("design:type", String)], n.prototype, "id", void 0),
            d1(
              [s1(), xt("design:type", Number)],
              n.prototype,
              "maxSize",
              void 0
            ),
            d1(
              [
                s1(),
                xt("design:type", Boolean),
                xt("design:paramtypes", [Boolean]),
              ],
              n.prototype,
              "directionLinks",
              null
            ),
            d1(
              [
                s1(),
                xt("design:type", Boolean),
                xt("design:paramtypes", [Boolean]),
              ],
              n.prototype,
              "autoHide",
              null
            ),
            d1(
              [
                s1(),
                xt("design:type", Boolean),
                xt("design:paramtypes", [Boolean]),
              ],
              n.prototype,
              "responsive",
              null
            ),
            d1(
              [s1(), xt("design:type", String)],
              n.prototype,
              "previousLabel",
              void 0
            ),
            d1(
              [s1(), xt("design:type", String)],
              n.prototype,
              "nextLabel",
              void 0
            ),
            d1(
              [s1(), xt("design:type", String)],
              n.prototype,
              "screenReaderPaginationLabel",
              void 0
            ),
            d1(
              [s1(), xt("design:type", String)],
              n.prototype,
              "screenReaderPageLabel",
              void 0
            ),
            d1(
              [s1(), xt("design:type", String)],
              n.prototype,
              "screenReaderCurrentLabel",
              void 0
            ),
            d1([Bo(), xt("design:type", $)], n.prototype, "pageChange", void 0),
            d1(
              [Bo(), xt("design:type", $)],
              n.prototype,
              "pageBoundsCorrection",
              void 0
            ),
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["pagination-controls"]],
              inputs: {
                maxSize: "maxSize",
                previousLabel: "previousLabel",
                nextLabel: "nextLabel",
                screenReaderPaginationLabel: "screenReaderPaginationLabel",
                screenReaderPageLabel: "screenReaderPageLabel",
                screenReaderCurrentLabel: "screenReaderCurrentLabel",
                directionLinks: "directionLinks",
                autoHide: "autoHide",
                responsive: "responsive",
                id: "id",
              },
              outputs: {
                pageChange: "pageChange",
                pageBoundsCorrection: "pageBoundsCorrection",
              },
              decls: 3,
              vars: 3,
              consts: [
                [3, "id", "maxSize", "pageChange", "pageBoundsCorrection"],
                ["p", "paginationApi"],
                ["class", "ngx-pagination", 3, "responsive", 4, "ngIf"],
                [1, "ngx-pagination"],
                ["class", "pagination-previous", 3, "disabled", 4, "ngIf"],
                [1, "small-screen"],
                [
                  3,
                  "current",
                  "ellipsis",
                  4,
                  "ngFor",
                  "ngForOf",
                  "ngForTrackBy",
                ],
                ["class", "pagination-next", 3, "disabled", 4, "ngIf"],
                [1, "pagination-previous"],
                ["tabindex", "0", 3, "keyup.enter", "click", 4, "ngIf"],
                [4, "ngIf"],
                ["tabindex", "0", 3, "keyup.enter", "click"],
                [1, "show-for-sr"],
                [1, "pagination-next"],
              ],
              template: function (t, i) {
                if (
                  (1 & t &&
                    (w(0, "pagination-template", 0, 1),
                    de("pageChange", function (o) {
                      return i.pageChange.emit(o);
                    })("pageBoundsCorrection", function (o) {
                      return i.pageBoundsCorrection.emit(o);
                    }),
                    Q(2, o2e, 6, 9, "ul", 2),
                    D()),
                  2 & t)
                ) {
                  var r = qe(1);
                  N("id", i.id)("maxSize", i.maxSize),
                    S(2),
                    N("ngIf", !(i.autoHide && r.pages.length <= 1));
                }
              },
              directives: function () {
                return [h2e, zi, d0];
              },
              pipes: function () {
                return [Dh];
              },
              styles: [
                "\n.ngx-pagination {\n  margin-left: 0;\n  margin-bottom: 1rem; }\n  .ngx-pagination::before, .ngx-pagination::after {\n    content: ' ';\n    display: table; }\n  .ngx-pagination::after {\n    clear: both; }\n  .ngx-pagination li {\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    margin-right: 0.0625rem;\n    border-radius: 0; }\n  .ngx-pagination li {\n    display: inline-block; }\n  .ngx-pagination a,\n  .ngx-pagination button {\n    color: #0a0a0a; \n    display: block;\n    padding: 0.1875rem 0.625rem;\n    border-radius: 0; }\n    .ngx-pagination a:hover,\n    .ngx-pagination button:hover {\n      background: #e6e6e6; }\n  .ngx-pagination .current {\n    padding: 0.1875rem 0.625rem;\n    background: #2199e8;\n    color: #fefefe;\n    cursor: default; }\n  .ngx-pagination .disabled {\n    padding: 0.1875rem 0.625rem;\n    color: #cacaca;\n    cursor: default; } \n    .ngx-pagination .disabled:hover {\n      background: transparent; }\n  .ngx-pagination a, .ngx-pagination button {\n    cursor: pointer; }\n\n.ngx-pagination .pagination-previous a::before,\n.ngx-pagination .pagination-previous.disabled::before { \n  content: '\xab';\n  display: inline-block;\n  margin-right: 0.5rem; }\n\n.ngx-pagination .pagination-next a::after,\n.ngx-pagination .pagination-next.disabled::after {\n  content: '\xbb';\n  display: inline-block;\n  margin-left: 0.5rem; }\n\n.ngx-pagination .show-for-sr {\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0); }\n.ngx-pagination .small-screen {\n  display: none; }\n@media screen and (max-width: 601px) {\n  .ngx-pagination.responsive .small-screen {\n    display: inline-block; } \n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\n    display: none; }\n}\n  ",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        Is = function (n, e, t, i) {
          var o,
            r = arguments.length,
            s =
              r < 3
                ? e
                : null === i
                ? (i = Object.getOwnPropertyDescriptor(e, t))
                : i;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(n, e, t, i);
          else
            for (var a = n.length - 1; a >= 0; a--)
              (o = n[a]) &&
                (s = (r < 3 ? o(s) : r > 3 ? o(e, t, s) : o(e, t)) || s);
          return r > 3 && s && Object.defineProperty(e, t, s), s;
        },
        Hs = function (n, e) {
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.metadata
          )
            return Reflect.metadata(n, e);
        },
        h2e = (function () {
          function n(e, t) {
            var i = this;
            (this.service = e),
              (this.changeDetectorRef = t),
              (this.maxSize = 7),
              (this.pageChange = new $()),
              (this.pageBoundsCorrection = new $()),
              (this.pages = []),
              (this.changeSub = this.service.change.subscribe(function (r) {
                i.id === r &&
                  (i.updatePageLinks(),
                  i.changeDetectorRef.markForCheck(),
                  i.changeDetectorRef.detectChanges());
              }));
          }
          return (
            (n.prototype.ngOnInit = function () {
              void 0 === this.id && (this.id = this.service.defaultId()),
                this.updatePageLinks();
            }),
            (n.prototype.ngOnChanges = function (e) {
              this.updatePageLinks();
            }),
            (n.prototype.ngOnDestroy = function () {
              this.changeSub.unsubscribe();
            }),
            (n.prototype.previous = function () {
              this.checkValidId(), this.setCurrent(this.getCurrent() - 1);
            }),
            (n.prototype.next = function () {
              this.checkValidId(), this.setCurrent(this.getCurrent() + 1);
            }),
            (n.prototype.isFirstPage = function () {
              return 1 === this.getCurrent();
            }),
            (n.prototype.isLastPage = function () {
              return this.getLastPage() === this.getCurrent();
            }),
            (n.prototype.setCurrent = function (e) {
              this.pageChange.emit(e);
            }),
            (n.prototype.getCurrent = function () {
              return this.service.getCurrentPage(this.id);
            }),
            (n.prototype.getLastPage = function () {
              var e = this.service.getInstance(this.id);
              return e.totalItems < 1
                ? 1
                : Math.ceil(e.totalItems / e.itemsPerPage);
            }),
            (n.prototype.getTotalItems = function () {
              return this.service.getInstance(this.id).totalItems;
            }),
            (n.prototype.checkValidId = function () {
              null == this.service.getInstance(this.id).id &&
                console.warn(
                  'PaginationControlsDirective: the specified id "' +
                    this.id +
                    '" does not match any registered PaginationInstance'
                );
            }),
            (n.prototype.updatePageLinks = function () {
              var e = this,
                t = this.service.getInstance(this.id),
                i = this.outOfBoundCorrection(t);
              i !== t.currentPage
                ? setTimeout(function () {
                    e.pageBoundsCorrection.emit(i),
                      (e.pages = e.createPageArray(
                        t.currentPage,
                        t.itemsPerPage,
                        t.totalItems,
                        e.maxSize
                      ));
                  })
                : (this.pages = this.createPageArray(
                    t.currentPage,
                    t.itemsPerPage,
                    t.totalItems,
                    this.maxSize
                  ));
            }),
            (n.prototype.outOfBoundCorrection = function (e) {
              var t = Math.ceil(e.totalItems / e.itemsPerPage);
              return t < e.currentPage && 0 < t
                ? t
                : e.currentPage < 1
                ? 1
                : e.currentPage;
            }),
            (n.prototype.createPageArray = function (e, t, i, r) {
              r = +r;
              for (
                var s = [],
                  o = Math.max(Math.ceil(i / t), 1),
                  a = Math.ceil(r / 2),
                  c = e <= a,
                  l = o - a < e,
                  u = !c && !l,
                  f = r < o,
                  h = 1;
                h <= o && h <= r;

              ) {
                var p = this.calculatePageNumber(h, e, r, o);
                s.push({
                  label:
                    f && ((2 === h && (u || l)) || (h === r - 1 && (u || c)))
                      ? "..."
                      : p,
                  value: p,
                }),
                  h++;
              }
              return s;
            }),
            (n.prototype.calculatePageNumber = function (e, t, i, r) {
              var s = Math.ceil(i / 2);
              return e === i
                ? r
                : 1 === e
                ? e
                : i < r
                ? r - s < t
                  ? r - i + e
                  : s < t
                  ? t - s + e
                  : e
                : e;
            }),
            Is([s1(), Hs("design:type", String)], n.prototype, "id", void 0),
            Is(
              [s1(), Hs("design:type", Number)],
              n.prototype,
              "maxSize",
              void 0
            ),
            Is([Bo(), Hs("design:type", $)], n.prototype, "pageChange", void 0),
            Is(
              [Bo(), Hs("design:type", $)],
              n.prototype,
              "pageBoundsCorrection",
              void 0
            ),
            ((n = Is([Hs("design:paramtypes", [ks, q1])], n)).ɵfac = function (
              t
            ) {
              return new (t || n)(_(ks), _(q1));
            }),
            (n.ɵdir = V({
              type: n,
              selectors: [
                ["pagination-template"],
                ["", "pagination-template", ""],
              ],
              inputs: { maxSize: "maxSize", id: "id" },
              outputs: {
                pageChange: "pageChange",
                pageBoundsCorrection: "pageBoundsCorrection",
              },
              exportAs: ["paginationApi"],
              features: [Je],
            })),
            n
          );
        })(),
        d2e = (function () {
          function n() {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n })),
            (n.ɵinj = ve({ providers: [ks], imports: [[Li]] })),
            n
          );
        })();
      function p2e(n, e) {
        if ((1 & n && (w(0, "div", 5), q(1), D()), 2 & n)) {
          const t = P();
          S(1), Ve(t.errorMessage);
        }
      }
      function m2e(n, e) {
        if ((1 & n && se(0, "img", 15), 2 & n)) {
          const t = P().$implicit;
          B1("src", t.sprites.front_default, a2), B1("alt", t.name);
        }
      }
      function g2e(n, e) {
        if ((1 & n && se(0, "img", 15), 2 & n)) {
          const t = P().$implicit;
          B1("src", t.sprites.front_shiny, a2), B1("alt", t.name);
        }
      }
      function v2e(n, e) {
        if ((1 & n && se(0, "img", 16), 2 & n)) {
          const t = P().$implicit;
          B1("src", t.sprites.back_default, a2), B1("alt", t.name);
        }
      }
      function _2e(n, e) {
        if ((1 & n && se(0, "img", 16), 2 & n)) {
          const t = P().$implicit;
          B1("src", t.sprites.back_shiny, a2), B1("alt", t.name);
        }
      }
      function y2e(n, e) {
        if (
          (1 & n &&
            (w(0, "div", 6),
            se(1, "img", 7),
            w(2, "div", 8),
            Q(3, m2e, 1, 2, "img", 9),
            Q(4, g2e, 1, 2, "img", 9),
            Q(5, v2e, 1, 2, "img", 10),
            Q(6, _2e, 1, 2, "img", 10),
            D(),
            w(7, "div", 11),
            w(8, "h3"),
            q(9),
            wi(10, "titlecase"),
            D(),
            D(),
            w(11, "p", 12),
            q(12),
            wi(13, "titlecase"),
            D(),
            w(14, "div", 13),
            w(15, "span"),
            w(16, "p"),
            w(17, "b"),
            se(18, "fa-icon", 14),
            D(),
            q(19),
            w(20, "b"),
            q(21, " Kg"),
            D(),
            D(),
            w(22, "p"),
            w(23, "b"),
            se(24, "fa-icon", 14),
            D(),
            q(25),
            w(26, "b"),
            q(27, " M"),
            D(),
            D(),
            w(28, "p"),
            w(29, "b"),
            se(30, "fa-icon", 14),
            D(),
            q(31),
            D(),
            D(),
            w(32, "span"),
            w(33, "p"),
            w(34, "b"),
            se(35, "fa-icon", 14),
            D(),
            q(36),
            D(),
            w(37, "p"),
            w(38, "b"),
            se(39, "fa-icon", 14),
            D(),
            q(40),
            D(),
            w(41, "p"),
            w(42, "b"),
            se(43, "fa-icon", 14),
            D(),
            q(44),
            D(),
            D(),
            D(),
            D()),
          2 & n)
        ) {
          const t = e.$implicit,
            i = P();
          (function Wu(n) {
            D1(Rt, U1, n, !0);
          })(t.types[0].type.name),
            S(3),
            N("ngIf", i.default),
            S(1),
            N("ngIf", i.shiny),
            S(1),
            N("ngIf", i.default),
            S(1),
            N("ngIf", i.shiny),
            S(3),
            Ve(N3(10, 21, t.name)),
            S(3),
            Ve(N3(13, 23, t.types[0].type.name)),
            S(6),
            N("icon", i.faWeight),
            S(1),
            Ve(t.weight / 10),
            S(5),
            N("icon", i.faArrowsAltV),
            S(1),
            Ve(t.height / 10),
            S(5),
            N("icon", i.faHeartbeat),
            S(1),
            Ve(t.stats[0].base_stat),
            S(4),
            N("icon", i.faSkullCrossbones),
            S(1),
            Ve(t.stats[1].base_stat),
            S(3),
            N("icon", i.faShieldAlt),
            S(1),
            Ve(t.stats[2].base_stat),
            S(3),
            N("icon", i.faTachometerAlt),
            S(1),
            Ve(t.stats[5].base_stat);
        }
      }
      const C2e = function (n, e) {
        return { itemsPerPage: 16, currentPage: n, totalItems: e };
      };
      let M2e = (() => {
          class n {
            constructor(t) {
              (this.dataService = t),
                (this.pokemonData = []),
                (this.pokemonNumber = 0),
                (this.pokemonLimit = 16),
                (this.pokemonMode = ""),
                (this.page = 1),
                (this.shiny = !1),
                (this.default = !0),
                (this.userInput = ""),
                (this.error = !1),
                (this.errorMessage = ""),
                (this.faSkullCrossbones = uv),
                (this.faShieldAlt = lv),
                (this.faTachometerAlt = fv),
                (this.faArrowsAltV = av),
                (this.faHeartbeat = cv),
                (this.faWeight = hv);
            }
            ngOnInit() {
              this.getPokemon(), this.getInputUndFilter(), this.updateMode();
            }
            updateMode() {
              this.dataService.getMode().subscribe((t) => {
                (this.pokemonMode = t),
                  (this.default = "default" == this.pokemonMode),
                  (this.shiny = "shiny" == this.pokemonMode);
              });
            }
            getInputUndFilter() {
              this.dataService.getMessage().subscribe((t) => {
                (this.userInput = t),
                  0 !== this.userInput.length
                    ? (this.pokemonLimit = 150)
                    : ((this.pokemonLimit = 16), (this.pokemonData = [])),
                  (this.pokemonData = []),
                  this.getPokemon();
              });
            }
            getPokemon() {
              this.dataService
                .getPokemon(this.pokemonLimit, this.page + 0)
                .subscribe(
                  (t) => {
                    (this.pokemonNumber = t.count),
                      t.results.filter((i) => {
                        i.name.includes(this.userInput)
                          ? this.dataService.getMoreData(i.name).subscribe(
                              (r) => {
                                this.pokemonData.push(r), (this.error = !1);
                              },
                              (r) => {
                                (this.error = !0),
                                  (this.errorMessage = `Something went wrong ${r.message}`);
                              }
                            )
                          : ((this.error = !0),
                            (this.errorMessage =
                              "Pokemon with this name Not Found ! try with another Name"));
                      });
                  },
                  (t) => {
                    (this.error = !0),
                      (this.errorMessage = `Something went wrong ${t.message}`);
                  }
                );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(_(Aa));
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["app-pokemon-list"]],
              decls: 6,
              vars: 8,
              consts: [
                [
                  "href",
                  "http://fonts.cdnfonts.com/css/pokemon-solid",
                  "rel",
                  "stylesheet",
                ],
                [1, "pokemon-container"],
                ["class", "error-message", 4, "ngIf"],
                ["class", "box", 3, "class", 4, "ngFor", "ngForOf"],
                [3, "pageChange"],
                [1, "error-message"],
                [1, "box"],
                [
                  "src",
                  "assets/images/pokeball.png",
                  "alt",
                  "poke-ball",
                  1,
                  "poke-ball",
                ],
                [1, "boxImg"],
                ["class", "firstImg", 3, "src", "alt", 4, "ngIf"],
                ["class", "hoverImg", 3, "src", "alt", 4, "ngIf"],
                [1, "poke-name"],
                [1, "type"],
                [1, "description"],
                [3, "icon"],
                [1, "firstImg", 3, "src", "alt"],
                [1, "hoverImg", 3, "src", "alt"],
              ],
              template: function (t, i) {
                1 & t &&
                  (se(0, "link", 0),
                  w(1, "div", 1),
                  Q(2, p2e, 2, 1, "div", 2),
                  Q(3, y2e, 45, 25, "div", 3),
                  wi(4, "paginate"),
                  D(),
                  w(5, "pagination-controls", 4),
                  de("pageChange", function (s) {
                    return (i.page = s), (i.pokemonData = []), i.getPokemon();
                  }),
                  D()),
                  2 & t &&
                    (S(2),
                    N("ngIf", i.error),
                    S(1),
                    N(
                      "ngForOf",
                      Oo(
                        4,
                        2,
                        i.pokemonData,
                        (function e9(n, e, t, i, r) {
                          return n9(b(), yt(), n, e, t, i, r);
                        })(5, C2e, i.page, i.pokemonNumber)
                      )
                    ));
              },
              directives: [zi, d0, Kne, f2e],
              pipes: [u2e, bh],
              styles: [
                ".pokemon-container[_ngcontent-%COMP%]{display:flex;width:100%;flex-wrap:wrap;flex-direction:row;margin-top:40px;justify-content:center;align-items:center;min-height:75vh;height:auto}.box[_ngcontent-%COMP%]{width:10%;height:285px;box-shadow:1px 2px 4px #00000080;text-align:center;padding:1px;min-width:195px;margin:35px 10px;position:relative;z-index:3;border-radius:40px}.box[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%], span[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-around;flex-wrap:wrap;text-align:center}.box[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start}fa-icon[_ngcontent-%COMP%]{padding:0 10px;font-size:22px;color:#463e3e}.box[_ngcontent-%COMP%]   .poke-ball[_ngcontent-%COMP%]{width:250px;height:250px;position:absolute;top:-80px;left:-26px;right:0px;opacity:.9;z-index:1}.box[_ngcontent-%COMP%]   .boxImg[_ngcontent-%COMP%]{width:150px;height:100px;position:relative;margin:0 20px;z-index:2}.box[_ngcontent-%COMP%]   .boxImg[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:100%;transition:all linear .6s;cursor:pointer}.box[_ngcontent-%COMP%]   .hoverImg[_ngcontent-%COMP%]{position:absolute;width:120px;height:120px;top:0;left:0px;opacity:0}.box[_ngcontent-%COMP%]   .boxImg[_ngcontent-%COMP%]:hover   .firstImg[_ngcontent-%COMP%]{opacity:0}.box[_ngcontent-%COMP%]   .boxImg[_ngcontent-%COMP%]:hover   .hoverImg[_ngcontent-%COMP%]{opacity:1}.box[_ngcontent-%COMP%]   .poke-name[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{text-shadow:1px 2px 2px rgb(51,175,233);color:#000;z-index:3;position:relative;font-size:20px;font-family:italic;letter-spacing:1px}.type[_ngcontent-%COMP%]{background-color:#1b1a1a;border-radius:5px;box-shadow:1px 2px 4px #fffefe80;margin:20px 50px 10px;padding:2px;font-weight:700;color:#fff}.rock[_ngcontent-%COMP%]{background-color:#bfb6ae}.ghost[_ngcontent-%COMP%]{background-color:#a6a6a6}.electric[_ngcontent-%COMP%]{background-color:#0777d9}.bug[_ngcontent-%COMP%]{background-color:#a68f49}.poison[_ngcontent-%COMP%]{background-color:#8c3b7f}.normal[_ngcontent-%COMP%]{background-color:#f4f4f4}.fairy[_ngcontent-%COMP%]{background-color:#e6b3c0}.fire[_ngcontent-%COMP%]{background-color:#f24713}.grass[_ngcontent-%COMP%]{background-color:#72a603}.water[_ngcontent-%COMP%]{background-color:#0a89a6}.fighting[_ngcontent-%COMP%]{background-color:#262626}.psychic[_ngcontent-%COMP%]{background-color:#f2b66d}.ground[_ngcontent-%COMP%]{background-color:#8c8c8c}pagination-controls[_ngcontent-%COMP%]{text-align:center;width:90%}.error-message[_ngcontent-%COMP%]{color:red;text-align:center;font-family:Pokemon Solid,sans-serif;letter-spacing:3px}",
              ],
            })),
            n
          );
        })(),
        b2e = (() => {
          class n {
            constructor(t) {
              this.dataService = t;
            }
            intercept(t, i) {
              return i.handle(t).pipe(
                St((r) => {
                  this.dataService.loader.next(!0),
                    r.type == Ge.Response &&
                      200 === r.status &&
                      this.dataService.loader.next(!1);
                })
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(C(Aa));
            }),
            (n.ɵprov = z({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        w2e = (() => {
          class n {
            constructor() {}
            ngOnInit() {}
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵcmp = ot({
              type: n,
              selectors: [["app-not-found"]],
              decls: 5,
              vars: 0,
              consts: [
                [1, "not-found"],
                ["routerLink", "/"],
              ],
              template: function (t, i) {
                1 & t &&
                  (w(0, "div", 0),
                  w(1, "h1"),
                  q(2, "router not Found !!!"),
                  D(),
                  w(3, "a", 1),
                  q(4, "back to the Home page"),
                  D(),
                  D());
              },
              directives: [Ea],
              styles: [
                ".not-found[_ngcontent-%COMP%]{text-align:center}.not-found[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{color:red}",
              ],
            })),
            n
          );
        })(),
        D2e = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = Me({ type: n, bootstrap: [HO] })),
            (n.ɵinj = ve({
              providers: [{ provide: Q0, useClass: b2e, multi: !0 }],
              imports: [
                [
                  Ph,
                  NT,
                  qT,
                  NO,
                  km,
                  CO,
                  lk,
                  d2e,
                  Yne,
                  W0.forRoot([
                    { path: "", component: M2e },
                    { path: "**", component: w2e },
                  ]),
                ],
              ],
            })),
            n
          );
        })();
      (function OS() {
        $9 = !1;
      })(),
        ez()
          .bootstrapModule(D2e)
          .catch((n) => console.error(n));
    },
  },
  (oe) => {
    oe((oe.s = 911));
  },
]);
